#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CellNetixApps.Source.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CELLAPPS")]
	public partial class CellappsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTemp_Specimen(Temp_Specimen instance);
    partial void UpdateTemp_Specimen(Temp_Specimen instance);
    partial void DeleteTemp_Specimen(Temp_Specimen instance);
    partial void InsertAccession_Activity(Accession_Activity instance);
    partial void UpdateAccession_Activity(Accession_Activity instance);
    partial void DeleteAccession_Activity(Accession_Activity instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertItem_Group(Item_Group instance);
    partial void UpdateItem_Group(Item_Group instance);
    partial void DeleteItem_Group(Item_Group instance);
    partial void InsertItem_Log(Item_Log instance);
    partial void UpdateItem_Log(Item_Log instance);
    partial void DeleteItem_Log(Item_Log instance);
    partial void InsertTicket_Log(Ticket_Log instance);
    partial void UpdateTicket_Log(Ticket_Log instance);
    partial void DeleteTicket_Log(Ticket_Log instance);
    partial void InsertTicket_Stage(Ticket_Stage instance);
    partial void UpdateTicket_Stage(Ticket_Stage instance);
    partial void DeleteTicket_Stage(Ticket_Stage instance);
    partial void InsertTicket_Statuse(Ticket_Statuse instance);
    partial void UpdateTicket_Statuse(Ticket_Statuse instance);
    partial void DeleteTicket_Statuse(Ticket_Statuse instance);
    partial void InsertTicket_Source(Ticket_Source instance);
    partial void UpdateTicket_Source(Ticket_Source instance);
    partial void DeleteTicket_Source(Ticket_Source instance);
    partial void InsertTicket_Error(Ticket_Error instance);
    partial void UpdateTicket_Error(Ticket_Error instance);
    partial void DeleteTicket_Error(Ticket_Error instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertSTS_Override(STS_Override instance);
    partial void UpdateSTS_Override(STS_Override instance);
    partial void DeleteSTS_Override(STS_Override instance);
    partial void InsertLocation_Attribute(Location_Attribute instance);
    partial void UpdateLocation_Attribute(Location_Attribute instance);
    partial void DeleteLocation_Attribute(Location_Attribute instance);
    partial void InsertPrinter(Printer instance);
    partial void UpdatePrinter(Printer instance);
    partial void DeletePrinter(Printer instance);
    partial void InsertUser_Printer(User_Printer instance);
    partial void UpdateUser_Printer(User_Printer instance);
    partial void DeleteUser_Printer(User_Printer instance);
    partial void InsertMachine_Handheld(Machine_Handheld instance);
    partial void UpdateMachine_Handheld(Machine_Handheld instance);
    partial void DeleteMachine_Handheld(Machine_Handheld instance);
    partial void InsertMachine_Attribute(Machine_Attribute instance);
    partial void UpdateMachine_Attribute(Machine_Attribute instance);
    partial void DeleteMachine_Attribute(Machine_Attribute instance);
    partial void InsertMachine_Attribute_Type(Machine_Attribute_Type instance);
    partial void UpdateMachine_Attribute_Type(Machine_Attribute_Type instance);
    partial void DeleteMachine_Attribute_Type(Machine_Attribute_Type instance);
    partial void InsertMachine(Machine instance);
    partial void UpdateMachine(Machine instance);
    partial void DeleteMachine(Machine instance);
    partial void InsertTicket_Error_Attribute(Ticket_Error_Attribute instance);
    partial void UpdateTicket_Error_Attribute(Ticket_Error_Attribute instance);
    partial void DeleteTicket_Error_Attribute(Ticket_Error_Attribute instance);
    partial void InsertCrystal_Report(Crystal_Report instance);
    partial void UpdateCrystal_Report(Crystal_Report instance);
    partial void DeleteCrystal_Report(Crystal_Report instance);
    partial void InsertTemplate_Category(Template_Category instance);
    partial void UpdateTemplate_Category(Template_Category instance);
    partial void DeleteTemplate_Category(Template_Category instance);
    partial void InsertTemplate_Type(Template_Type instance);
    partial void UpdateTemplate_Type(Template_Type instance);
    partial void DeleteTemplate_Type(Template_Type instance);
    partial void InsertTemplate_Data(Template_Data instance);
    partial void UpdateTemplate_Data(Template_Data instance);
    partial void DeleteTemplate_Data(Template_Data instance);
    partial void InsertTemplate(Template instance);
    partial void UpdateTemplate(Template instance);
    partial void DeleteTemplate(Template instance);
    partial void InsertExtension(Extension instance);
    partial void UpdateExtension(Extension instance);
    partial void DeleteExtension(Extension instance);
    partial void InsertUser_Type(User_Type instance);
    partial void UpdateUser_Type(User_Type instance);
    partial void DeleteUser_Type(User_Type instance);
    partial void InsertWebsite(Website instance);
    partial void UpdateWebsite(Website instance);
    partial void DeleteWebsite(Website instance);
    partial void InsertWebsite_Page(Website_Page instance);
    partial void UpdateWebsite_Page(Website_Page instance);
    partial void DeleteWebsite_Page(Website_Page instance);
    partial void InsertUser_Role(User_Role instance);
    partial void UpdateUser_Role(User_Role instance);
    partial void DeleteUser_Role(User_Role instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertForm_Control_Type(Form_Control_Type instance);
    partial void UpdateForm_Control_Type(Form_Control_Type instance);
    partial void DeleteForm_Control_Type(Form_Control_Type instance);
    partial void InsertForm_Operator(Form_Operator instance);
    partial void UpdateForm_Operator(Form_Operator instance);
    partial void DeleteForm_Operator(Form_Operator instance);
    partial void InsertForm_Control(Form_Control instance);
    partial void UpdateForm_Control(Form_Control instance);
    partial void DeleteForm_Control(Form_Control instance);
    partial void InsertForm_Font(Form_Font instance);
    partial void UpdateForm_Font(Form_Font instance);
    partial void DeleteForm_Font(Form_Font instance);
    partial void InsertTicket_Error_Classification(Ticket_Error_Classification instance);
    partial void UpdateTicket_Error_Classification(Ticket_Error_Classification instance);
    partial void DeleteTicket_Error_Classification(Ticket_Error_Classification instance);
    partial void InsertPhone_Number(Phone_Number instance);
    partial void UpdatePhone_Number(Phone_Number instance);
    partial void DeletePhone_Number(Phone_Number instance);
    partial void InsertAccession_Log(Accession_Log instance);
    partial void UpdateAccession_Log(Accession_Log instance);
    partial void DeleteAccession_Log(Accession_Log instance);
    partial void InsertConference(Conference instance);
    partial void UpdateConference(Conference instance);
    partial void DeleteConference(Conference instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertConference_Image(Conference_Image instance);
    partial void UpdateConference_Image(Conference_Image instance);
    partial void DeleteConference_Image(Conference_Image instance);
    partial void InsertTicket_Error_Detail(Ticket_Error_Detail instance);
    partial void UpdateTicket_Error_Detail(Ticket_Error_Detail instance);
    partial void DeleteTicket_Error_Detail(Ticket_Error_Detail instance);
    partial void InsertTicket_Detail(Ticket_Detail instance);
    partial void UpdateTicket_Detail(Ticket_Detail instance);
    partial void DeleteTicket_Detail(Ticket_Detail instance);
    partial void InsertUser_Status(User_Status instance);
    partial void UpdateUser_Status(User_Status instance);
    partial void DeleteUser_Status(User_Status instance);
    partial void InsertTelepathology(Telepathology instance);
    partial void UpdateTelepathology(Telepathology instance);
    partial void DeleteTelepathology(Telepathology instance);
    partial void InsertNote_Topic(Note_Topic instance);
    partial void UpdateNote_Topic(Note_Topic instance);
    partial void DeleteNote_Topic(Note_Topic instance);
    partial void InsertSlide_Distribution_Manual_Scan(Slide_Distribution_Manual_Scan instance);
    partial void UpdateSlide_Distribution_Manual_Scan(Slide_Distribution_Manual_Scan instance);
    partial void DeleteSlide_Distribution_Manual_Scan(Slide_Distribution_Manual_Scan instance);
    partial void InsertItem_Waypoint(Item_Waypoint instance);
    partial void UpdateItem_Waypoint(Item_Waypoint instance);
    partial void DeleteItem_Waypoint(Item_Waypoint instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertTicket_Detail_Log(Ticket_Detail_Log instance);
    partial void UpdateTicket_Detail_Log(Ticket_Detail_Log instance);
    partial void DeleteTicket_Detail_Log(Ticket_Detail_Log instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertTemp_Slide(Temp_Slide instance);
    partial void UpdateTemp_Slide(Temp_Slide instance);
    partial void DeleteTemp_Slide(Temp_Slide instance);
    partial void InsertPrint_Template_Variable(Print_Template_Variable instance);
    partial void UpdatePrint_Template_Variable(Print_Template_Variable instance);
    partial void DeletePrint_Template_Variable(Print_Template_Variable instance);
    partial void InsertPrint_Template(Print_Template instance);
    partial void UpdatePrint_Template(Print_Template instance);
    partial void DeletePrint_Template(Print_Template instance);
    partial void InsertTicket_Group_User(Ticket_Group_User instance);
    partial void UpdateTicket_Group_User(Ticket_Group_User instance);
    partial void DeleteTicket_Group_User(Ticket_Group_User instance);
    partial void InsertTicket_Group(Ticket_Group instance);
    partial void UpdateTicket_Group(Ticket_Group instance);
    partial void DeleteTicket_Group(Ticket_Group instance);
    #endregion
		
		public CellappsDataContext() : 
				base(global::CellNetixApps.Properties.Settings.Default.CELLAPPSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CellappsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellappsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellappsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CellappsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Temp_Specimen> Temp_Specimens
		{
			get
			{
				return this.GetTable<Temp_Specimen>();
			}
		}
		
		public System.Data.Linq.Table<Accession_Activity> Accession_Activities
		{
			get
			{
				return this.GetTable<Accession_Activity>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Item_Group> Item_Groups
		{
			get
			{
				return this.GetTable<Item_Group>();
			}
		}
		
		public System.Data.Linq.Table<Item_Log> Item_Logs
		{
			get
			{
				return this.GetTable<Item_Log>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this.GetTable<Ticket_Log>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Stage> Ticket_Stages
		{
			get
			{
				return this.GetTable<Ticket_Stage>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Statuse> Ticket_Statuses
		{
			get
			{
				return this.GetTable<Ticket_Statuse>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Source> Ticket_Sources
		{
			get
			{
				return this.GetTable<Ticket_Source>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Error> Ticket_Errors
		{
			get
			{
				return this.GetTable<Ticket_Error>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<STS_Override> STS_Overrides
		{
			get
			{
				return this.GetTable<STS_Override>();
			}
		}
		
		public System.Data.Linq.Table<Location_Attribute> Location_Attributes
		{
			get
			{
				return this.GetTable<Location_Attribute>();
			}
		}
		
		public System.Data.Linq.Table<Printer> Printers
		{
			get
			{
				return this.GetTable<Printer>();
			}
		}
		
		public System.Data.Linq.Table<User_Printer> User_Printers
		{
			get
			{
				return this.GetTable<User_Printer>();
			}
		}
		
		public System.Data.Linq.Table<Machine_Handheld> Machine_Handhelds
		{
			get
			{
				return this.GetTable<Machine_Handheld>();
			}
		}
		
		public System.Data.Linq.Table<Machine_Attribute> Machine_Attributes
		{
			get
			{
				return this.GetTable<Machine_Attribute>();
			}
		}
		
		public System.Data.Linq.Table<Machine_Attribute_Type> Machine_Attribute_Types
		{
			get
			{
				return this.GetTable<Machine_Attribute_Type>();
			}
		}
		
		public System.Data.Linq.Table<Machine> Machines
		{
			get
			{
				return this.GetTable<Machine>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Error_Attribute> Ticket_Error_Attributes
		{
			get
			{
				return this.GetTable<Ticket_Error_Attribute>();
			}
		}
		
		public System.Data.Linq.Table<Crystal_Report> Crystal_Reports
		{
			get
			{
				return this.GetTable<Crystal_Report>();
			}
		}
		
		public System.Data.Linq.Table<Template_Category> Template_Categories
		{
			get
			{
				return this.GetTable<Template_Category>();
			}
		}
		
		public System.Data.Linq.Table<Template_Type> Template_Types
		{
			get
			{
				return this.GetTable<Template_Type>();
			}
		}
		
		public System.Data.Linq.Table<Template_Data> Template_Datas
		{
			get
			{
				return this.GetTable<Template_Data>();
			}
		}
		
		public System.Data.Linq.Table<Template> Templates
		{
			get
			{
				return this.GetTable<Template>();
			}
		}
		
		public System.Data.Linq.Table<Extension> Extensions
		{
			get
			{
				return this.GetTable<Extension>();
			}
		}
		
		public System.Data.Linq.Table<User_Type> User_Types
		{
			get
			{
				return this.GetTable<User_Type>();
			}
		}
		
		public System.Data.Linq.Table<Website> Websites
		{
			get
			{
				return this.GetTable<Website>();
			}
		}
		
		public System.Data.Linq.Table<Website_Page> Website_Pages
		{
			get
			{
				return this.GetTable<Website_Page>();
			}
		}
		
		public System.Data.Linq.Table<User_Role> User_Roles
		{
			get
			{
				return this.GetTable<User_Role>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Form_Control_Type> Form_Control_Types
		{
			get
			{
				return this.GetTable<Form_Control_Type>();
			}
		}
		
		public System.Data.Linq.Table<Form_Operator> Form_Operators
		{
			get
			{
				return this.GetTable<Form_Operator>();
			}
		}
		
		public System.Data.Linq.Table<Form_Control> Form_Controls
		{
			get
			{
				return this.GetTable<Form_Control>();
			}
		}
		
		public System.Data.Linq.Table<Form_Font> Form_Fonts
		{
			get
			{
				return this.GetTable<Form_Font>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Error_Classification> Ticket_Error_Classifications
		{
			get
			{
				return this.GetTable<Ticket_Error_Classification>();
			}
		}
		
		public System.Data.Linq.Table<Phone_Number> Phone_Numbers
		{
			get
			{
				return this.GetTable<Phone_Number>();
			}
		}
		
		public System.Data.Linq.Table<Accession_Log> Accession_Logs
		{
			get
			{
				return this.GetTable<Accession_Log>();
			}
		}
		
		public System.Data.Linq.Table<Conference> Conferences
		{
			get
			{
				return this.GetTable<Conference>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<Conference_Image> Conference_Images
		{
			get
			{
				return this.GetTable<Conference_Image>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Error_Detail> Ticket_Error_Details
		{
			get
			{
				return this.GetTable<Ticket_Error_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Detail> Ticket_Details
		{
			get
			{
				return this.GetTable<Ticket_Detail>();
			}
		}
		
		public System.Data.Linq.Table<User_Status> User_Status
		{
			get
			{
				return this.GetTable<User_Status>();
			}
		}
		
		public System.Data.Linq.Table<Telepathology> Telepathologies
		{
			get
			{
				return this.GetTable<Telepathology>();
			}
		}
		
		public System.Data.Linq.Table<Note_Topic> Note_Topics
		{
			get
			{
				return this.GetTable<Note_Topic>();
			}
		}
		
		public System.Data.Linq.Table<Slide_Distribution_Manual_Scan> Slide_Distribution_Manual_Scans
		{
			get
			{
				return this.GetTable<Slide_Distribution_Manual_Scan>();
			}
		}
		
		public System.Data.Linq.Table<Item_Waypoint> Item_Waypoints
		{
			get
			{
				return this.GetTable<Item_Waypoint>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Detail_Log> Ticket_Detail_Logs
		{
			get
			{
				return this.GetTable<Ticket_Detail_Log>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Temp_Slide> Temp_Slides
		{
			get
			{
				return this.GetTable<Temp_Slide>();
			}
		}
		
		public System.Data.Linq.Table<Print_Template_Variable> Print_Template_Variables
		{
			get
			{
				return this.GetTable<Print_Template_Variable>();
			}
		}
		
		public System.Data.Linq.Table<Print_Template> Print_Templates
		{
			get
			{
				return this.GetTable<Print_Template>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Group_User> Ticket_Group_Users
		{
			get
			{
				return this.GetTable<Ticket_Group_User>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Group> Ticket_Groups
		{
			get
			{
				return this.GetTable<Ticket_Group>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Get_Latest_Historical_Slide_Status", IsComposable=true)]
		public string FN_Get_Latest_Historical_Slide_Status([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Slide_ID", DbType="Int")] System.Nullable<int> slide_ID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slide_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Case_Images")]
		public int SP_Insert_Case_Images([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Case_Number", DbType="NVarChar(255)")] string case_Number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Image_Content", DbType="Image")] System.Data.Linq.Binary image_Content, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary image_thumbnail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> case_image_type_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string pp_label, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> slide_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), case_Number, image_Content, image_thumbnail, case_image_type_Id, pp_label, slide_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Case_Image_log")]
		public int SP_Insert_Case_Image_log([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Case_number", DbType="NVarChar(255)")] string case_number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Created_By_ID", DbType="Int")] System.Nullable<int> created_By_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status_ID", DbType="Int")] System.Nullable<int> status_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Scanner_ID", DbType="Int")] System.Nullable<int> scanner_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Case_Image_ID", DbType="Int")] System.Nullable<int> case_Image_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), case_number, created_By_ID, status_ID, scanner_ID, case_Image_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertItem_Log")]
		public int SP_InsertItem_Log([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Group_ID", DbType="Int")] System.Nullable<int> item_Group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Status_ID", DbType="Int")] System.Nullable<int> item_Status_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location_ID", DbType="Int")] System.Nullable<int> location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Machine_ID", DbType="Int")] System.Nullable<int> machine_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_Group_ID, item_Status_ID, location_ID, user_ID, machine_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_PP_Get_Assigned_To_ID_slideID", IsComposable=true)]
		public System.Nullable<int> FN_PP_Get_Assigned_To_ID_slideID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Slide_ID", DbType="Int")] System.Nullable<int> slide_ID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slide_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_Slide_Counts_In_Tray")]
		public ISingleResult<SP_Get_Slide_Counts_In_TrayResult> SP_Get_Slide_Counts_In_Tray([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID);
			return ((ISingleResult<SP_Get_Slide_Counts_In_TrayResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_User_Printers")]
		public int SP_Insert_User_Printers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Printer_ID", DbType="Int")] System.Nullable<int> printer_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID, printer_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Delete_Slides_From_Tray")]
		public int SP_Delete_Slides_From_Tray([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Group_ID", DbType="Int")] System.Nullable<int> item_Group_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_Group_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Get_Item_ID", IsComposable=true)]
		public System.Nullable<int> FN_Get_Item_ID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Type_ID", DbType="Int")] System.Nullable<int> item_Type_ID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, item_Type_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FN_Get_Item_Display_Name_ItemID", IsComposable=true)]
		public string FN_Get_Item_Display_Name_ItemID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Item_Group_Items")]
		public int SP_Insert_Item_Group_Items([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Group_ID", DbType="Int")] System.Nullable<int> item_Group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Group_Item_Type_ID", DbType="Int")] System.Nullable<int> item_Group_Item_Type_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Added_By_ID", DbType="Int")] System.Nullable<int> added_By_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID, item_Group_ID, item_Group_Item_Type_ID, added_By_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Item_Group_Items2")]
		public int SP_Insert_Item_Group_Items2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iParent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iChild, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Added_By_ID", DbType="Int")] System.Nullable<int> added_By_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iParent, iChild, added_By_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_InsertItem_LogWithNote")]
		public int SP_InsertItem_LogWithNote([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Group_ID", DbType="Int")] System.Nullable<int> item_Group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Status_ID", DbType="Int")] System.Nullable<int> item_Status_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location_ID", DbType="Int")] System.Nullable<int> location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Machine_ID", DbType="Int")] System.Nullable<int> machine_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> time)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_Group_ID, item_Status_ID, location_ID, user_ID, machine_ID, note, time);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Shipment")]
		public int SP_Insert_Shipment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start_Location_ID", DbType="Int")] System.Nullable<int> start_Location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="End_Location_ID", DbType="Int")] System.Nullable<int> end_Location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Machine_ID", DbType="Int")] System.Nullable<int> machine_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), start_Location_ID, end_Location_ID, user_ID, machine_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Activity_Log")]
		public ISingleResult<SP_Insert_Activity_LogResult> SP_Insert_Activity_Log([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID, item_ID);
			return ((ISingleResult<SP_Insert_Activity_LogResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_Pathologist_Location_From_Calix_Today")]
		public ISingleResult<SP_Get_Pathologist_Location_From_Calix_TodayResult> SP_Get_Pathologist_Location_From_Calix_Today([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID);
			return ((ISingleResult<SP_Get_Pathologist_Location_From_Calix_TodayResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_Shipments_Assigned_To_ID")]
		public ISingleResult<SP_Get_Shipments_Assigned_To_IDResult> SP_Get_Shipments_Assigned_To_ID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Start_Location_ID", DbType="Int")] System.Nullable<int> start_Location_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID, start_Location_ID);
			return ((ISingleResult<SP_Get_Shipments_Assigned_To_IDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EncodeBarcode", IsComposable=true)]
		public string EncodeBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Value", DbType="Int")] System.Nullable<int> value, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeIdentifier", DbType="VarChar(1)")] string typeIdentifier)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), value, typeIdentifier).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Crystal_Manifest_Part3")]
		public ISingleResult<SP_Crystal_Manifest_Part3Result> SP_Crystal_Manifest_Part3([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID);
			return ((ISingleResult<SP_Crystal_Manifest_Part3Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_All_Slide_History_List")]
		public int SP_Get_All_Slide_History_List([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string slideList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slideList);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CreateCIForTray")]
		public int SP_CreateCIForTray([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Type_ID", DbType="Int")] System.Nullable<int> item_Type_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location_ID", DbType="Int")] System.Nullable<int> location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Machine_ID", DbType="Int")] System.Nullable<int> machine_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_Type_ID, location_ID, machine_ID, user_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_STS_Activity_Log")]
		public ISingleResult<SP_Get_STS_Activity_LogResult> SP_Get_STS_Activity_Log([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="Int")] System.Nullable<int> user_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID);
			return ((ISingleResult<SP_Get_STS_Activity_LogResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_Pathologist_Deliveries")]
		public ISingleResult<SP_Get_Pathologist_DeliveriesResult> SP_Get_Pathologist_Deliveries([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id);
			return ((ISingleResult<SP_Get_Pathologist_DeliveriesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Complete_Shipment_Part_1")]
		public int SP_Complete_Shipment_Part_1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location_ID", DbType="Int")] System.Nullable<int> location_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Machine_ID", DbType="Int")] System.Nullable<int> machine_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID, user_ID, location_ID, machine_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Update_Item_Assigned_To_ID")]
		public int SP_Update_Item_Assigned_To_ID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Assigned_To_ID", DbType="Int")] System.Nullable<int> assigned_To_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID, assigned_To_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Send_Email")]
		public int SP_Send_Email([global::System.Data.Linq.Mapping.ParameterAttribute(Name="To", DbType="NVarChar(255)")] string to, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(255)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Body", DbType="NVarChar(MAX)")] string body)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), to, subject, body);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_PP_Get_Order_history")]
		public ISingleResult<SP_PP_Get_Order_historyResult> SP_PP_Get_Order_history([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> acc_order_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), acc_order_id);
			return ((ISingleResult<SP_PP_Get_Order_historyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_PP_Get_Order_history_AccessionNo")]
		public ISingleResult<SP_PP_Get_Order_history_AccessionNoResult> SP_PP_Get_Order_history_AccessionNo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string accession_no)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accession_no);
			return ((ISingleResult<SP_PP_Get_Order_history_AccessionNoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_Conference_Images")]
		public ISingleResult<SP_Get_Conference_ImagesResult> SP_Get_Conference_Images([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Conference_ID", DbType="Int")] System.Nullable<int> conference_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conference_ID);
			return ((ISingleResult<SP_Get_Conference_ImagesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Get_User_Status")]
		public ISingleResult<SP_Get_User_StatusResult> SP_Get_User_Status()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SP_Get_User_StatusResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temp_Specimens")]
	public partial class Temp_Specimen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Specimen_ID;
		
		private int _Acc_ID;
		
		private string _Accession_No;
		
		private string _Specimen_Name;
		
		private string _Specimen_Label;
		
		private System.DateTime _time_stamp;
		
		private System.Nullable<int> _Item_ID;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecimen_IDChanging(int value);
    partial void OnSpecimen_IDChanged();
    partial void OnAcc_IDChanging(int value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnSpecimen_NameChanging(string value);
    partial void OnSpecimen_NameChanged();
    partial void OnSpecimen_LabelChanging(string value);
    partial void OnSpecimen_LabelChanged();
    partial void Ontime_stampChanging(System.DateTime value);
    partial void Ontime_stampChanged();
    partial void OnItem_IDChanging(System.Nullable<int> value);
    partial void OnItem_IDChanged();
    #endregion
		
		public Temp_Specimen()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Specimen_ID
		{
			get
			{
				return this._Specimen_ID;
			}
			set
			{
				if ((this._Specimen_ID != value))
				{
					this.OnSpecimen_IDChanging(value);
					this.SendPropertyChanging();
					this._Specimen_ID = value;
					this.SendPropertyChanged("Specimen_ID");
					this.OnSpecimen_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int NOT NULL")]
		public int Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen_Name", DbType="NVarChar(500)")]
		public string Specimen_Name
		{
			get
			{
				return this._Specimen_Name;
			}
			set
			{
				if ((this._Specimen_Name != value))
				{
					this.OnSpecimen_NameChanging(value);
					this.SendPropertyChanging();
					this._Specimen_Name = value;
					this.SendPropertyChanged("Specimen_Name");
					this.OnSpecimen_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen_Label", DbType="NVarChar(10)")]
		public string Specimen_Label
		{
			get
			{
				return this._Specimen_Label;
			}
			set
			{
				if ((this._Specimen_Label != value))
				{
					this.OnSpecimen_LabelChanging(value);
					this.SendPropertyChanging();
					this._Specimen_Label = value;
					this.SendPropertyChanged("Specimen_Label");
					this.OnSpecimen_LabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_stamp", DbType="DateTime NOT NULL")]
		public System.DateTime time_stamp
		{
			get
			{
				return this._time_stamp;
			}
			set
			{
				if ((this._time_stamp != value))
				{
					this.Ontime_stampChanging(value);
					this.SendPropertyChanging();
					this._time_stamp = value;
					this.SendPropertyChanged("time_stamp");
					this.Ontime_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int")]
		public System.Nullable<int> Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Temp_Specimen", Storage="_Item", ThisKey="Item_ID", OtherKey="Item_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Temp_Specimens.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Temp_Specimens.Add(this);
						this._Item_ID = value.Item_ID;
					}
					else
					{
						this._Item_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accession_Activities")]
	public partial class Accession_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Accession_Activity_ID;
		
		private int _Acc_ID;
		
		private string _Accession_No;
		
		private System.Nullable<System.DateTime> _CIF_Pickup_Time;
		
		private System.Nullable<System.DateTime> _CIF_Dropoff_Time;
		
		private System.Nullable<int> _Courier_ID;
		
		private System.Nullable<System.DateTime> _Intake_Time;
		
		private System.Nullable<int> _Intaker_ID;
		
		private System.Nullable<System.DateTime> _Patient_Verify_Time;
		
		private System.Nullable<int> _Patient_Verifer_ID;
		
		private System.Nullable<System.DateTime> _Case_Verify_Time;
		
		private System.Nullable<int> _Case_Verifier_ID;
		
		private System.Nullable<System.DateTime> _Gross_Time;
		
		private System.Nullable<int> _Grosser_ID;
		
		private System.Nullable<System.DateTime> _Embedd_Time;
		
		private System.Nullable<int> _Embedder_ID;
		
		private System.Nullable<System.DateTime> _Cut_Time;
		
		private System.Nullable<int> _Cutter_ID;
		
		private System.Nullable<System.DateTime> _Distribute_Time;
		
		private System.Nullable<int> _Distributer_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccession_Activity_IDChanging(int value);
    partial void OnAccession_Activity_IDChanged();
    partial void OnAcc_IDChanging(int value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnCIF_Pickup_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCIF_Pickup_TimeChanged();
    partial void OnCIF_Dropoff_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCIF_Dropoff_TimeChanged();
    partial void OnCourier_IDChanging(System.Nullable<int> value);
    partial void OnCourier_IDChanged();
    partial void OnIntake_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIntake_TimeChanged();
    partial void OnIntaker_IDChanging(System.Nullable<int> value);
    partial void OnIntaker_IDChanged();
    partial void OnPatient_Verify_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPatient_Verify_TimeChanged();
    partial void OnPatient_Verifer_IDChanging(System.Nullable<int> value);
    partial void OnPatient_Verifer_IDChanged();
    partial void OnCase_Verify_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCase_Verify_TimeChanged();
    partial void OnCase_Verifier_IDChanging(System.Nullable<int> value);
    partial void OnCase_Verifier_IDChanged();
    partial void OnGross_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnGross_TimeChanged();
    partial void OnGrosser_IDChanging(System.Nullable<int> value);
    partial void OnGrosser_IDChanged();
    partial void OnEmbedd_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEmbedd_TimeChanged();
    partial void OnEmbedder_IDChanging(System.Nullable<int> value);
    partial void OnEmbedder_IDChanged();
    partial void OnCut_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCut_TimeChanged();
    partial void OnCutter_IDChanging(System.Nullable<int> value);
    partial void OnCutter_IDChanged();
    partial void OnDistribute_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDistribute_TimeChanged();
    partial void OnDistributer_IDChanging(System.Nullable<int> value);
    partial void OnDistributer_IDChanged();
    #endregion
		
		public Accession_Activity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Activity_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Accession_Activity_ID
		{
			get
			{
				return this._Accession_Activity_ID;
			}
			set
			{
				if ((this._Accession_Activity_ID != value))
				{
					this.OnAccession_Activity_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Activity_ID = value;
					this.SendPropertyChanged("Accession_Activity_ID");
					this.OnAccession_Activity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int NOT NULL")]
		public int Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIF_Pickup_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> CIF_Pickup_Time
		{
			get
			{
				return this._CIF_Pickup_Time;
			}
			set
			{
				if ((this._CIF_Pickup_Time != value))
				{
					this.OnCIF_Pickup_TimeChanging(value);
					this.SendPropertyChanging();
					this._CIF_Pickup_Time = value;
					this.SendPropertyChanged("CIF_Pickup_Time");
					this.OnCIF_Pickup_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIF_Dropoff_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> CIF_Dropoff_Time
		{
			get
			{
				return this._CIF_Dropoff_Time;
			}
			set
			{
				if ((this._CIF_Dropoff_Time != value))
				{
					this.OnCIF_Dropoff_TimeChanging(value);
					this.SendPropertyChanging();
					this._CIF_Dropoff_Time = value;
					this.SendPropertyChanged("CIF_Dropoff_Time");
					this.OnCIF_Dropoff_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Courier_ID", DbType="Int")]
		public System.Nullable<int> Courier_ID
		{
			get
			{
				return this._Courier_ID;
			}
			set
			{
				if ((this._Courier_ID != value))
				{
					this.OnCourier_IDChanging(value);
					this.SendPropertyChanging();
					this._Courier_ID = value;
					this.SendPropertyChanged("Courier_ID");
					this.OnCourier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intake_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Intake_Time
		{
			get
			{
				return this._Intake_Time;
			}
			set
			{
				if ((this._Intake_Time != value))
				{
					this.OnIntake_TimeChanging(value);
					this.SendPropertyChanging();
					this._Intake_Time = value;
					this.SendPropertyChanged("Intake_Time");
					this.OnIntake_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intaker_ID", DbType="Int")]
		public System.Nullable<int> Intaker_ID
		{
			get
			{
				return this._Intaker_ID;
			}
			set
			{
				if ((this._Intaker_ID != value))
				{
					this.OnIntaker_IDChanging(value);
					this.SendPropertyChanging();
					this._Intaker_ID = value;
					this.SendPropertyChanged("Intaker_ID");
					this.OnIntaker_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_Verify_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Patient_Verify_Time
		{
			get
			{
				return this._Patient_Verify_Time;
			}
			set
			{
				if ((this._Patient_Verify_Time != value))
				{
					this.OnPatient_Verify_TimeChanging(value);
					this.SendPropertyChanging();
					this._Patient_Verify_Time = value;
					this.SendPropertyChanged("Patient_Verify_Time");
					this.OnPatient_Verify_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_Verifer_ID", DbType="Int")]
		public System.Nullable<int> Patient_Verifer_ID
		{
			get
			{
				return this._Patient_Verifer_ID;
			}
			set
			{
				if ((this._Patient_Verifer_ID != value))
				{
					this.OnPatient_Verifer_IDChanging(value);
					this.SendPropertyChanging();
					this._Patient_Verifer_ID = value;
					this.SendPropertyChanged("Patient_Verifer_ID");
					this.OnPatient_Verifer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Verify_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Case_Verify_Time
		{
			get
			{
				return this._Case_Verify_Time;
			}
			set
			{
				if ((this._Case_Verify_Time != value))
				{
					this.OnCase_Verify_TimeChanging(value);
					this.SendPropertyChanging();
					this._Case_Verify_Time = value;
					this.SendPropertyChanged("Case_Verify_Time");
					this.OnCase_Verify_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Verifier_ID", DbType="Int")]
		public System.Nullable<int> Case_Verifier_ID
		{
			get
			{
				return this._Case_Verifier_ID;
			}
			set
			{
				if ((this._Case_Verifier_ID != value))
				{
					this.OnCase_Verifier_IDChanging(value);
					this.SendPropertyChanging();
					this._Case_Verifier_ID = value;
					this.SendPropertyChanged("Case_Verifier_ID");
					this.OnCase_Verifier_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gross_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Gross_Time
		{
			get
			{
				return this._Gross_Time;
			}
			set
			{
				if ((this._Gross_Time != value))
				{
					this.OnGross_TimeChanging(value);
					this.SendPropertyChanging();
					this._Gross_Time = value;
					this.SendPropertyChanged("Gross_Time");
					this.OnGross_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grosser_ID", DbType="Int")]
		public System.Nullable<int> Grosser_ID
		{
			get
			{
				return this._Grosser_ID;
			}
			set
			{
				if ((this._Grosser_ID != value))
				{
					this.OnGrosser_IDChanging(value);
					this.SendPropertyChanging();
					this._Grosser_ID = value;
					this.SendPropertyChanged("Grosser_ID");
					this.OnGrosser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Embedd_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Embedd_Time
		{
			get
			{
				return this._Embedd_Time;
			}
			set
			{
				if ((this._Embedd_Time != value))
				{
					this.OnEmbedd_TimeChanging(value);
					this.SendPropertyChanging();
					this._Embedd_Time = value;
					this.SendPropertyChanged("Embedd_Time");
					this.OnEmbedd_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Embedder_ID", DbType="Int")]
		public System.Nullable<int> Embedder_ID
		{
			get
			{
				return this._Embedder_ID;
			}
			set
			{
				if ((this._Embedder_ID != value))
				{
					this.OnEmbedder_IDChanging(value);
					this.SendPropertyChanging();
					this._Embedder_ID = value;
					this.SendPropertyChanged("Embedder_ID");
					this.OnEmbedder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cut_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Cut_Time
		{
			get
			{
				return this._Cut_Time;
			}
			set
			{
				if ((this._Cut_Time != value))
				{
					this.OnCut_TimeChanging(value);
					this.SendPropertyChanging();
					this._Cut_Time = value;
					this.SendPropertyChanged("Cut_Time");
					this.OnCut_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cutter_ID", DbType="Int")]
		public System.Nullable<int> Cutter_ID
		{
			get
			{
				return this._Cutter_ID;
			}
			set
			{
				if ((this._Cutter_ID != value))
				{
					this.OnCutter_IDChanging(value);
					this.SendPropertyChanging();
					this._Cutter_ID = value;
					this.SendPropertyChanged("Cutter_ID");
					this.OnCutter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distribute_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Distribute_Time
		{
			get
			{
				return this._Distribute_Time;
			}
			set
			{
				if ((this._Distribute_Time != value))
				{
					this.OnDistribute_TimeChanging(value);
					this.SendPropertyChanging();
					this._Distribute_Time = value;
					this.SendPropertyChanged("Distribute_Time");
					this.OnDistribute_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distributer_ID", DbType="Int")]
		public System.Nullable<int> Distributer_ID
		{
			get
			{
				return this._Distributer_ID;
			}
			set
			{
				if ((this._Distributer_ID != value))
				{
					this.OnDistributer_IDChanging(value);
					this.SendPropertyChanging();
					this._Distributer_ID = value;
					this.SendPropertyChanged("Distributer_ID");
					this.OnDistributer_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _Login;
		
		private string _Last_Name;
		
		private string _First_Name;
		
		private string _Middle_Name;
		
		private string _Gen_Title;
		
		private string _Name;
		
		private string _Full_Name;
		
		private System.Nullable<int> _User_Type_ID;
		
		private System.Nullable<int> _Default_Location_ID;
		
		private System.Nullable<int> _Division_ID;
		
		private System.Nullable<int> _PowerPath_ID;
		
		private string _Email_Address;
		
		private string _Initials;
		
		private string _Work_Phone;
		
		private string _Mobile_Phone;
		
		private string _Fax;
		
		private System.Nullable<int> _Employee_Number;
		
		private System.Nullable<System.DateTime> _Start_Date;
		
		private System.Nullable<System.DateTime> _End_Date;
		
		private string _Bio;
		
		private System.Nullable<bool> _Active;
		
		private string _PIN;
		
		private string _Password;
		
		private System.Nullable<int> _User_Image_id;
		
		private System.Data.Linq.Binary _Photo_Location;
		
		private System.Guid _rowguid;
		
		private System.Data.Linq.Binary _BinaryPassword;
		
		private string _LC_Name;
		
		private string _Position;
		
		private string _Hours;
		
		private string _Pager;
		
		private string _Home_Phone;
		
		private System.Nullable<int> _SuperVisor;
		
		private string _Update_Issue;
		
		private System.Nullable<int> _Badge_Number;
		
		private System.Nullable<int> _Slide_Location_ID;
		
		private EntityRef<User> _User2;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntitySet<Ticket_Log> _Ticket_Logs1;
		
		private EntitySet<Ticket_Log> _Ticket_Logs2;
		
		private EntitySet<Ticket_Log> _Ticket_Logs3;
		
		private EntitySet<Ticket_Stage> _Ticket_Stages;
		
		private EntitySet<Ticket_Source> _Ticket_Sources;
		
		private EntitySet<User_Printer> _User_Printers;
		
		private EntitySet<Machine_Handheld> _Machine_Handhelds;
		
		private EntitySet<User_Role> _User_Roles;
		
		private EntitySet<Phone_Number> _Phone_Numbers;
		
		private EntitySet<Accession_Log> _Accession_Logs;
		
		private EntitySet<Conference> _Conferences;
		
		private EntitySet<User_Status> _User_Status;
		
		private EntitySet<Organization> _Organizations;
		
		private EntitySet<Organization> _Organizations1;
		
		private EntitySet<Organization> _Organizations2;
		
		private EntitySet<Organization> _Organizations3;
		
		private EntitySet<Organization> _Organizations4;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntitySet<Ticket> _Tickets1;
		
		private EntitySet<Ticket> _Tickets2;
		
		private EntitySet<Ticket> _Tickets3;
		
		private EntitySet<Temp_Slide> _Temp_Slides;
		
		private EntitySet<Temp_Slide> _Temp_Slides1;
		
		private EntitySet<Ticket_Group_User> _Ticket_Group_Users;
		
		private EntityRef<User> _User1;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Location> _Location1;
		
		private EntityRef<User_Type> _User_Type;
		
		private EntityRef<Division> _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnGen_TitleChanging(string value);
    partial void OnGen_TitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    partial void OnUser_Type_IDChanging(System.Nullable<int> value);
    partial void OnUser_Type_IDChanged();
    partial void OnDefault_Location_IDChanging(System.Nullable<int> value);
    partial void OnDefault_Location_IDChanged();
    partial void OnDivision_IDChanging(System.Nullable<int> value);
    partial void OnDivision_IDChanged();
    partial void OnPowerPath_IDChanging(System.Nullable<int> value);
    partial void OnPowerPath_IDChanged();
    partial void OnEmail_AddressChanging(string value);
    partial void OnEmail_AddressChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnWork_PhoneChanging(string value);
    partial void OnWork_PhoneChanged();
    partial void OnMobile_PhoneChanging(string value);
    partial void OnMobile_PhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmployee_NumberChanging(System.Nullable<int> value);
    partial void OnEmployee_NumberChanged();
    partial void OnStart_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_DateChanged();
    partial void OnEnd_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_DateChanged();
    partial void OnBioChanging(string value);
    partial void OnBioChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnPINChanging(string value);
    partial void OnPINChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUser_Image_idChanging(System.Nullable<int> value);
    partial void OnUser_Image_idChanged();
    partial void OnPhoto_LocationChanging(System.Data.Linq.Binary value);
    partial void OnPhoto_LocationChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnBinaryPasswordChanging(System.Data.Linq.Binary value);
    partial void OnBinaryPasswordChanged();
    partial void OnLC_NameChanging(string value);
    partial void OnLC_NameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnHoursChanging(string value);
    partial void OnHoursChanged();
    partial void OnPagerChanging(string value);
    partial void OnPagerChanged();
    partial void OnHome_PhoneChanging(string value);
    partial void OnHome_PhoneChanged();
    partial void OnSuperVisorChanging(System.Nullable<int> value);
    partial void OnSuperVisorChanged();
    partial void OnUpdate_IssueChanging(string value);
    partial void OnUpdate_IssueChanged();
    partial void OnBadge_NumberChanging(System.Nullable<int> value);
    partial void OnBadge_NumberChanged();
    partial void OnSlide_Location_IDChanging(System.Nullable<int> value);
    partial void OnSlide_Location_IDChanged();
    #endregion
		
		public User()
		{
			this._User2 = default(EntityRef<User>);
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Ticket_Logs1 = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs1), new Action<Ticket_Log>(this.detach_Ticket_Logs1));
			this._Ticket_Logs2 = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs2), new Action<Ticket_Log>(this.detach_Ticket_Logs2));
			this._Ticket_Logs3 = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs3), new Action<Ticket_Log>(this.detach_Ticket_Logs3));
			this._Ticket_Stages = new EntitySet<Ticket_Stage>(new Action<Ticket_Stage>(this.attach_Ticket_Stages), new Action<Ticket_Stage>(this.detach_Ticket_Stages));
			this._Ticket_Sources = new EntitySet<Ticket_Source>(new Action<Ticket_Source>(this.attach_Ticket_Sources), new Action<Ticket_Source>(this.detach_Ticket_Sources));
			this._User_Printers = new EntitySet<User_Printer>(new Action<User_Printer>(this.attach_User_Printers), new Action<User_Printer>(this.detach_User_Printers));
			this._Machine_Handhelds = new EntitySet<Machine_Handheld>(new Action<Machine_Handheld>(this.attach_Machine_Handhelds), new Action<Machine_Handheld>(this.detach_Machine_Handhelds));
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			this._Phone_Numbers = new EntitySet<Phone_Number>(new Action<Phone_Number>(this.attach_Phone_Numbers), new Action<Phone_Number>(this.detach_Phone_Numbers));
			this._Accession_Logs = new EntitySet<Accession_Log>(new Action<Accession_Log>(this.attach_Accession_Logs), new Action<Accession_Log>(this.detach_Accession_Logs));
			this._Conferences = new EntitySet<Conference>(new Action<Conference>(this.attach_Conferences), new Action<Conference>(this.detach_Conferences));
			this._User_Status = new EntitySet<User_Status>(new Action<User_Status>(this.attach_User_Status), new Action<User_Status>(this.detach_User_Status));
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			this._Organizations1 = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations1), new Action<Organization>(this.detach_Organizations1));
			this._Organizations2 = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations2), new Action<Organization>(this.detach_Organizations2));
			this._Organizations3 = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations3), new Action<Organization>(this.detach_Organizations3));
			this._Organizations4 = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations4), new Action<Organization>(this.detach_Organizations4));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Tickets1 = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets1), new Action<Ticket>(this.detach_Tickets1));
			this._Tickets2 = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets2), new Action<Ticket>(this.detach_Tickets2));
			this._Tickets3 = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets3), new Action<Ticket>(this.detach_Tickets3));
			this._Temp_Slides = new EntitySet<Temp_Slide>(new Action<Temp_Slide>(this.attach_Temp_Slides), new Action<Temp_Slide>(this.detach_Temp_Slides));
			this._Temp_Slides1 = new EntitySet<Temp_Slide>(new Action<Temp_Slide>(this.attach_Temp_Slides1), new Action<Temp_Slide>(this.detach_Temp_Slides1));
			this._Ticket_Group_Users = new EntitySet<Ticket_Group_User>(new Action<Ticket_Group_User>(this.attach_Ticket_Group_Users), new Action<Ticket_Group_User>(this.detach_Ticket_Group_Users));
			this._User1 = default(EntityRef<User>);
			this._Location = default(EntityRef<Location>);
			this._Location1 = default(EntityRef<Location>);
			this._User_Type = default(EntityRef<User_Type>);
			this._Division = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(100)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(100)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(100)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gen_Title", DbType="NVarChar(50)")]
		public string Gen_Title
		{
			get
			{
				return this._Gen_Title;
			}
			set
			{
				if ((this._Gen_Title != value))
				{
					this.OnGen_TitleChanging(value);
					this.SendPropertyChanging();
					this._Gen_Title = value;
					this.SendPropertyChanged("Gen_Title");
					this.OnGen_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", AutoSync=AutoSync.Always, DbType="NVarChar(201)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", AutoSync=AutoSync.Always, DbType="NVarChar(60)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type_ID", DbType="Int")]
		public System.Nullable<int> User_Type_ID
		{
			get
			{
				return this._User_Type_ID;
			}
			set
			{
				if ((this._User_Type_ID != value))
				{
					if (this._User_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._User_Type_ID = value;
					this.SendPropertyChanged("User_Type_ID");
					this.OnUser_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Location_ID", DbType="Int")]
		public System.Nullable<int> Default_Location_ID
		{
			get
			{
				return this._Default_Location_ID;
			}
			set
			{
				if ((this._Default_Location_ID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefault_Location_IDChanging(value);
					this.SendPropertyChanging();
					this._Default_Location_ID = value;
					this.SendPropertyChanged("Default_Location_ID");
					this.OnDefault_Location_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_ID", DbType="Int")]
		public System.Nullable<int> Division_ID
		{
			get
			{
				return this._Division_ID;
			}
			set
			{
				if ((this._Division_ID != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivision_IDChanging(value);
					this.SendPropertyChanging();
					this._Division_ID = value;
					this.SendPropertyChanged("Division_ID");
					this.OnDivision_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerPath_ID", DbType="Int")]
		public System.Nullable<int> PowerPath_ID
		{
			get
			{
				return this._PowerPath_ID;
			}
			set
			{
				if ((this._PowerPath_ID != value))
				{
					this.OnPowerPath_IDChanging(value);
					this.SendPropertyChanging();
					this._PowerPath_ID = value;
					this.SendPropertyChanged("PowerPath_ID");
					this.OnPowerPath_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Address", DbType="NVarChar(50)")]
		public string Email_Address
		{
			get
			{
				return this._Email_Address;
			}
			set
			{
				if ((this._Email_Address != value))
				{
					this.OnEmail_AddressChanging(value);
					this.SendPropertyChanging();
					this._Email_Address = value;
					this.SendPropertyChanged("Email_Address");
					this.OnEmail_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initials", DbType="NVarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Work_Phone", DbType="NVarChar(50)")]
		public string Work_Phone
		{
			get
			{
				return this._Work_Phone;
			}
			set
			{
				if ((this._Work_Phone != value))
				{
					this.OnWork_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Work_Phone = value;
					this.SendPropertyChanged("Work_Phone");
					this.OnWork_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile_Phone", DbType="NVarChar(50)")]
		public string Mobile_Phone
		{
			get
			{
				return this._Mobile_Phone;
			}
			set
			{
				if ((this._Mobile_Phone != value))
				{
					this.OnMobile_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Mobile_Phone = value;
					this.SendPropertyChanged("Mobile_Phone");
					this.OnMobile_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_Number", DbType="Int")]
		public System.Nullable<int> Employee_Number
		{
			get
			{
				return this._Employee_Number;
			}
			set
			{
				if ((this._Employee_Number != value))
				{
					this.OnEmployee_NumberChanging(value);
					this.SendPropertyChanging();
					this._Employee_Number = value;
					this.SendPropertyChanged("Employee_Number");
					this.OnEmployee_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start_Date
		{
			get
			{
				return this._Start_Date;
			}
			set
			{
				if ((this._Start_Date != value))
				{
					this.OnStart_DateChanging(value);
					this.SendPropertyChanging();
					this._Start_Date = value;
					this.SendPropertyChanged("Start_Date");
					this.OnStart_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> End_Date
		{
			get
			{
				return this._End_Date;
			}
			set
			{
				if ((this._End_Date != value))
				{
					this.OnEnd_DateChanging(value);
					this.SendPropertyChanging();
					this._End_Date = value;
					this.SendPropertyChanged("End_Date");
					this.OnEnd_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bio", DbType="NVarChar(255)")]
		public string Bio
		{
			get
			{
				return this._Bio;
			}
			set
			{
				if ((this._Bio != value))
				{
					this.OnBioChanging(value);
					this.SendPropertyChanging();
					this._Bio = value;
					this.SendPropertyChanged("Bio");
					this.OnBioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIN", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PIN
		{
			get
			{
				return this._PIN;
			}
			set
			{
				if ((this._PIN != value))
				{
					this.OnPINChanging(value);
					this.SendPropertyChanging();
					this._PIN = value;
					this.SendPropertyChanged("PIN");
					this.OnPINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Image_id", DbType="Int")]
		public System.Nullable<int> User_Image_id
		{
			get
			{
				return this._User_Image_id;
			}
			set
			{
				if ((this._User_Image_id != value))
				{
					this.OnUser_Image_idChanging(value);
					this.SendPropertyChanging();
					this._User_Image_id = value;
					this.SendPropertyChanged("User_Image_id");
					this.OnUser_Image_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo_Location", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo_Location
		{
			get
			{
				return this._Photo_Location;
			}
			set
			{
				if ((this._Photo_Location != value))
				{
					this.OnPhoto_LocationChanging(value);
					this.SendPropertyChanging();
					this._Photo_Location = value;
					this.SendPropertyChanged("Photo_Location");
					this.OnPhoto_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinaryPassword", DbType="Binary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BinaryPassword
		{
			get
			{
				return this._BinaryPassword;
			}
			set
			{
				if ((this._BinaryPassword != value))
				{
					this.OnBinaryPasswordChanging(value);
					this.SendPropertyChanging();
					this._BinaryPassword = value;
					this.SendPropertyChanged("BinaryPassword");
					this.OnBinaryPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LC_Name", DbType="NVarChar(100)")]
		public string LC_Name
		{
			get
			{
				return this._LC_Name;
			}
			set
			{
				if ((this._LC_Name != value))
				{
					this.OnLC_NameChanging(value);
					this.SendPropertyChanging();
					this._LC_Name = value;
					this.SendPropertyChanged("LC_Name");
					this.OnLC_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(500)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="NVarChar(100)")]
		public string Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pager", DbType="NVarChar(50)")]
		public string Pager
		{
			get
			{
				return this._Pager;
			}
			set
			{
				if ((this._Pager != value))
				{
					this.OnPagerChanging(value);
					this.SendPropertyChanging();
					this._Pager = value;
					this.SendPropertyChanged("Pager");
					this.OnPagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home_Phone", DbType="NVarChar(50)")]
		public string Home_Phone
		{
			get
			{
				return this._Home_Phone;
			}
			set
			{
				if ((this._Home_Phone != value))
				{
					this.OnHome_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Home_Phone = value;
					this.SendPropertyChanged("Home_Phone");
					this.OnHome_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperVisor", DbType="Int")]
		public System.Nullable<int> SuperVisor
		{
			get
			{
				return this._SuperVisor;
			}
			set
			{
				if ((this._SuperVisor != value))
				{
					this.OnSuperVisorChanging(value);
					this.SendPropertyChanging();
					this._SuperVisor = value;
					this.SendPropertyChanged("SuperVisor");
					this.OnSuperVisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Update_Issue", DbType="NVarChar(50)")]
		public string Update_Issue
		{
			get
			{
				return this._Update_Issue;
			}
			set
			{
				if ((this._Update_Issue != value))
				{
					this.OnUpdate_IssueChanging(value);
					this.SendPropertyChanging();
					this._Update_Issue = value;
					this.SendPropertyChanged("Update_Issue");
					this.OnUpdate_IssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Badge_Number", DbType="Int")]
		public System.Nullable<int> Badge_Number
		{
			get
			{
				return this._Badge_Number;
			}
			set
			{
				if ((this._Badge_Number != value))
				{
					this.OnBadge_NumberChanging(value);
					this.SendPropertyChanging();
					this._Badge_Number = value;
					this.SendPropertyChanged("Badge_Number");
					this.OnBadge_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_Location_ID", DbType="Int")]
		public System.Nullable<int> Slide_Location_ID
		{
			get
			{
				return this._Slide_Location_ID;
			}
			set
			{
				if ((this._Slide_Location_ID != value))
				{
					if (this._Location1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlide_Location_IDChanging(value);
					this.SendPropertyChanging();
					this._Slide_Location_ID = value;
					this.SendPropertyChanged("Slide_Location_ID");
					this.OnSlide_Location_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_User2", ThisKey="User_ID", OtherKey="User_ID", IsUnique=true, IsForeignKey=false)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.User1 = null;
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.User1 = this;
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log", Storage="_Ticket_Logs", ThisKey="User_ID", OtherKey="Assigned_To_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log1", Storage="_Ticket_Logs1", ThisKey="User_ID", OtherKey="Responsible_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs1
		{
			get
			{
				return this._Ticket_Logs1;
			}
			set
			{
				this._Ticket_Logs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log2", Storage="_Ticket_Logs2", ThisKey="User_ID", OtherKey="Created_By_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs2
		{
			get
			{
				return this._Ticket_Logs2;
			}
			set
			{
				this._Ticket_Logs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log3", Storage="_Ticket_Logs3", ThisKey="User_ID", OtherKey="Modified_By_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs3
		{
			get
			{
				return this._Ticket_Logs3;
			}
			set
			{
				this._Ticket_Logs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Stage", Storage="_Ticket_Stages", ThisKey="User_ID", OtherKey="Owner_ID")]
		public EntitySet<Ticket_Stage> Ticket_Stages
		{
			get
			{
				return this._Ticket_Stages;
			}
			set
			{
				this._Ticket_Stages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Source", Storage="_Ticket_Sources", ThisKey="User_ID", OtherKey="Owner_ID")]
		public EntitySet<Ticket_Source> Ticket_Sources
		{
			get
			{
				return this._Ticket_Sources;
			}
			set
			{
				this._Ticket_Sources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Printer", Storage="_User_Printers", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<User_Printer> User_Printers
		{
			get
			{
				return this._User_Printers;
			}
			set
			{
				this._User_Printers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Machine_Handheld", Storage="_Machine_Handhelds", ThisKey="User_ID", OtherKey="Default_User_ID")]
		public EntitySet<Machine_Handheld> Machine_Handhelds
		{
			get
			{
				return this._Machine_Handhelds;
			}
			set
			{
				this._Machine_Handhelds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Role", Storage="_User_Roles", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Phone_Number", Storage="_Phone_Numbers", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Phone_Number> Phone_Numbers
		{
			get
			{
				return this._Phone_Numbers;
			}
			set
			{
				this._Phone_Numbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Accession_Log", Storage="_Accession_Logs", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Accession_Log> Accession_Logs
		{
			get
			{
				return this._Accession_Logs;
			}
			set
			{
				this._Accession_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Conference", Storage="_Conferences", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Conference> Conferences
		{
			get
			{
				return this._Conferences;
			}
			set
			{
				this._Conferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status", Storage="_User_Status", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<User_Status> User_Status
		{
			get
			{
				return this._User_Status;
			}
			set
			{
				this._User_Status.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization", Storage="_Organizations", ThisKey="User_ID", OtherKey="Primary_Retention_ID")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization1", Storage="_Organizations1", ThisKey="User_ID", OtherKey="Primary_Salesperson_ID")]
		public EntitySet<Organization> Organizations1
		{
			get
			{
				return this._Organizations1;
			}
			set
			{
				this._Organizations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization2", Storage="_Organizations2", ThisKey="User_ID", OtherKey="Primary_Internal_ID")]
		public EntitySet<Organization> Organizations2
		{
			get
			{
				return this._Organizations2;
			}
			set
			{
				this._Organizations2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization3", Storage="_Organizations3", ThisKey="User_ID", OtherKey="Sales_Commission_Due_To")]
		public EntitySet<Organization> Organizations3
		{
			get
			{
				return this._Organizations3;
			}
			set
			{
				this._Organizations3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization4", Storage="_Organizations4", ThisKey="User_ID", OtherKey="Retention_Commission_Due_To")]
		public EntitySet<Organization> Organizations4
		{
			get
			{
				return this._Organizations4;
			}
			set
			{
				this._Organizations4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="User_ID", OtherKey="Created_By_ID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket1", Storage="_Tickets1", ThisKey="User_ID", OtherKey="Responsible_ID")]
		public EntitySet<Ticket> Tickets1
		{
			get
			{
				return this._Tickets1;
			}
			set
			{
				this._Tickets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket2", Storage="_Tickets2", ThisKey="User_ID", OtherKey="Assigned__To_ID")]
		public EntitySet<Ticket> Tickets2
		{
			get
			{
				return this._Tickets2;
			}
			set
			{
				this._Tickets2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket3", Storage="_Tickets3", ThisKey="User_ID", OtherKey="Modified_By_ID")]
		public EntitySet<Ticket> Tickets3
		{
			get
			{
				return this._Tickets3;
			}
			set
			{
				this._Tickets3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Temp_Slide", Storage="_Temp_Slides", ThisKey="User_ID", OtherKey="Assigned_To_ID")]
		public EntitySet<Temp_Slide> Temp_Slides
		{
			get
			{
				return this._Temp_Slides;
			}
			set
			{
				this._Temp_Slides.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Temp_Slide1", Storage="_Temp_Slides1", ThisKey="User_ID", OtherKey="Ordered_By_ID")]
		public EntitySet<Temp_Slide> Temp_Slides1
		{
			get
			{
				return this._Temp_Slides1;
			}
			set
			{
				this._Temp_Slides1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Group_User", Storage="_Ticket_Group_Users", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Ticket_Group_User> Ticket_Group_Users
		{
			get
			{
				return this._Ticket_Group_Users;
			}
			set
			{
				this._Ticket_Group_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User", Storage="_User1", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.User2 = null;
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.User2 = this;
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User", Storage="_Location", ThisKey="Default_Location_ID", OtherKey="Location_ID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Default_Location_ID = value.Location_ID;
					}
					else
					{
						this._Default_Location_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User1", Storage="_Location1", ThisKey="Slide_Location_ID", OtherKey="Location_ID", IsForeignKey=true)]
		public Location Location1
		{
			get
			{
				return this._Location1.Entity;
			}
			set
			{
				Location previousValue = this._Location1.Entity;
				if (((previousValue != value) 
							|| (this._Location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location1.Entity = null;
						previousValue.Users1.Remove(this);
					}
					this._Location1.Entity = value;
					if ((value != null))
					{
						value.Users1.Add(this);
						this._Slide_Location_ID = value.Location_ID;
					}
					else
					{
						this._Slide_Location_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User", Storage="_User_Type", ThisKey="User_Type_ID", OtherKey="User_Type_ID", IsForeignKey=true)]
		public User_Type User_Type
		{
			get
			{
				return this._User_Type.Entity;
			}
			set
			{
				User_Type previousValue = this._User_Type.Entity;
				if (((previousValue != value) 
							|| (this._User_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Type.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._User_Type.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._User_Type_ID = value.User_Type_ID;
					}
					else
					{
						this._User_Type_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_User", Storage="_Division", ThisKey="Division_ID", OtherKey="Division_ID", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Division_ID = value.Division_ID;
					}
					else
					{
						this._Division_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ticket_Logs1(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Ticket_Logs1(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Ticket_Logs2(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_Ticket_Logs2(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_Ticket_Logs3(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_Ticket_Logs3(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_Ticket_Stages(Ticket_Stage entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ticket_Stages(Ticket_Stage entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Ticket_Sources(Ticket_Source entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ticket_Sources(Ticket_Source entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Printers(User_Printer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Printers(User_Printer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Machine_Handhelds(Machine_Handheld entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Machine_Handhelds(Machine_Handheld entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Phone_Numbers(Phone_Number entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Phone_Numbers(Phone_Number entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Accession_Logs(Accession_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Accession_Logs(Accession_Log entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Conferences(Conference entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Conferences(Conference entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Status(User_Status entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Status(User_Status entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Organizations1(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Organizations1(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Organizations2(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_Organizations2(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_Organizations3(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_Organizations3(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_Organizations4(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User4 = this;
		}
		
		private void detach_Organizations4(Organization entity)
		{
			this.SendPropertyChanging();
			entity.User4 = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tickets1(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Tickets1(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Tickets2(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_Tickets2(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_Tickets3(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User3 = this;
		}
		
		private void detach_Tickets3(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User3 = null;
		}
		
		private void attach_Temp_Slides(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Temp_Slides(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Temp_Slides1(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Temp_Slides1(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Ticket_Group_Users(Ticket_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Ticket_Group_Users(Ticket_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private int _Item_Type_ID;
		
		private System.Nullable<int> _External_ID;
		
		private bool _Active;
		
		private string _Note;
		
		private System.Nullable<int> _Assigned_To_ID;
		
		private System.Guid _rowguid;
		
		private System.Nullable<int> _Current_Location_ID;
		
		private System.Nullable<int> _Last_IGI_ID;
		
		private EntitySet<Temp_Specimen> _Temp_Specimens;
		
		private EntitySet<Temp_Slide> _Temp_Slides;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnItem_Type_IDChanging(int value);
    partial void OnItem_Type_IDChanged();
    partial void OnExternal_IDChanging(System.Nullable<int> value);
    partial void OnExternal_IDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnAssigned_To_IDChanging(System.Nullable<int> value);
    partial void OnAssigned_To_IDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnCurrent_Location_IDChanging(System.Nullable<int> value);
    partial void OnCurrent_Location_IDChanged();
    partial void OnLast_IGI_IDChanging(System.Nullable<int> value);
    partial void OnLast_IGI_IDChanged();
    #endregion
		
		public Item()
		{
			this._Temp_Specimens = new EntitySet<Temp_Specimen>(new Action<Temp_Specimen>(this.attach_Temp_Specimens), new Action<Temp_Specimen>(this.detach_Temp_Specimens));
			this._Temp_Slides = new EntitySet<Temp_Slide>(new Action<Temp_Slide>(this.attach_Temp_Slides), new Action<Temp_Slide>(this.detach_Temp_Slides));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Type_ID", DbType="Int NOT NULL")]
		public int Item_Type_ID
		{
			get
			{
				return this._Item_Type_ID;
			}
			set
			{
				if ((this._Item_Type_ID != value))
				{
					this.OnItem_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Type_ID = value;
					this.SendPropertyChanged("Item_Type_ID");
					this.OnItem_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_External_ID", DbType="Int")]
		public System.Nullable<int> External_ID
		{
			get
			{
				return this._External_ID;
			}
			set
			{
				if ((this._External_ID != value))
				{
					this.OnExternal_IDChanging(value);
					this.SendPropertyChanging();
					this._External_ID = value;
					this.SendPropertyChanged("External_ID");
					this.OnExternal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned_To_ID", DbType="Int")]
		public System.Nullable<int> Assigned_To_ID
		{
			get
			{
				return this._Assigned_To_ID;
			}
			set
			{
				if ((this._Assigned_To_ID != value))
				{
					this.OnAssigned_To_IDChanging(value);
					this.SendPropertyChanging();
					this._Assigned_To_ID = value;
					this.SendPropertyChanged("Assigned_To_ID");
					this.OnAssigned_To_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Location_ID", DbType="Int")]
		public System.Nullable<int> Current_Location_ID
		{
			get
			{
				return this._Current_Location_ID;
			}
			set
			{
				if ((this._Current_Location_ID != value))
				{
					this.OnCurrent_Location_IDChanging(value);
					this.SendPropertyChanging();
					this._Current_Location_ID = value;
					this.SendPropertyChanged("Current_Location_ID");
					this.OnCurrent_Location_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_IGI_ID", DbType="Int")]
		public System.Nullable<int> Last_IGI_ID
		{
			get
			{
				return this._Last_IGI_ID;
			}
			set
			{
				if ((this._Last_IGI_ID != value))
				{
					this.OnLast_IGI_IDChanging(value);
					this.SendPropertyChanging();
					this._Last_IGI_ID = value;
					this.SendPropertyChanged("Last_IGI_ID");
					this.OnLast_IGI_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Temp_Specimen", Storage="_Temp_Specimens", ThisKey="Item_ID", OtherKey="Item_ID")]
		public EntitySet<Temp_Specimen> Temp_Specimens
		{
			get
			{
				return this._Temp_Specimens;
			}
			set
			{
				this._Temp_Specimens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Temp_Slide", Storage="_Temp_Slides", ThisKey="Item_ID", OtherKey="Item_ID")]
		public EntitySet<Temp_Slide> Temp_Slides
		{
			get
			{
				return this._Temp_Slides;
			}
			set
			{
				this._Temp_Slides.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Temp_Specimens(Temp_Specimen entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Temp_Specimens(Temp_Specimen entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Temp_Slides(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Temp_Slides(Temp_Slide entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Groups")]
	public partial class Item_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_Group_ID;
		
		private int _Parent_Item_ID;
		
		private System.Guid _rowguid;
		
		private EntitySet<Item_Log> _Item_Logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_Group_IDChanging(int value);
    partial void OnItem_Group_IDChanged();
    partial void OnParent_Item_IDChanging(int value);
    partial void OnParent_Item_IDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public Item_Group()
		{
			this._Item_Logs = new EntitySet<Item_Log>(new Action<Item_Log>(this.attach_Item_Logs), new Action<Item_Log>(this.detach_Item_Logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Group_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Item_Group_ID
		{
			get
			{
				return this._Item_Group_ID;
			}
			set
			{
				if ((this._Item_Group_ID != value))
				{
					this.OnItem_Group_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Group_ID = value;
					this.SendPropertyChanged("Item_Group_ID");
					this.OnItem_Group_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Item_ID", DbType="Int NOT NULL")]
		public int Parent_Item_ID
		{
			get
			{
				return this._Parent_Item_ID;
			}
			set
			{
				if ((this._Parent_Item_ID != value))
				{
					this.OnParent_Item_IDChanging(value);
					this.SendPropertyChanging();
					this._Parent_Item_ID = value;
					this.SendPropertyChanged("Parent_Item_ID");
					this.OnParent_Item_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Group_Item_Log", Storage="_Item_Logs", ThisKey="Item_Group_ID", OtherKey="Item_Group_ID")]
		public EntitySet<Item_Log> Item_Logs
		{
			get
			{
				return this._Item_Logs;
			}
			set
			{
				this._Item_Logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Item_Group = this;
		}
		
		private void detach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Item_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Log")]
	public partial class Item_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_Group_ID;
		
		private int _Location_ID;
		
		private int _Item_Status_ID;
		
		private System.DateTime _Time_Stamp;
		
		private int _User_ID;
		
		private int _Machine_ID;
		
		private string _Note;
		
		private System.Guid _rowguid;
		
		private EntityRef<Item_Group> _Item_Group;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_Group_IDChanging(int value);
    partial void OnItem_Group_IDChanged();
    partial void OnLocation_IDChanging(int value);
    partial void OnLocation_IDChanged();
    partial void OnItem_Status_IDChanging(int value);
    partial void OnItem_Status_IDChanged();
    partial void OnTime_StampChanging(System.DateTime value);
    partial void OnTime_StampChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnMachine_IDChanging(int value);
    partial void OnMachine_IDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public Item_Log()
		{
			this._Item_Group = default(EntityRef<Item_Group>);
			this._Location = default(EntityRef<Location>);
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Group_ID", DbType="Int NOT NULL")]
		public int Item_Group_ID
		{
			get
			{
				return this._Item_Group_ID;
			}
			set
			{
				if ((this._Item_Group_ID != value))
				{
					if (this._Item_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_Group_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Group_ID = value;
					this.SendPropertyChanged("Item_Group_ID");
					this.OnItem_Group_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_ID = value;
					this.SendPropertyChanged("Location_ID");
					this.OnLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Status_ID", DbType="Int NOT NULL")]
		public int Item_Status_ID
		{
			get
			{
				return this._Item_Status_ID;
			}
			set
			{
				if ((this._Item_Status_ID != value))
				{
					this.OnItem_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Status_ID = value;
					this.SendPropertyChanged("Item_Status_ID");
					this.OnItem_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this.OnTime_StampChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp = value;
					this.SendPropertyChanged("Time_Stamp");
					this.OnTime_StampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", DbType="Int NOT NULL")]
		public int Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Group_Item_Log", Storage="_Item_Group", ThisKey="Item_Group_ID", OtherKey="Item_Group_ID", IsForeignKey=true)]
		public Item_Group Item_Group
		{
			get
			{
				return this._Item_Group.Entity;
			}
			set
			{
				Item_Group previousValue = this._Item_Group.Entity;
				if (((previousValue != value) 
							|| (this._Item_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_Group.Entity = null;
						previousValue.Item_Logs.Remove(this);
					}
					this._Item_Group.Entity = value;
					if ((value != null))
					{
						value.Item_Logs.Add(this);
						this._Item_Group_ID = value.Item_Group_ID;
					}
					else
					{
						this._Item_Group_ID = default(int);
					}
					this.SendPropertyChanged("Item_Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Item_Log", Storage="_Location", ThisKey="Location_ID", OtherKey="Location_ID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Item_Logs.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Item_Logs.Add(this);
						this._Location_ID = value.Location_ID;
					}
					else
					{
						this._Location_ID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Item_Log", Storage="_Machine", ThisKey="Machine_ID", OtherKey="Machine_ID", IsForeignKey=true)]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.Item_Logs.Remove(this);
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.Item_Logs.Add(this);
						this._Machine_ID = value.Machine_ID;
					}
					else
					{
						this._Machine_ID = default(int);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Log")]
	public partial class Ticket_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Log_ID;
		
		private int _Ticket_ID;
		
		private int _Ticket_Stage_ID;
		
		private int _Ticket_Error_ID;
		
		private int _Ticket_Source_ID;
		
		private int _Ticket_Error_Classification_ID;
		
		private int _Ticket_Status_ID;
		
		private string _Title;
		
		private string _Ticket_Details;
		
		private string _Resolution_Details;
		
		private System.Nullable<int> _Assigned_To_ID;
		
		private System.Nullable<int> _Responsible_ID;
		
		private System.DateTime _Date_Created;
		
		private int _Created_By_ID;
		
		private int _Modified_By_ID;
		
		private System.DateTime _Date_Modified;
		
		private System.Nullable<int> _Item_ID;
		
		private string _Item_Name;
		
		private System.Nullable<int> _Acc_ID;
		
		private string _Accession_No;
		
		private System.Nullable<int> _Role_ID;
		
		private bool _Active;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<Ticket_Stage> _Ticket_Stage;
		
		private EntityRef<Ticket_Statuse> _Ticket_Statuse;
		
		private EntityRef<Ticket_Error> _Ticket_Error;
		
		private EntityRef<Ticket_Error_Classification> _Ticket_Error_Classification;
		
		private EntityRef<Ticket> _Ticket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Log_IDChanging(int value);
    partial void OnTicket_Log_IDChanged();
    partial void OnTicket_IDChanging(int value);
    partial void OnTicket_IDChanged();
    partial void OnTicket_Stage_IDChanging(int value);
    partial void OnTicket_Stage_IDChanged();
    partial void OnTicket_Error_IDChanging(int value);
    partial void OnTicket_Error_IDChanged();
    partial void OnTicket_Source_IDChanging(int value);
    partial void OnTicket_Source_IDChanged();
    partial void OnTicket_Error_Classification_IDChanging(int value);
    partial void OnTicket_Error_Classification_IDChanged();
    partial void OnTicket_Status_IDChanging(int value);
    partial void OnTicket_Status_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTicket_DetailsChanging(string value);
    partial void OnTicket_DetailsChanged();
    partial void OnResolution_DetailsChanging(string value);
    partial void OnResolution_DetailsChanged();
    partial void OnAssigned_To_IDChanging(System.Nullable<int> value);
    partial void OnAssigned_To_IDChanged();
    partial void OnResponsible_IDChanging(System.Nullable<int> value);
    partial void OnResponsible_IDChanged();
    partial void OnDate_CreatedChanging(System.DateTime value);
    partial void OnDate_CreatedChanged();
    partial void OnCreated_By_IDChanging(int value);
    partial void OnCreated_By_IDChanged();
    partial void OnModified_By_IDChanging(int value);
    partial void OnModified_By_IDChanged();
    partial void OnDate_ModifiedChanging(System.DateTime value);
    partial void OnDate_ModifiedChanged();
    partial void OnItem_IDChanging(System.Nullable<int> value);
    partial void OnItem_IDChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnAcc_IDChanging(System.Nullable<int> value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnRole_IDChanging(System.Nullable<int> value);
    partial void OnRole_IDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Ticket_Log()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._Ticket_Stage = default(EntityRef<Ticket_Stage>);
			this._Ticket_Statuse = default(EntityRef<Ticket_Statuse>);
			this._Ticket_Error = default(EntityRef<Ticket_Error>);
			this._Ticket_Error_Classification = default(EntityRef<Ticket_Error_Classification>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Log_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Log_ID
		{
			get
			{
				return this._Ticket_Log_ID;
			}
			set
			{
				if ((this._Ticket_Log_ID != value))
				{
					this.OnTicket_Log_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Log_ID = value;
					this.SendPropertyChanged("Ticket_Log_ID");
					this.OnTicket_Log_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_ID", DbType="Int NOT NULL")]
		public int Ticket_ID
		{
			get
			{
				return this._Ticket_ID;
			}
			set
			{
				if ((this._Ticket_ID != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_ID = value;
					this.SendPropertyChanged("Ticket_ID");
					this.OnTicket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Stage_ID", DbType="Int NOT NULL")]
		public int Ticket_Stage_ID
		{
			get
			{
				return this._Ticket_Stage_ID;
			}
			set
			{
				if ((this._Ticket_Stage_ID != value))
				{
					if (this._Ticket_Stage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Stage_ID = value;
					this.SendPropertyChanged("Ticket_Stage_ID");
					this.OnTicket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_ID", DbType="Int NOT NULL")]
		public int Ticket_Error_ID
		{
			get
			{
				return this._Ticket_Error_ID;
			}
			set
			{
				if ((this._Ticket_Error_ID != value))
				{
					if (this._Ticket_Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_ID = value;
					this.SendPropertyChanged("Ticket_Error_ID");
					this.OnTicket_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Source_ID", DbType="Int NOT NULL")]
		public int Ticket_Source_ID
		{
			get
			{
				return this._Ticket_Source_ID;
			}
			set
			{
				if ((this._Ticket_Source_ID != value))
				{
					this.OnTicket_Source_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Source_ID = value;
					this.SendPropertyChanged("Ticket_Source_ID");
					this.OnTicket_Source_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_Classification_ID", DbType="Int NOT NULL")]
		public int Ticket_Error_Classification_ID
		{
			get
			{
				return this._Ticket_Error_Classification_ID;
			}
			set
			{
				if ((this._Ticket_Error_Classification_ID != value))
				{
					if (this._Ticket_Error_Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Error_Classification_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_Classification_ID = value;
					this.SendPropertyChanged("Ticket_Error_Classification_ID");
					this.OnTicket_Error_Classification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Status_ID", DbType="Int NOT NULL")]
		public int Ticket_Status_ID
		{
			get
			{
				return this._Ticket_Status_ID;
			}
			set
			{
				if ((this._Ticket_Status_ID != value))
				{
					if (this._Ticket_Statuse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Status_ID = value;
					this.SendPropertyChanged("Ticket_Status_ID");
					this.OnTicket_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Details", DbType="NVarChar(2500) NOT NULL", CanBeNull=false)]
		public string Ticket_Details
		{
			get
			{
				return this._Ticket_Details;
			}
			set
			{
				if ((this._Ticket_Details != value))
				{
					this.OnTicket_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Details = value;
					this.SendPropertyChanged("Ticket_Details");
					this.OnTicket_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution_Details", DbType="NVarChar(500)")]
		public string Resolution_Details
		{
			get
			{
				return this._Resolution_Details;
			}
			set
			{
				if ((this._Resolution_Details != value))
				{
					this.OnResolution_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Resolution_Details = value;
					this.SendPropertyChanged("Resolution_Details");
					this.OnResolution_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned_To_ID", DbType="Int")]
		public System.Nullable<int> Assigned_To_ID
		{
			get
			{
				return this._Assigned_To_ID;
			}
			set
			{
				if ((this._Assigned_To_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssigned_To_IDChanging(value);
					this.SendPropertyChanging();
					this._Assigned_To_ID = value;
					this.SendPropertyChanged("Assigned_To_ID");
					this.OnAssigned_To_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible_ID", DbType="Int")]
		public System.Nullable<int> Responsible_ID
		{
			get
			{
				return this._Responsible_ID;
			}
			set
			{
				if ((this._Responsible_ID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsible_IDChanging(value);
					this.SendPropertyChanging();
					this._Responsible_ID = value;
					this.SendPropertyChanged("Responsible_ID");
					this.OnResponsible_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this.OnDate_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Date_Created = value;
					this.SendPropertyChanged("Date_Created");
					this.OnDate_CreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_ID", DbType="Int NOT NULL")]
		public int Created_By_ID
		{
			get
			{
				return this._Created_By_ID;
			}
			set
			{
				if ((this._Created_By_ID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreated_By_IDChanging(value);
					this.SendPropertyChanging();
					this._Created_By_ID = value;
					this.SendPropertyChanged("Created_By_ID");
					this.OnCreated_By_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By_ID", DbType="Int NOT NULL")]
		public int Modified_By_ID
		{
			get
			{
				return this._Modified_By_ID;
			}
			set
			{
				if ((this._Modified_By_ID != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModified_By_IDChanging(value);
					this.SendPropertyChanging();
					this._Modified_By_ID = value;
					this.SendPropertyChanged("Modified_By_ID");
					this.OnModified_By_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Modified
		{
			get
			{
				return this._Date_Modified;
			}
			set
			{
				if ((this._Date_Modified != value))
				{
					this.OnDate_ModifiedChanging(value);
					this.SendPropertyChanging();
					this._Date_Modified = value;
					this.SendPropertyChanged("Date_Modified");
					this.OnDate_ModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int")]
		public System.Nullable<int> Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(255)")]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int")]
		public System.Nullable<int> Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(255)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int")]
		public System.Nullable<int> Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log", Storage="_User", ThisKey="Assigned_To_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Assigned_To_ID = value.User_ID;
					}
					else
					{
						this._Assigned_To_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log1", Storage="_User1", ThisKey="Responsible_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Ticket_Logs1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs1.Add(this);
						this._Responsible_ID = value.User_ID;
					}
					else
					{
						this._Responsible_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log2", Storage="_User2", ThisKey="Created_By_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.Ticket_Logs2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs2.Add(this);
						this._Created_By_ID = value.User_ID;
					}
					else
					{
						this._Created_By_ID = default(int);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Log3", Storage="_User3", ThisKey="Modified_By_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.Ticket_Logs3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs3.Add(this);
						this._Modified_By_ID = value.User_ID;
					}
					else
					{
						this._Modified_By_ID = default(int);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket_Log", Storage="_Ticket_Stage", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID", IsForeignKey=true)]
		public Ticket_Stage Ticket_Stage
		{
			get
			{
				return this._Ticket_Stage.Entity;
			}
			set
			{
				Ticket_Stage previousValue = this._Ticket_Stage.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Stage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Stage.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._Ticket_Stage.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Ticket_Stage_ID = value.Ticket_Stage_ID;
					}
					else
					{
						this._Ticket_Stage_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Stage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Statuse_Ticket_Log", Storage="_Ticket_Statuse", ThisKey="Ticket_Status_ID", OtherKey="Ticket_Status_ID", IsForeignKey=true)]
		public Ticket_Statuse Ticket_Statuse
		{
			get
			{
				return this._Ticket_Statuse.Entity;
			}
			set
			{
				Ticket_Statuse previousValue = this._Ticket_Statuse.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Statuse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Statuse.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._Ticket_Statuse.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Ticket_Status_ID = value.Ticket_Status_ID;
					}
					else
					{
						this._Ticket_Status_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Statuse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Log", Storage="_Ticket_Error", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID", IsForeignKey=true)]
		public Ticket_Error Ticket_Error
		{
			get
			{
				return this._Ticket_Error.Entity;
			}
			set
			{
				Ticket_Error previousValue = this._Ticket_Error.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._Ticket_Error.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Ticket_Error_ID = value.Ticket_Error_ID;
					}
					else
					{
						this._Ticket_Error_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket_Log", Storage="_Ticket_Error_Classification", ThisKey="Ticket_Error_Classification_ID", OtherKey="Ticket_Error_Classification_ID", IsForeignKey=true)]
		public Ticket_Error_Classification Ticket_Error_Classification
		{
			get
			{
				return this._Ticket_Error_Classification.Entity;
			}
			set
			{
				Ticket_Error_Classification previousValue = this._Ticket_Error_Classification.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error_Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error_Classification.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._Ticket_Error_Classification.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Ticket_Error_Classification_ID = value.Ticket_Error_Classification_ID;
					}
					else
					{
						this._Ticket_Error_Classification_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error_Classification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket_Log", Storage="_Ticket", ThisKey="Ticket_ID", OtherKey="Ticket_ID", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.Ticket_Logs.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.Ticket_Logs.Add(this);
						this._Ticket_ID = value.Ticket_ID;
					}
					else
					{
						this._Ticket_ID = default(int);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Stages")]
	public partial class Ticket_Stage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Stage_ID;
		
		private string _Description;
		
		private System.Nullable<int> _Owner_ID;
		
		private int _Sort_Order;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntitySet<Ticket_Error> _Ticket_Errors;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Stage_IDChanging(int value);
    partial void OnTicket_Stage_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    partial void OnSort_OrderChanging(int value);
    partial void OnSort_OrderChanged();
    #endregion
		
		public Ticket_Stage()
		{
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Ticket_Errors = new EntitySet<Ticket_Error>(new Action<Ticket_Error>(this.attach_Ticket_Errors), new Action<Ticket_Error>(this.detach_Ticket_Errors));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Stage_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Stage_ID
		{
			get
			{
				return this._Ticket_Stage_ID;
			}
			set
			{
				if ((this._Ticket_Stage_ID != value))
				{
					this.OnTicket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Stage_ID = value;
					this.SendPropertyChanged("Ticket_Stage_ID");
					this.OnTicket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort_Order", DbType="Int NOT NULL")]
		public int Sort_Order
		{
			get
			{
				return this._Sort_Order;
			}
			set
			{
				if ((this._Sort_Order != value))
				{
					this.OnSort_OrderChanging(value);
					this.SendPropertyChanging();
					this._Sort_Order = value;
					this.SendPropertyChanged("Sort_Order");
					this.OnSort_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket_Log", Storage="_Ticket_Logs", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket_Error", Storage="_Ticket_Errors", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID")]
		public EntitySet<Ticket_Error> Ticket_Errors
		{
			get
			{
				return this._Ticket_Errors;
			}
			set
			{
				this._Ticket_Errors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket", Storage="_Tickets", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Stage", Storage="_User", ThisKey="Owner_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ticket_Stages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ticket_Stages.Add(this);
						this._Owner_ID = value.User_ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = null;
		}
		
		private void attach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = this;
		}
		
		private void detach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Stage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Statuses")]
	public partial class Ticket_Statuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Status_ID;
		
		private string _Description;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Status_IDChanging(int value);
    partial void OnTicket_Status_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Ticket_Statuse()
		{
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Status_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Status_ID
		{
			get
			{
				return this._Ticket_Status_ID;
			}
			set
			{
				if ((this._Ticket_Status_ID != value))
				{
					this.OnTicket_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Status_ID = value;
					this.SendPropertyChanged("Ticket_Status_ID");
					this.OnTicket_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Statuse_Ticket_Log", Storage="_Ticket_Logs", ThisKey="Ticket_Status_ID", OtherKey="Ticket_Status_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Statuse_Ticket", Storage="_Tickets", ThisKey="Ticket_Status_ID", OtherKey="Ticket_Status_ID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Statuse = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Statuse = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Statuse = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Statuse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Sources")]
	public partial class Ticket_Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Source_ID;
		
		private string _Description;
		
		private System.Nullable<int> _Owner_ID;
		
		private EntitySet<Ticket_Error> _Ticket_Errors;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Source_IDChanging(int value);
    partial void OnTicket_Source_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOwner_IDChanging(System.Nullable<int> value);
    partial void OnOwner_IDChanged();
    #endregion
		
		public Ticket_Source()
		{
			this._Ticket_Errors = new EntitySet<Ticket_Error>(new Action<Ticket_Error>(this.attach_Ticket_Errors), new Action<Ticket_Error>(this.detach_Ticket_Errors));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Source_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Source_ID
		{
			get
			{
				return this._Ticket_Source_ID;
			}
			set
			{
				if ((this._Ticket_Source_ID != value))
				{
					this.OnTicket_Source_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Source_ID = value;
					this.SendPropertyChanged("Ticket_Source_ID");
					this.OnTicket_Source_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner_ID", DbType="Int")]
		public System.Nullable<int> Owner_ID
		{
			get
			{
				return this._Owner_ID;
			}
			set
			{
				if ((this._Owner_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwner_IDChanging(value);
					this.SendPropertyChanging();
					this._Owner_ID = value;
					this.SendPropertyChanged("Owner_ID");
					this.OnOwner_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Source_Ticket_Error", Storage="_Ticket_Errors", ThisKey="Ticket_Source_ID", OtherKey="Ticket_Source_ID")]
		public EntitySet<Ticket_Error> Ticket_Errors
		{
			get
			{
				return this._Ticket_Errors;
			}
			set
			{
				this._Ticket_Errors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Source_Ticket", Storage="_Tickets", ThisKey="Ticket_Source_ID", OtherKey="Ticket_Source_ID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Source", Storage="_User", ThisKey="Owner_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ticket_Sources.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ticket_Sources.Add(this);
						this._Owner_ID = value.User_ID;
					}
					else
					{
						this._Owner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Source = this;
		}
		
		private void detach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Source = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Source = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Source = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Errors")]
	public partial class Ticket_Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Error_ID;
		
		private int _Ticket_Stage_ID;
		
		private System.Nullable<int> _Ticket_Source_ID;
		
		private string _Description;
		
		private int _Default_Ticket_Error_Classification_ID;
		
		private System.Nullable<bool> _Require_Case_Note;
		
		private System.Nullable<bool> _Require_Resolution_Center;
		
		private System.Nullable<int> _Ticket_Error_Note_Template_ID;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntitySet<Ticket_Error_Attribute> _Ticket_Error_Attributes;
		
		private EntitySet<Ticket_Error_Detail> _Ticket_Error_Details;
		
		private EntityRef<Ticket_Source> _Ticket_Source;
		
		private EntityRef<Ticket_Stage> _Ticket_Stage;
		
		private EntityRef<Ticket_Error_Classification> _Ticket_Error_Classification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Error_IDChanging(int value);
    partial void OnTicket_Error_IDChanged();
    partial void OnTicket_Stage_IDChanging(int value);
    partial void OnTicket_Stage_IDChanged();
    partial void OnTicket_Source_IDChanging(System.Nullable<int> value);
    partial void OnTicket_Source_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDefault_Ticket_Error_Classification_IDChanging(int value);
    partial void OnDefault_Ticket_Error_Classification_IDChanged();
    partial void OnRequire_Case_NoteChanging(System.Nullable<bool> value);
    partial void OnRequire_Case_NoteChanged();
    partial void OnRequire_Resolution_CenterChanging(System.Nullable<bool> value);
    partial void OnRequire_Resolution_CenterChanged();
    partial void OnTicket_Error_Note_Template_IDChanging(System.Nullable<int> value);
    partial void OnTicket_Error_Note_Template_IDChanged();
    #endregion
		
		public Ticket_Error()
		{
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Ticket_Error_Attributes = new EntitySet<Ticket_Error_Attribute>(new Action<Ticket_Error_Attribute>(this.attach_Ticket_Error_Attributes), new Action<Ticket_Error_Attribute>(this.detach_Ticket_Error_Attributes));
			this._Ticket_Error_Details = new EntitySet<Ticket_Error_Detail>(new Action<Ticket_Error_Detail>(this.attach_Ticket_Error_Details), new Action<Ticket_Error_Detail>(this.detach_Ticket_Error_Details));
			this._Ticket_Source = default(EntityRef<Ticket_Source>);
			this._Ticket_Stage = default(EntityRef<Ticket_Stage>);
			this._Ticket_Error_Classification = default(EntityRef<Ticket_Error_Classification>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Error_ID
		{
			get
			{
				return this._Ticket_Error_ID;
			}
			set
			{
				if ((this._Ticket_Error_ID != value))
				{
					this.OnTicket_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_ID = value;
					this.SendPropertyChanged("Ticket_Error_ID");
					this.OnTicket_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Stage_ID", DbType="Int NOT NULL")]
		public int Ticket_Stage_ID
		{
			get
			{
				return this._Ticket_Stage_ID;
			}
			set
			{
				if ((this._Ticket_Stage_ID != value))
				{
					if (this._Ticket_Stage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Stage_ID = value;
					this.SendPropertyChanged("Ticket_Stage_ID");
					this.OnTicket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Source_ID", DbType="Int")]
		public System.Nullable<int> Ticket_Source_ID
		{
			get
			{
				return this._Ticket_Source_ID;
			}
			set
			{
				if ((this._Ticket_Source_ID != value))
				{
					if (this._Ticket_Source.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Source_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Source_ID = value;
					this.SendPropertyChanged("Ticket_Source_ID");
					this.OnTicket_Source_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Ticket_Error_Classification_ID", DbType="Int NOT NULL")]
		public int Default_Ticket_Error_Classification_ID
		{
			get
			{
				return this._Default_Ticket_Error_Classification_ID;
			}
			set
			{
				if ((this._Default_Ticket_Error_Classification_ID != value))
				{
					if (this._Ticket_Error_Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefault_Ticket_Error_Classification_IDChanging(value);
					this.SendPropertyChanging();
					this._Default_Ticket_Error_Classification_ID = value;
					this.SendPropertyChanged("Default_Ticket_Error_Classification_ID");
					this.OnDefault_Ticket_Error_Classification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Require_Case_Note", DbType="Bit")]
		public System.Nullable<bool> Require_Case_Note
		{
			get
			{
				return this._Require_Case_Note;
			}
			set
			{
				if ((this._Require_Case_Note != value))
				{
					this.OnRequire_Case_NoteChanging(value);
					this.SendPropertyChanging();
					this._Require_Case_Note = value;
					this.SendPropertyChanged("Require_Case_Note");
					this.OnRequire_Case_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Require_Resolution_Center", DbType="Bit")]
		public System.Nullable<bool> Require_Resolution_Center
		{
			get
			{
				return this._Require_Resolution_Center;
			}
			set
			{
				if ((this._Require_Resolution_Center != value))
				{
					this.OnRequire_Resolution_CenterChanging(value);
					this.SendPropertyChanging();
					this._Require_Resolution_Center = value;
					this.SendPropertyChanged("Require_Resolution_Center");
					this.OnRequire_Resolution_CenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_Note_Template_ID", DbType="Int")]
		public System.Nullable<int> Ticket_Error_Note_Template_ID
		{
			get
			{
				return this._Ticket_Error_Note_Template_ID;
			}
			set
			{
				if ((this._Ticket_Error_Note_Template_ID != value))
				{
					this.OnTicket_Error_Note_Template_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_Note_Template_ID = value;
					this.SendPropertyChanged("Ticket_Error_Note_Template_ID");
					this.OnTicket_Error_Note_Template_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Log", Storage="_Ticket_Logs", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Error_Attribute", Storage="_Ticket_Error_Attributes", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID")]
		public EntitySet<Ticket_Error_Attribute> Ticket_Error_Attributes
		{
			get
			{
				return this._Ticket_Error_Attributes;
			}
			set
			{
				this._Ticket_Error_Attributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Error_Detail", Storage="_Ticket_Error_Details", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID")]
		public EntitySet<Ticket_Error_Detail> Ticket_Error_Details
		{
			get
			{
				return this._Ticket_Error_Details;
			}
			set
			{
				this._Ticket_Error_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Source_Ticket_Error", Storage="_Ticket_Source", ThisKey="Ticket_Source_ID", OtherKey="Ticket_Source_ID", IsForeignKey=true)]
		public Ticket_Source Ticket_Source
		{
			get
			{
				return this._Ticket_Source.Entity;
			}
			set
			{
				Ticket_Source previousValue = this._Ticket_Source.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Source.Entity = null;
						previousValue.Ticket_Errors.Remove(this);
					}
					this._Ticket_Source.Entity = value;
					if ((value != null))
					{
						value.Ticket_Errors.Add(this);
						this._Ticket_Source_ID = value.Ticket_Source_ID;
					}
					else
					{
						this._Ticket_Source_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ticket_Source");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket_Error", Storage="_Ticket_Stage", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID", IsForeignKey=true)]
		public Ticket_Stage Ticket_Stage
		{
			get
			{
				return this._Ticket_Stage.Entity;
			}
			set
			{
				Ticket_Stage previousValue = this._Ticket_Stage.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Stage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Stage.Entity = null;
						previousValue.Ticket_Errors.Remove(this);
					}
					this._Ticket_Stage.Entity = value;
					if ((value != null))
					{
						value.Ticket_Errors.Add(this);
						this._Ticket_Stage_ID = value.Ticket_Stage_ID;
					}
					else
					{
						this._Ticket_Stage_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Stage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket_Error", Storage="_Ticket_Error_Classification", ThisKey="Default_Ticket_Error_Classification_ID", OtherKey="Ticket_Error_Classification_ID", IsForeignKey=true)]
		public Ticket_Error_Classification Ticket_Error_Classification
		{
			get
			{
				return this._Ticket_Error_Classification.Entity;
			}
			set
			{
				Ticket_Error_Classification previousValue = this._Ticket_Error_Classification.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error_Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error_Classification.Entity = null;
						previousValue.Ticket_Errors.Remove(this);
					}
					this._Ticket_Error_Classification.Entity = value;
					if ((value != null))
					{
						value.Ticket_Errors.Add(this);
						this._Default_Ticket_Error_Classification_ID = value.Ticket_Error_Classification_ID;
					}
					else
					{
						this._Default_Ticket_Error_Classification_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error_Classification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = null;
		}
		
		private void attach_Ticket_Error_Attributes(Ticket_Error_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = this;
		}
		
		private void detach_Ticket_Error_Attributes(Ticket_Error_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = null;
		}
		
		private void attach_Ticket_Error_Details(Ticket_Error_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = this;
		}
		
		private void detach_Ticket_Error_Details(Ticket_Error_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Location_ID;
		
		private string _Description;
		
		private int _Organization_ID;
		
		private string _Note;
		
		private int _Area;
		
		private System.Guid _rowguid;
		
		private string _Abbreviation;
		
		private EntitySet<User> _Users;
		
		private EntitySet<User> _Users1;
		
		private EntitySet<Item_Log> _Item_Logs;
		
		private EntitySet<Location_Attribute> _Location_Attributes;
		
		private EntitySet<Item_Waypoint> _Item_Waypoints;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocation_IDChanging(int value);
    partial void OnLocation_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnAreaChanging(int value);
    partial void OnAreaChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    #endregion
		
		public Location()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Users1 = new EntitySet<User>(new Action<User>(this.attach_Users1), new Action<User>(this.detach_Users1));
			this._Item_Logs = new EntitySet<Item_Log>(new Action<Item_Log>(this.attach_Item_Logs), new Action<Item_Log>(this.detach_Item_Logs));
			this._Location_Attributes = new EntitySet<Location_Attribute>(new Action<Location_Attribute>(this.attach_Location_Attributes), new Action<Location_Attribute>(this.detach_Location_Attributes));
			this._Item_Waypoints = new EntitySet<Item_Waypoint>(new Action<Item_Waypoint>(this.attach_Item_Waypoints), new Action<Item_Waypoint>(this.detach_Item_Waypoints));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					this.OnLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_ID = value;
					this.SendPropertyChanged("Location_ID");
					this.OnLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int NOT NULL")]
		public int Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(10)")]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User", Storage="_Users", ThisKey="Location_ID", OtherKey="Default_Location_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User1", Storage="_Users1", ThisKey="Location_ID", OtherKey="Slide_Location_ID")]
		public EntitySet<User> Users1
		{
			get
			{
				return this._Users1;
			}
			set
			{
				this._Users1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Item_Log", Storage="_Item_Logs", ThisKey="Location_ID", OtherKey="Location_ID")]
		public EntitySet<Item_Log> Item_Logs
		{
			get
			{
				return this._Item_Logs;
			}
			set
			{
				this._Item_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Location_Attribute", Storage="_Location_Attributes", ThisKey="Location_ID", OtherKey="Location_ID")]
		public EntitySet<Location_Attribute> Location_Attributes
		{
			get
			{
				return this._Location_Attributes;
			}
			set
			{
				this._Location_Attributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Item_Waypoint", Storage="_Item_Waypoints", ThisKey="Location_ID", OtherKey="Location_ID")]
		public EntitySet<Item_Waypoint> Item_Waypoints
		{
			get
			{
				return this._Item_Waypoints;
			}
			set
			{
				this._Item_Waypoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Location", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = this;
		}
		
		private void detach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = null;
		}
		
		private void attach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Location_Attributes(Location_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Location_Attributes(Location_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Item_Waypoints(Item_Waypoint entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Item_Waypoints(Item_Waypoint entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STS_Overrides")]
	public partial class STS_Override : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STS_Override_ID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTS_Override_IDChanging(int value);
    partial void OnSTS_Override_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public STS_Override()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STS_Override_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STS_Override_ID
		{
			get
			{
				return this._STS_Override_ID;
			}
			set
			{
				if ((this._STS_Override_ID != value))
				{
					this.OnSTS_Override_IDChanging(value);
					this.SendPropertyChanging();
					this._STS_Override_ID = value;
					this.SendPropertyChanged("STS_Override_ID");
					this.OnSTS_Override_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location_Attributes")]
	public partial class Location_Attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Location_Attribute_ID;
		
		private int _Location_ID;
		
		private int _Location_Attribute_Type_ID;
		
		private System.Guid _rowguid;
		
		private int _Sort_Order;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocation_Attribute_IDChanging(int value);
    partial void OnLocation_Attribute_IDChanged();
    partial void OnLocation_IDChanging(int value);
    partial void OnLocation_IDChanged();
    partial void OnLocation_Attribute_Type_IDChanging(int value);
    partial void OnLocation_Attribute_Type_IDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnSort_OrderChanging(int value);
    partial void OnSort_OrderChanged();
    #endregion
		
		public Location_Attribute()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Attribute_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Location_Attribute_ID
		{
			get
			{
				return this._Location_Attribute_ID;
			}
			set
			{
				if ((this._Location_Attribute_ID != value))
				{
					this.OnLocation_Attribute_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_Attribute_ID = value;
					this.SendPropertyChanged("Location_Attribute_ID");
					this.OnLocation_Attribute_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_ID = value;
					this.SendPropertyChanged("Location_ID");
					this.OnLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Attribute_Type_ID", DbType="Int NOT NULL")]
		public int Location_Attribute_Type_ID
		{
			get
			{
				return this._Location_Attribute_Type_ID;
			}
			set
			{
				if ((this._Location_Attribute_Type_ID != value))
				{
					this.OnLocation_Attribute_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_Attribute_Type_ID = value;
					this.SendPropertyChanged("Location_Attribute_Type_ID");
					this.OnLocation_Attribute_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort_Order", DbType="Int NOT NULL")]
		public int Sort_Order
		{
			get
			{
				return this._Sort_Order;
			}
			set
			{
				if ((this._Sort_Order != value))
				{
					this.OnSort_OrderChanging(value);
					this.SendPropertyChanging();
					this._Sort_Order = value;
					this.SendPropertyChanged("Sort_Order");
					this.OnSort_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Location_Attribute", Storage="_Location", ThisKey="Location_ID", OtherKey="Location_ID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Location_Attributes.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Location_Attributes.Add(this);
						this._Location_ID = value.Location_ID;
					}
					else
					{
						this._Location_ID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Printers")]
	public partial class Printer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Printer_ID;
		
		private int _Printer_Type_ID;
		
		private string _Description;
		
		private int _Location_ID;
		
		private string _UNC;
		
		private EntitySet<User_Printer> _User_Printers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrinter_IDChanging(int value);
    partial void OnPrinter_IDChanged();
    partial void OnPrinter_Type_IDChanging(int value);
    partial void OnPrinter_Type_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLocation_IDChanging(int value);
    partial void OnLocation_IDChanged();
    partial void OnUNCChanging(string value);
    partial void OnUNCChanged();
    #endregion
		
		public Printer()
		{
			this._User_Printers = new EntitySet<User_Printer>(new Action<User_Printer>(this.attach_User_Printers), new Action<User_Printer>(this.detach_User_Printers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Printer_ID
		{
			get
			{
				return this._Printer_ID;
			}
			set
			{
				if ((this._Printer_ID != value))
				{
					this.OnPrinter_IDChanging(value);
					this.SendPropertyChanging();
					this._Printer_ID = value;
					this.SendPropertyChanged("Printer_ID");
					this.OnPrinter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printer_Type_ID", DbType="Int NOT NULL")]
		public int Printer_Type_ID
		{
			get
			{
				return this._Printer_Type_ID;
			}
			set
			{
				if ((this._Printer_Type_ID != value))
				{
					this.OnPrinter_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Printer_Type_ID = value;
					this.SendPropertyChanged("Printer_Type_ID");
					this.OnPrinter_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					this.OnLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_ID = value;
					this.SendPropertyChanged("Location_ID");
					this.OnLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UNC
		{
			get
			{
				return this._UNC;
			}
			set
			{
				if ((this._UNC != value))
				{
					this.OnUNCChanging(value);
					this.SendPropertyChanging();
					this._UNC = value;
					this.SendPropertyChanged("UNC");
					this.OnUNCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Printer_User_Printer", Storage="_User_Printers", ThisKey="Printer_ID", OtherKey="Printer_ID")]
		public EntitySet<User_Printer> User_Printers
		{
			get
			{
				return this._User_Printers;
			}
			set
			{
				this._User_Printers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Printers(User_Printer entity)
		{
			this.SendPropertyChanging();
			entity.Printer = this;
		}
		
		private void detach_User_Printers(User_Printer entity)
		{
			this.SendPropertyChanging();
			entity.Printer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Printers")]
	public partial class User_Printer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Printer_ID;
		
		private int _User_ID;
		
		private System.Nullable<int> _Printer_ID;
		
		private bool _Default_Printer;
		
		private EntityRef<Printer> _Printer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Printer_IDChanging(int value);
    partial void OnUser_Printer_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnPrinter_IDChanging(System.Nullable<int> value);
    partial void OnPrinter_IDChanged();
    partial void OnDefault_PrinterChanging(bool value);
    partial void OnDefault_PrinterChanged();
    #endregion
		
		public User_Printer()
		{
			this._Printer = default(EntityRef<Printer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Printer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Printer_ID
		{
			get
			{
				return this._User_Printer_ID;
			}
			set
			{
				if ((this._User_Printer_ID != value))
				{
					this.OnUser_Printer_IDChanging(value);
					this.SendPropertyChanging();
					this._User_Printer_ID = value;
					this.SendPropertyChanged("User_Printer_ID");
					this.OnUser_Printer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printer_ID", DbType="Int")]
		public System.Nullable<int> Printer_ID
		{
			get
			{
				return this._Printer_ID;
			}
			set
			{
				if ((this._Printer_ID != value))
				{
					if (this._Printer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrinter_IDChanging(value);
					this.SendPropertyChanging();
					this._Printer_ID = value;
					this.SendPropertyChanged("Printer_ID");
					this.OnPrinter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Printer", DbType="Bit NOT NULL")]
		public bool Default_Printer
		{
			get
			{
				return this._Default_Printer;
			}
			set
			{
				if ((this._Default_Printer != value))
				{
					this.OnDefault_PrinterChanging(value);
					this.SendPropertyChanging();
					this._Default_Printer = value;
					this.SendPropertyChanged("Default_Printer");
					this.OnDefault_PrinterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Printer_User_Printer", Storage="_Printer", ThisKey="Printer_ID", OtherKey="Printer_ID", IsForeignKey=true)]
		public Printer Printer
		{
			get
			{
				return this._Printer.Entity;
			}
			set
			{
				Printer previousValue = this._Printer.Entity;
				if (((previousValue != value) 
							|| (this._Printer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Printer.Entity = null;
						previousValue.User_Printers.Remove(this);
					}
					this._Printer.Entity = value;
					if ((value != null))
					{
						value.User_Printers.Add(this);
						this._Printer_ID = value.Printer_ID;
					}
					else
					{
						this._Printer_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Printer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Printer", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Printers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Printers.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Machine_Handhelds")]
	public partial class Machine_Handheld : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Machine_Handheld_ID;
		
		private int _Machine_ID;
		
		private string _PhoneNumber;
		
		private string _Email_Address;
		
		private string _Device_ID;
		
		private System.Nullable<int> _Default_User_ID;
		
		private string _Registration_ID;
		
		private System.Nullable<int> _Asset_Number_ID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachine_Handheld_IDChanging(int value);
    partial void OnMachine_Handheld_IDChanged();
    partial void OnMachine_IDChanging(int value);
    partial void OnMachine_IDChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmail_AddressChanging(string value);
    partial void OnEmail_AddressChanged();
    partial void OnDevice_IDChanging(string value);
    partial void OnDevice_IDChanged();
    partial void OnDefault_User_IDChanging(System.Nullable<int> value);
    partial void OnDefault_User_IDChanged();
    partial void OnRegistration_IDChanging(string value);
    partial void OnRegistration_IDChanged();
    partial void OnAsset_Number_IDChanging(System.Nullable<int> value);
    partial void OnAsset_Number_IDChanged();
    #endregion
		
		public Machine_Handheld()
		{
			this._User = default(EntityRef<User>);
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Handheld_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Machine_Handheld_ID
		{
			get
			{
				return this._Machine_Handheld_ID;
			}
			set
			{
				if ((this._Machine_Handheld_ID != value))
				{
					this.OnMachine_Handheld_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_Handheld_ID = value;
					this.SendPropertyChanged("Machine_Handheld_ID");
					this.OnMachine_Handheld_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", DbType="Int NOT NULL")]
		public int Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Address", DbType="NVarChar(50)")]
		public string Email_Address
		{
			get
			{
				return this._Email_Address;
			}
			set
			{
				if ((this._Email_Address != value))
				{
					this.OnEmail_AddressChanging(value);
					this.SendPropertyChanging();
					this._Email_Address = value;
					this.SendPropertyChanged("Email_Address");
					this.OnEmail_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Device_ID", DbType="NVarChar(255)")]
		public string Device_ID
		{
			get
			{
				return this._Device_ID;
			}
			set
			{
				if ((this._Device_ID != value))
				{
					this.OnDevice_IDChanging(value);
					this.SendPropertyChanging();
					this._Device_ID = value;
					this.SendPropertyChanged("Device_ID");
					this.OnDevice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_User_ID", DbType="Int")]
		public System.Nullable<int> Default_User_ID
		{
			get
			{
				return this._Default_User_ID;
			}
			set
			{
				if ((this._Default_User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefault_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Default_User_ID = value;
					this.SendPropertyChanged("Default_User_ID");
					this.OnDefault_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registration_ID", DbType="NVarChar(1000)")]
		public string Registration_ID
		{
			get
			{
				return this._Registration_ID;
			}
			set
			{
				if ((this._Registration_ID != value))
				{
					this.OnRegistration_IDChanging(value);
					this.SendPropertyChanging();
					this._Registration_ID = value;
					this.SendPropertyChanged("Registration_ID");
					this.OnRegistration_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asset_Number_ID", DbType="Int")]
		public System.Nullable<int> Asset_Number_ID
		{
			get
			{
				return this._Asset_Number_ID;
			}
			set
			{
				if ((this._Asset_Number_ID != value))
				{
					this.OnAsset_Number_IDChanging(value);
					this.SendPropertyChanging();
					this._Asset_Number_ID = value;
					this.SendPropertyChanged("Asset_Number_ID");
					this.OnAsset_Number_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Machine_Handheld", Storage="_User", ThisKey="Default_User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Machine_Handhelds.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Machine_Handhelds.Add(this);
						this._Default_User_ID = value.User_ID;
					}
					else
					{
						this._Default_User_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Machine_Handheld", Storage="_Machine", ThisKey="Machine_ID", OtherKey="Machine_ID", IsForeignKey=true)]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.Machine_Handhelds.Remove(this);
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.Machine_Handhelds.Add(this);
						this._Machine_ID = value.Machine_ID;
					}
					else
					{
						this._Machine_ID = default(int);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Machine_Attributes")]
	public partial class Machine_Attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Machine_Attribute_ID;
		
		private int _Machine_ID;
		
		private int _Machine_Attribute_Type_ID;
		
		private EntityRef<Machine_Attribute_Type> _Machine_Attribute_Type;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachine_Attribute_IDChanging(int value);
    partial void OnMachine_Attribute_IDChanged();
    partial void OnMachine_IDChanging(int value);
    partial void OnMachine_IDChanged();
    partial void OnMachine_Attribute_Type_IDChanging(int value);
    partial void OnMachine_Attribute_Type_IDChanged();
    #endregion
		
		public Machine_Attribute()
		{
			this._Machine_Attribute_Type = default(EntityRef<Machine_Attribute_Type>);
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Attribute_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Machine_Attribute_ID
		{
			get
			{
				return this._Machine_Attribute_ID;
			}
			set
			{
				if ((this._Machine_Attribute_ID != value))
				{
					this.OnMachine_Attribute_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_Attribute_ID = value;
					this.SendPropertyChanged("Machine_Attribute_ID");
					this.OnMachine_Attribute_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", DbType="Int NOT NULL")]
		public int Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Attribute_Type_ID", DbType="Int NOT NULL")]
		public int Machine_Attribute_Type_ID
		{
			get
			{
				return this._Machine_Attribute_Type_ID;
			}
			set
			{
				if ((this._Machine_Attribute_Type_ID != value))
				{
					if (this._Machine_Attribute_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachine_Attribute_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_Attribute_Type_ID = value;
					this.SendPropertyChanged("Machine_Attribute_Type_ID");
					this.OnMachine_Attribute_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Attribute_Type_Machine_Attribute", Storage="_Machine_Attribute_Type", ThisKey="Machine_Attribute_Type_ID", OtherKey="Machine_Attribute_Type_ID", IsForeignKey=true)]
		public Machine_Attribute_Type Machine_Attribute_Type
		{
			get
			{
				return this._Machine_Attribute_Type.Entity;
			}
			set
			{
				Machine_Attribute_Type previousValue = this._Machine_Attribute_Type.Entity;
				if (((previousValue != value) 
							|| (this._Machine_Attribute_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine_Attribute_Type.Entity = null;
						previousValue.Machine_Attributes.Remove(this);
					}
					this._Machine_Attribute_Type.Entity = value;
					if ((value != null))
					{
						value.Machine_Attributes.Add(this);
						this._Machine_Attribute_Type_ID = value.Machine_Attribute_Type_ID;
					}
					else
					{
						this._Machine_Attribute_Type_ID = default(int);
					}
					this.SendPropertyChanged("Machine_Attribute_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Machine_Attribute", Storage="_Machine", ThisKey="Machine_ID", OtherKey="Machine_ID", IsForeignKey=true)]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.Machine_Attributes.Remove(this);
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.Machine_Attributes.Add(this);
						this._Machine_ID = value.Machine_ID;
					}
					else
					{
						this._Machine_ID = default(int);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Machine_Attribute_Types")]
	public partial class Machine_Attribute_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Machine_Attribute_Type_ID;
		
		private string _Machine_Attribute_Type_Description;
		
		private EntitySet<Machine_Attribute> _Machine_Attributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachine_Attribute_Type_IDChanging(int value);
    partial void OnMachine_Attribute_Type_IDChanged();
    partial void OnMachine_Attribute_Type_DescriptionChanging(string value);
    partial void OnMachine_Attribute_Type_DescriptionChanged();
    #endregion
		
		public Machine_Attribute_Type()
		{
			this._Machine_Attributes = new EntitySet<Machine_Attribute>(new Action<Machine_Attribute>(this.attach_Machine_Attributes), new Action<Machine_Attribute>(this.detach_Machine_Attributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Attribute_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Machine_Attribute_Type_ID
		{
			get
			{
				return this._Machine_Attribute_Type_ID;
			}
			set
			{
				if ((this._Machine_Attribute_Type_ID != value))
				{
					this.OnMachine_Attribute_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_Attribute_Type_ID = value;
					this.SendPropertyChanged("Machine_Attribute_Type_ID");
					this.OnMachine_Attribute_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Attribute_Type_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Machine_Attribute_Type_Description
		{
			get
			{
				return this._Machine_Attribute_Type_Description;
			}
			set
			{
				if ((this._Machine_Attribute_Type_Description != value))
				{
					this.OnMachine_Attribute_Type_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Machine_Attribute_Type_Description = value;
					this.SendPropertyChanged("Machine_Attribute_Type_Description");
					this.OnMachine_Attribute_Type_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Attribute_Type_Machine_Attribute", Storage="_Machine_Attributes", ThisKey="Machine_Attribute_Type_ID", OtherKey="Machine_Attribute_Type_ID")]
		public EntitySet<Machine_Attribute> Machine_Attributes
		{
			get
			{
				return this._Machine_Attributes;
			}
			set
			{
				this._Machine_Attributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Machine_Attributes(Machine_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Machine_Attribute_Type = this;
		}
		
		private void detach_Machine_Attributes(Machine_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Machine_Attribute_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Machines")]
	public partial class Machine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Machine_ID;
		
		private string _Machine_Name;
		
		private int _Location;
		
		private System.Nullable<bool> _Citrix;
		
		private System.Nullable<bool> _Kiosk_Mode;
		
		private System.Nullable<bool> _Auto_Login;
		
		private System.Guid _rowguid;
		
		private System.Nullable<int> _Printer_ID;
		
		private EntitySet<Item_Log> _Item_Logs;
		
		private EntitySet<Machine_Handheld> _Machine_Handhelds;
		
		private EntitySet<Machine_Attribute> _Machine_Attributes;
		
		private EntitySet<Website> _Websites;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachine_IDChanging(int value);
    partial void OnMachine_IDChanged();
    partial void OnMachine_NameChanging(string value);
    partial void OnMachine_NameChanged();
    partial void OnLocationChanging(int value);
    partial void OnLocationChanged();
    partial void OnCitrixChanging(System.Nullable<bool> value);
    partial void OnCitrixChanged();
    partial void OnKiosk_ModeChanging(System.Nullable<bool> value);
    partial void OnKiosk_ModeChanged();
    partial void OnAuto_LoginChanging(System.Nullable<bool> value);
    partial void OnAuto_LoginChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnPrinter_IDChanging(System.Nullable<int> value);
    partial void OnPrinter_IDChanged();
    #endregion
		
		public Machine()
		{
			this._Item_Logs = new EntitySet<Item_Log>(new Action<Item_Log>(this.attach_Item_Logs), new Action<Item_Log>(this.detach_Item_Logs));
			this._Machine_Handhelds = new EntitySet<Machine_Handheld>(new Action<Machine_Handheld>(this.attach_Machine_Handhelds), new Action<Machine_Handheld>(this.detach_Machine_Handhelds));
			this._Machine_Attributes = new EntitySet<Machine_Attribute>(new Action<Machine_Attribute>(this.attach_Machine_Attributes), new Action<Machine_Attribute>(this.detach_Machine_Attributes));
			this._Websites = new EntitySet<Website>(new Action<Website>(this.attach_Websites), new Action<Website>(this.detach_Websites));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Machine_Name
		{
			get
			{
				return this._Machine_Name;
			}
			set
			{
				if ((this._Machine_Name != value))
				{
					this.OnMachine_NameChanging(value);
					this.SendPropertyChanging();
					this._Machine_Name = value;
					this.SendPropertyChanged("Machine_Name");
					this.OnMachine_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Int NOT NULL")]
		public int Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Citrix", DbType="Bit")]
		public System.Nullable<bool> Citrix
		{
			get
			{
				return this._Citrix;
			}
			set
			{
				if ((this._Citrix != value))
				{
					this.OnCitrixChanging(value);
					this.SendPropertyChanging();
					this._Citrix = value;
					this.SendPropertyChanged("Citrix");
					this.OnCitrixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kiosk_Mode", DbType="Bit")]
		public System.Nullable<bool> Kiosk_Mode
		{
			get
			{
				return this._Kiosk_Mode;
			}
			set
			{
				if ((this._Kiosk_Mode != value))
				{
					this.OnKiosk_ModeChanging(value);
					this.SendPropertyChanging();
					this._Kiosk_Mode = value;
					this.SendPropertyChanged("Kiosk_Mode");
					this.OnKiosk_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auto_Login", DbType="Bit")]
		public System.Nullable<bool> Auto_Login
		{
			get
			{
				return this._Auto_Login;
			}
			set
			{
				if ((this._Auto_Login != value))
				{
					this.OnAuto_LoginChanging(value);
					this.SendPropertyChanging();
					this._Auto_Login = value;
					this.SendPropertyChanged("Auto_Login");
					this.OnAuto_LoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printer_ID", DbType="Int")]
		public System.Nullable<int> Printer_ID
		{
			get
			{
				return this._Printer_ID;
			}
			set
			{
				if ((this._Printer_ID != value))
				{
					this.OnPrinter_IDChanging(value);
					this.SendPropertyChanging();
					this._Printer_ID = value;
					this.SendPropertyChanged("Printer_ID");
					this.OnPrinter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Item_Log", Storage="_Item_Logs", ThisKey="Machine_ID", OtherKey="Machine_ID")]
		public EntitySet<Item_Log> Item_Logs
		{
			get
			{
				return this._Item_Logs;
			}
			set
			{
				this._Item_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Machine_Handheld", Storage="_Machine_Handhelds", ThisKey="Machine_ID", OtherKey="Machine_ID")]
		public EntitySet<Machine_Handheld> Machine_Handhelds
		{
			get
			{
				return this._Machine_Handhelds;
			}
			set
			{
				this._Machine_Handhelds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Machine_Attribute", Storage="_Machine_Attributes", ThisKey="Machine_ID", OtherKey="Machine_ID")]
		public EntitySet<Machine_Attribute> Machine_Attributes
		{
			get
			{
				return this._Machine_Attributes;
			}
			set
			{
				this._Machine_Attributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Website", Storage="_Websites", ThisKey="Machine_ID", OtherKey="Machine_ID")]
		public EntitySet<Website> Websites
		{
			get
			{
				return this._Websites;
			}
			set
			{
				this._Websites.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Machine = this;
		}
		
		private void detach_Item_Logs(Item_Log entity)
		{
			this.SendPropertyChanging();
			entity.Machine = null;
		}
		
		private void attach_Machine_Handhelds(Machine_Handheld entity)
		{
			this.SendPropertyChanging();
			entity.Machine = this;
		}
		
		private void detach_Machine_Handhelds(Machine_Handheld entity)
		{
			this.SendPropertyChanging();
			entity.Machine = null;
		}
		
		private void attach_Machine_Attributes(Machine_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Machine = this;
		}
		
		private void detach_Machine_Attributes(Machine_Attribute entity)
		{
			this.SendPropertyChanging();
			entity.Machine = null;
		}
		
		private void attach_Websites(Website entity)
		{
			this.SendPropertyChanging();
			entity.Machine = this;
		}
		
		private void detach_Websites(Website entity)
		{
			this.SendPropertyChanging();
			entity.Machine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Error_Attributes")]
	public partial class Ticket_Error_Attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Error_Attribute_ID;
		
		private int _Ticket_Error_ID;
		
		private int _Ticket_Attribute_Type_ID;
		
		private EntityRef<Ticket_Error> _Ticket_Error;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Error_Attribute_IDChanging(int value);
    partial void OnTicket_Error_Attribute_IDChanged();
    partial void OnTicket_Error_IDChanging(int value);
    partial void OnTicket_Error_IDChanged();
    partial void OnTicket_Attribute_Type_IDChanging(int value);
    partial void OnTicket_Attribute_Type_IDChanged();
    #endregion
		
		public Ticket_Error_Attribute()
		{
			this._Ticket_Error = default(EntityRef<Ticket_Error>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_Attribute_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Error_Attribute_ID
		{
			get
			{
				return this._Ticket_Error_Attribute_ID;
			}
			set
			{
				if ((this._Ticket_Error_Attribute_ID != value))
				{
					this.OnTicket_Error_Attribute_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_Attribute_ID = value;
					this.SendPropertyChanged("Ticket_Error_Attribute_ID");
					this.OnTicket_Error_Attribute_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_ID", DbType="Int NOT NULL")]
		public int Ticket_Error_ID
		{
			get
			{
				return this._Ticket_Error_ID;
			}
			set
			{
				if ((this._Ticket_Error_ID != value))
				{
					if (this._Ticket_Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_ID = value;
					this.SendPropertyChanged("Ticket_Error_ID");
					this.OnTicket_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Attribute_Type_ID", DbType="Int NOT NULL")]
		public int Ticket_Attribute_Type_ID
		{
			get
			{
				return this._Ticket_Attribute_Type_ID;
			}
			set
			{
				if ((this._Ticket_Attribute_Type_ID != value))
				{
					this.OnTicket_Attribute_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Attribute_Type_ID = value;
					this.SendPropertyChanged("Ticket_Attribute_Type_ID");
					this.OnTicket_Attribute_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Error_Attribute", Storage="_Ticket_Error", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID", IsForeignKey=true)]
		public Ticket_Error Ticket_Error
		{
			get
			{
				return this._Ticket_Error.Entity;
			}
			set
			{
				Ticket_Error previousValue = this._Ticket_Error.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error.Entity = null;
						previousValue.Ticket_Error_Attributes.Remove(this);
					}
					this._Ticket_Error.Entity = value;
					if ((value != null))
					{
						value.Ticket_Error_Attributes.Add(this);
						this._Ticket_Error_ID = value.Ticket_Error_ID;
					}
					else
					{
						this._Ticket_Error_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Crystal_Reports")]
	public partial class Crystal_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Crystal_Report_ID;
		
		private string _Description;
		
		private string _Report_Location;
		
		private string _Database_Server;
		
		private string _Database_Name;
		
		private string _Database_User;
		
		private string _Database_Password;
		
		private bool _Active;
		
		private System.DateTime _Date_Added;
		
		private string _Paramater1;
		
		private string _Paramater2;
		
		private string _Paramater3;
		
		private string _Paramater4;
		
		private string _SP_Name1;
		
		private string _SP_Name2;
		
		private string _SP_Name3;
		
		private string _SP_Name4;
		
		private string _Friendly_Name;
		
		private int _Crystal_Report_Type_ID;
		
		private bool _Show_In_Dropdown;
		
		private string _Local_Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCrystal_Report_IDChanging(int value);
    partial void OnCrystal_Report_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnReport_LocationChanging(string value);
    partial void OnReport_LocationChanged();
    partial void OnDatabase_ServerChanging(string value);
    partial void OnDatabase_ServerChanged();
    partial void OnDatabase_NameChanging(string value);
    partial void OnDatabase_NameChanged();
    partial void OnDatabase_UserChanging(string value);
    partial void OnDatabase_UserChanged();
    partial void OnDatabase_PasswordChanging(string value);
    partial void OnDatabase_PasswordChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDate_AddedChanging(System.DateTime value);
    partial void OnDate_AddedChanged();
    partial void OnParamater1Changing(string value);
    partial void OnParamater1Changed();
    partial void OnParamater2Changing(string value);
    partial void OnParamater2Changed();
    partial void OnParamater3Changing(string value);
    partial void OnParamater3Changed();
    partial void OnParamater4Changing(string value);
    partial void OnParamater4Changed();
    partial void OnSP_Name1Changing(string value);
    partial void OnSP_Name1Changed();
    partial void OnSP_Name2Changing(string value);
    partial void OnSP_Name2Changed();
    partial void OnSP_Name3Changing(string value);
    partial void OnSP_Name3Changed();
    partial void OnSP_Name4Changing(string value);
    partial void OnSP_Name4Changed();
    partial void OnFriendly_NameChanging(string value);
    partial void OnFriendly_NameChanged();
    partial void OnCrystal_Report_Type_IDChanging(int value);
    partial void OnCrystal_Report_Type_IDChanged();
    partial void OnShow_In_DropdownChanging(bool value);
    partial void OnShow_In_DropdownChanged();
    partial void OnLocal_ReportChanging(string value);
    partial void OnLocal_ReportChanged();
    #endregion
		
		public Crystal_Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crystal_Report_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Crystal_Report_ID
		{
			get
			{
				return this._Crystal_Report_ID;
			}
			set
			{
				if ((this._Crystal_Report_ID != value))
				{
					this.OnCrystal_Report_IDChanging(value);
					this.SendPropertyChanging();
					this._Crystal_Report_ID = value;
					this.SendPropertyChanged("Crystal_Report_ID");
					this.OnCrystal_Report_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Report_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Report_Location
		{
			get
			{
				return this._Report_Location;
			}
			set
			{
				if ((this._Report_Location != value))
				{
					this.OnReport_LocationChanging(value);
					this.SendPropertyChanging();
					this._Report_Location = value;
					this.SendPropertyChanged("Report_Location");
					this.OnReport_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database_Server", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Database_Server
		{
			get
			{
				return this._Database_Server;
			}
			set
			{
				if ((this._Database_Server != value))
				{
					this.OnDatabase_ServerChanging(value);
					this.SendPropertyChanging();
					this._Database_Server = value;
					this.SendPropertyChanged("Database_Server");
					this.OnDatabase_ServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Database_Name
		{
			get
			{
				return this._Database_Name;
			}
			set
			{
				if ((this._Database_Name != value))
				{
					this.OnDatabase_NameChanging(value);
					this.SendPropertyChanging();
					this._Database_Name = value;
					this.SendPropertyChanged("Database_Name");
					this.OnDatabase_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database_User", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Database_User
		{
			get
			{
				return this._Database_User;
			}
			set
			{
				if ((this._Database_User != value))
				{
					this.OnDatabase_UserChanging(value);
					this.SendPropertyChanging();
					this._Database_User = value;
					this.SendPropertyChanged("Database_User");
					this.OnDatabase_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Database_Password
		{
			get
			{
				return this._Database_Password;
			}
			set
			{
				if ((this._Database_Password != value))
				{
					this.OnDatabase_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Database_Password = value;
					this.SendPropertyChanged("Database_Password");
					this.OnDatabase_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Added", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Added
		{
			get
			{
				return this._Date_Added;
			}
			set
			{
				if ((this._Date_Added != value))
				{
					this.OnDate_AddedChanging(value);
					this.SendPropertyChanging();
					this._Date_Added = value;
					this.SendPropertyChanged("Date_Added");
					this.OnDate_AddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paramater1", DbType="NVarChar(255)")]
		public string Paramater1
		{
			get
			{
				return this._Paramater1;
			}
			set
			{
				if ((this._Paramater1 != value))
				{
					this.OnParamater1Changing(value);
					this.SendPropertyChanging();
					this._Paramater1 = value;
					this.SendPropertyChanged("Paramater1");
					this.OnParamater1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paramater2", DbType="NVarChar(255)")]
		public string Paramater2
		{
			get
			{
				return this._Paramater2;
			}
			set
			{
				if ((this._Paramater2 != value))
				{
					this.OnParamater2Changing(value);
					this.SendPropertyChanging();
					this._Paramater2 = value;
					this.SendPropertyChanged("Paramater2");
					this.OnParamater2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paramater3", DbType="NVarChar(255)")]
		public string Paramater3
		{
			get
			{
				return this._Paramater3;
			}
			set
			{
				if ((this._Paramater3 != value))
				{
					this.OnParamater3Changing(value);
					this.SendPropertyChanging();
					this._Paramater3 = value;
					this.SendPropertyChanged("Paramater3");
					this.OnParamater3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paramater4", DbType="NVarChar(255)")]
		public string Paramater4
		{
			get
			{
				return this._Paramater4;
			}
			set
			{
				if ((this._Paramater4 != value))
				{
					this.OnParamater4Changing(value);
					this.SendPropertyChanging();
					this._Paramater4 = value;
					this.SendPropertyChanged("Paramater4");
					this.OnParamater4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Name1", DbType="NVarChar(255)")]
		public string SP_Name1
		{
			get
			{
				return this._SP_Name1;
			}
			set
			{
				if ((this._SP_Name1 != value))
				{
					this.OnSP_Name1Changing(value);
					this.SendPropertyChanging();
					this._SP_Name1 = value;
					this.SendPropertyChanged("SP_Name1");
					this.OnSP_Name1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Name2", DbType="NVarChar(255)")]
		public string SP_Name2
		{
			get
			{
				return this._SP_Name2;
			}
			set
			{
				if ((this._SP_Name2 != value))
				{
					this.OnSP_Name2Changing(value);
					this.SendPropertyChanging();
					this._SP_Name2 = value;
					this.SendPropertyChanged("SP_Name2");
					this.OnSP_Name2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Name3", DbType="NVarChar(255)")]
		public string SP_Name3
		{
			get
			{
				return this._SP_Name3;
			}
			set
			{
				if ((this._SP_Name3 != value))
				{
					this.OnSP_Name3Changing(value);
					this.SendPropertyChanging();
					this._SP_Name3 = value;
					this.SendPropertyChanged("SP_Name3");
					this.OnSP_Name3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_Name4", DbType="NVarChar(255)")]
		public string SP_Name4
		{
			get
			{
				return this._SP_Name4;
			}
			set
			{
				if ((this._SP_Name4 != value))
				{
					this.OnSP_Name4Changing(value);
					this.SendPropertyChanging();
					this._SP_Name4 = value;
					this.SendPropertyChanged("SP_Name4");
					this.OnSP_Name4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friendly_Name", DbType="NVarChar(255)")]
		public string Friendly_Name
		{
			get
			{
				return this._Friendly_Name;
			}
			set
			{
				if ((this._Friendly_Name != value))
				{
					this.OnFriendly_NameChanging(value);
					this.SendPropertyChanging();
					this._Friendly_Name = value;
					this.SendPropertyChanged("Friendly_Name");
					this.OnFriendly_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crystal_Report_Type_ID", DbType="Int NOT NULL")]
		public int Crystal_Report_Type_ID
		{
			get
			{
				return this._Crystal_Report_Type_ID;
			}
			set
			{
				if ((this._Crystal_Report_Type_ID != value))
				{
					this.OnCrystal_Report_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Crystal_Report_Type_ID = value;
					this.SendPropertyChanged("Crystal_Report_Type_ID");
					this.OnCrystal_Report_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show_In_Dropdown", DbType="Bit NOT NULL")]
		public bool Show_In_Dropdown
		{
			get
			{
				return this._Show_In_Dropdown;
			}
			set
			{
				if ((this._Show_In_Dropdown != value))
				{
					this.OnShow_In_DropdownChanging(value);
					this.SendPropertyChanging();
					this._Show_In_Dropdown = value;
					this.SendPropertyChanged("Show_In_Dropdown");
					this.OnShow_In_DropdownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Local_Report", DbType="NVarChar(255)")]
		public string Local_Report
		{
			get
			{
				return this._Local_Report;
			}
			set
			{
				if ((this._Local_Report != value))
				{
					this.OnLocal_ReportChanging(value);
					this.SendPropertyChanging();
					this._Local_Report = value;
					this.SendPropertyChanged("Local_Report");
					this.OnLocal_ReportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template_Categories")]
	public partial class Template_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_Category_ID;
		
		private string _Description;
		
		private EntitySet<Template> _Templates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_Category_IDChanging(int value);
    partial void OnTemplate_Category_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Template_Category()
		{
			this._Templates = new EntitySet<Template>(new Action<Template>(this.attach_Templates), new Action<Template>(this.detach_Templates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Template_Category_ID
		{
			get
			{
				return this._Template_Category_ID;
			}
			set
			{
				if ((this._Template_Category_ID != value))
				{
					this.OnTemplate_Category_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_Category_ID = value;
					this.SendPropertyChanged("Template_Category_ID");
					this.OnTemplate_Category_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Category_Template", Storage="_Templates", ThisKey="Template_Category_ID", OtherKey="Template_Category_ID")]
		public EntitySet<Template> Templates
		{
			get
			{
				return this._Templates;
			}
			set
			{
				this._Templates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Templates(Template entity)
		{
			this.SendPropertyChanging();
			entity.Template_Category = this;
		}
		
		private void detach_Templates(Template entity)
		{
			this.SendPropertyChanging();
			entity.Template_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template_Types")]
	public partial class Template_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_Type_ID;
		
		private string _Description;
		
		private EntitySet<Template_Data> _Template_Datas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_Type_IDChanging(int value);
    partial void OnTemplate_Type_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Template_Type()
		{
			this._Template_Datas = new EntitySet<Template_Data>(new Action<Template_Data>(this.attach_Template_Datas), new Action<Template_Data>(this.detach_Template_Datas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Template_Type_ID
		{
			get
			{
				return this._Template_Type_ID;
			}
			set
			{
				if ((this._Template_Type_ID != value))
				{
					this.OnTemplate_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_Type_ID = value;
					this.SendPropertyChanged("Template_Type_ID");
					this.OnTemplate_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Type_Template_Data", Storage="_Template_Datas", ThisKey="Template_Type_ID", OtherKey="Template_Type_ID")]
		public EntitySet<Template_Data> Template_Datas
		{
			get
			{
				return this._Template_Datas;
			}
			set
			{
				this._Template_Datas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Template_Datas(Template_Data entity)
		{
			this.SendPropertyChanging();
			entity.Template_Type = this;
		}
		
		private void detach_Template_Datas(Template_Data entity)
		{
			this.SendPropertyChanging();
			entity.Template_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Template_Data")]
	public partial class Template_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_Data_ID;
		
		private int _Template_ID;
		
		private int _Template_Type_ID;
		
		private string _Data;
		
		private EntityRef<Template_Type> _Template_Type;
		
		private EntityRef<Template> _Template;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_Data_IDChanging(int value);
    partial void OnTemplate_Data_IDChanged();
    partial void OnTemplate_IDChanging(int value);
    partial void OnTemplate_IDChanged();
    partial void OnTemplate_Type_IDChanging(int value);
    partial void OnTemplate_Type_IDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Template_Data()
		{
			this._Template_Type = default(EntityRef<Template_Type>);
			this._Template = default(EntityRef<Template>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Data_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Template_Data_ID
		{
			get
			{
				return this._Template_Data_ID;
			}
			set
			{
				if ((this._Template_Data_ID != value))
				{
					this.OnTemplate_Data_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_Data_ID = value;
					this.SendPropertyChanged("Template_Data_ID");
					this.OnTemplate_Data_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_ID", DbType="Int NOT NULL")]
		public int Template_ID
		{
			get
			{
				return this._Template_ID;
			}
			set
			{
				if ((this._Template_ID != value))
				{
					if (this._Template.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplate_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_ID = value;
					this.SendPropertyChanged("Template_ID");
					this.OnTemplate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Type_ID", DbType="Int NOT NULL")]
		public int Template_Type_ID
		{
			get
			{
				return this._Template_Type_ID;
			}
			set
			{
				if ((this._Template_Type_ID != value))
				{
					if (this._Template_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplate_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_Type_ID = value;
					this.SendPropertyChanged("Template_Type_ID");
					this.OnTemplate_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Type_Template_Data", Storage="_Template_Type", ThisKey="Template_Type_ID", OtherKey="Template_Type_ID", IsForeignKey=true)]
		public Template_Type Template_Type
		{
			get
			{
				return this._Template_Type.Entity;
			}
			set
			{
				Template_Type previousValue = this._Template_Type.Entity;
				if (((previousValue != value) 
							|| (this._Template_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Template_Type.Entity = null;
						previousValue.Template_Datas.Remove(this);
					}
					this._Template_Type.Entity = value;
					if ((value != null))
					{
						value.Template_Datas.Add(this);
						this._Template_Type_ID = value.Template_Type_ID;
					}
					else
					{
						this._Template_Type_ID = default(int);
					}
					this.SendPropertyChanged("Template_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Template_Data", Storage="_Template", ThisKey="Template_ID", OtherKey="Template_ID", IsForeignKey=true)]
		public Template Template
		{
			get
			{
				return this._Template.Entity;
			}
			set
			{
				Template previousValue = this._Template.Entity;
				if (((previousValue != value) 
							|| (this._Template.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Template.Entity = null;
						previousValue.Template_Datas.Remove(this);
					}
					this._Template.Entity = value;
					if ((value != null))
					{
						value.Template_Datas.Add(this);
						this._Template_ID = value.Template_ID;
					}
					else
					{
						this._Template_ID = default(int);
					}
					this.SendPropertyChanged("Template");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Templates")]
	public partial class Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Template_ID;
		
		private string _Code;
		
		private int _Template_Category_ID;
		
		private System.DateTime _Created_Date;
		
		private bool _Active;
		
		private string _Description;
		
		private EntitySet<Template_Data> _Template_Datas;
		
		private EntityRef<Template_Category> _Template_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemplate_IDChanging(int value);
    partial void OnTemplate_IDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTemplate_Category_IDChanging(int value);
    partial void OnTemplate_Category_IDChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Template()
		{
			this._Template_Datas = new EntitySet<Template_Data>(new Action<Template_Data>(this.attach_Template_Datas), new Action<Template_Data>(this.detach_Template_Datas));
			this._Template_Category = default(EntityRef<Template_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Template_ID
		{
			get
			{
				return this._Template_ID;
			}
			set
			{
				if ((this._Template_ID != value))
				{
					this.OnTemplate_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_ID = value;
					this.SendPropertyChanged("Template_ID");
					this.OnTemplate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template_Category_ID", DbType="Int NOT NULL")]
		public int Template_Category_ID
		{
			get
			{
				return this._Template_Category_ID;
			}
			set
			{
				if ((this._Template_Category_ID != value))
				{
					if (this._Template_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplate_Category_IDChanging(value);
					this.SendPropertyChanging();
					this._Template_Category_ID = value;
					this.SendPropertyChanged("Template_Category_ID");
					this.OnTemplate_Category_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Created_Date
		{
			get
			{
				return this._Created_Date;
			}
			set
			{
				if ((this._Created_Date != value))
				{
					this.OnCreated_DateChanging(value);
					this.SendPropertyChanging();
					this._Created_Date = value;
					this.SendPropertyChanged("Created_Date");
					this.OnCreated_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Template_Data", Storage="_Template_Datas", ThisKey="Template_ID", OtherKey="Template_ID")]
		public EntitySet<Template_Data> Template_Datas
		{
			get
			{
				return this._Template_Datas;
			}
			set
			{
				this._Template_Datas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Template_Category_Template", Storage="_Template_Category", ThisKey="Template_Category_ID", OtherKey="Template_Category_ID", IsForeignKey=true)]
		public Template_Category Template_Category
		{
			get
			{
				return this._Template_Category.Entity;
			}
			set
			{
				Template_Category previousValue = this._Template_Category.Entity;
				if (((previousValue != value) 
							|| (this._Template_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Template_Category.Entity = null;
						previousValue.Templates.Remove(this);
					}
					this._Template_Category.Entity = value;
					if ((value != null))
					{
						value.Templates.Add(this);
						this._Template_Category_ID = value.Template_Category_ID;
					}
					else
					{
						this._Template_Category_ID = default(int);
					}
					this.SendPropertyChanged("Template_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Template_Datas(Template_Data entity)
		{
			this.SendPropertyChanging();
			entity.Template = this;
		}
		
		private void detach_Template_Datas(Template_Data entity)
		{
			this.SendPropertyChanging();
			entity.Template = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Extensions")]
	public partial class Extension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Extension_ID;
		
		private string _Company;
		
		private string _Description;
		
		private string _Number;
		
		private string _FAX;
		
		private string _Mobile;
		
		private int _Division_ID;
		
		private System.Nullable<bool> _Active;
		
		private string _Type;
		
		private string _Position_Note;
		
		private string _Email;
		
		private EntityRef<Division> _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtension_IDChanging(int value);
    partial void OnExtension_IDChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnDivision_IDChanging(int value);
    partial void OnDivision_IDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPosition_NoteChanging(string value);
    partial void OnPosition_NoteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Extension()
		{
			this._Division = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Extension_ID
		{
			get
			{
				return this._Extension_ID;
			}
			set
			{
				if ((this._Extension_ID != value))
				{
					this.OnExtension_IDChanging(value);
					this.SendPropertyChanging();
					this._Extension_ID = value;
					this.SendPropertyChanged("Extension_ID");
					this.OnExtension_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(150)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX", DbType="NVarChar(150)")]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(150)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_ID", DbType="Int NOT NULL")]
		public int Division_ID
		{
			get
			{
				return this._Division_ID;
			}
			set
			{
				if ((this._Division_ID != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivision_IDChanging(value);
					this.SendPropertyChanging();
					this._Division_ID = value;
					this.SendPropertyChanged("Division_ID");
					this.OnDivision_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Position/Note]", Storage="_Position_Note", DbType="NVarChar(250)")]
		public string Position_Note
		{
			get
			{
				return this._Position_Note;
			}
			set
			{
				if ((this._Position_Note != value))
				{
					this.OnPosition_NoteChanging(value);
					this.SendPropertyChanging();
					this._Position_Note = value;
					this.SendPropertyChanged("Position_Note");
					this.OnPosition_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Extension", Storage="_Division", ThisKey="Division_ID", OtherKey="Division_ID", IsForeignKey=true)]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Extensions.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Extensions.Add(this);
						this._Division_ID = value.Division_ID;
					}
					else
					{
						this._Division_ID = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Types")]
	public partial class User_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Type_ID;
		
		private string _Description;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Type_IDChanging(int value);
    partial void OnUser_Type_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public User_Type()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Type_ID
		{
			get
			{
				return this._User_Type_ID;
			}
			set
			{
				if ((this._User_Type_ID != value))
				{
					this.OnUser_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._User_Type_ID = value;
					this.SendPropertyChanged("User_Type_ID");
					this.OnUser_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User", Storage="_Users", ThisKey="User_Type_ID", OtherKey="User_Type_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.User_Type = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.User_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Websites")]
	public partial class Website : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Website_ID;
		
		private int _Machine_ID;
		
		private string _Description;
		
		private int _Default_Ticket_Stage_ID;
		
		private EntitySet<Website_Page> _Website_Pages;
		
		private EntityRef<Machine> _Machine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebsite_IDChanging(int value);
    partial void OnWebsite_IDChanged();
    partial void OnMachine_IDChanging(int value);
    partial void OnMachine_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDefault_Ticket_Stage_IDChanging(int value);
    partial void OnDefault_Ticket_Stage_IDChanged();
    #endregion
		
		public Website()
		{
			this._Website_Pages = new EntitySet<Website_Page>(new Action<Website_Page>(this.attach_Website_Pages), new Action<Website_Page>(this.detach_Website_Pages));
			this._Machine = default(EntityRef<Machine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Website_ID
		{
			get
			{
				return this._Website_ID;
			}
			set
			{
				if ((this._Website_ID != value))
				{
					this.OnWebsite_IDChanging(value);
					this.SendPropertyChanging();
					this._Website_ID = value;
					this.SendPropertyChanged("Website_ID");
					this.OnWebsite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", DbType="Int NOT NULL")]
		public int Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					if (this._Machine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Ticket_Stage_ID", DbType="Int NOT NULL")]
		public int Default_Ticket_Stage_ID
		{
			get
			{
				return this._Default_Ticket_Stage_ID;
			}
			set
			{
				if ((this._Default_Ticket_Stage_ID != value))
				{
					this.OnDefault_Ticket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Default_Ticket_Stage_ID = value;
					this.SendPropertyChanged("Default_Ticket_Stage_ID");
					this.OnDefault_Ticket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_Website_Page", Storage="_Website_Pages", ThisKey="Website_ID", OtherKey="Website_ID")]
		public EntitySet<Website_Page> Website_Pages
		{
			get
			{
				return this._Website_Pages;
			}
			set
			{
				this._Website_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Machine_Website", Storage="_Machine", ThisKey="Machine_ID", OtherKey="Machine_ID", IsForeignKey=true)]
		public Machine Machine
		{
			get
			{
				return this._Machine.Entity;
			}
			set
			{
				Machine previousValue = this._Machine.Entity;
				if (((previousValue != value) 
							|| (this._Machine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Machine.Entity = null;
						previousValue.Websites.Remove(this);
					}
					this._Machine.Entity = value;
					if ((value != null))
					{
						value.Websites.Add(this);
						this._Machine_ID = value.Machine_ID;
					}
					else
					{
						this._Machine_ID = default(int);
					}
					this.SendPropertyChanged("Machine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Website_Pages(Website_Page entity)
		{
			this.SendPropertyChanging();
			entity.Website = this;
		}
		
		private void detach_Website_Pages(Website_Page entity)
		{
			this.SendPropertyChanging();
			entity.Website = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Website_Pages")]
	public partial class Website_Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Website_Page_ID;
		
		private int _Website_ID;
		
		private int _Ticket_Stage_ID;
		
		private string _URL;
		
		private string _Description;
		
		private EntityRef<Website> _Website;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebsite_Page_IDChanging(int value);
    partial void OnWebsite_Page_IDChanged();
    partial void OnWebsite_IDChanging(int value);
    partial void OnWebsite_IDChanged();
    partial void OnTicket_Stage_IDChanging(int value);
    partial void OnTicket_Stage_IDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Website_Page()
		{
			this._Website = default(EntityRef<Website>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website_Page_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Website_Page_ID
		{
			get
			{
				return this._Website_Page_ID;
			}
			set
			{
				if ((this._Website_Page_ID != value))
				{
					this.OnWebsite_Page_IDChanging(value);
					this.SendPropertyChanging();
					this._Website_Page_ID = value;
					this.SendPropertyChanged("Website_Page_ID");
					this.OnWebsite_Page_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website_ID", DbType="Int NOT NULL")]
		public int Website_ID
		{
			get
			{
				return this._Website_ID;
			}
			set
			{
				if ((this._Website_ID != value))
				{
					if (this._Website.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebsite_IDChanging(value);
					this.SendPropertyChanging();
					this._Website_ID = value;
					this.SendPropertyChanged("Website_ID");
					this.OnWebsite_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Stage_ID", DbType="Int NOT NULL")]
		public int Ticket_Stage_ID
		{
			get
			{
				return this._Ticket_Stage_ID;
			}
			set
			{
				if ((this._Ticket_Stage_ID != value))
				{
					this.OnTicket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Stage_ID = value;
					this.SendPropertyChanged("Ticket_Stage_ID");
					this.OnTicket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Website_Website_Page", Storage="_Website", ThisKey="Website_ID", OtherKey="Website_ID", IsForeignKey=true)]
		public Website Website
		{
			get
			{
				return this._Website.Entity;
			}
			set
			{
				Website previousValue = this._Website.Entity;
				if (((previousValue != value) 
							|| (this._Website.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Website.Entity = null;
						previousValue.Website_Pages.Remove(this);
					}
					this._Website.Entity = value;
					if ((value != null))
					{
						value.Website_Pages.Add(this);
						this._Website_ID = value.Website_ID;
					}
					else
					{
						this._Website_ID = default(int);
					}
					this.SendPropertyChanged("Website");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Roles")]
	public partial class User_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRole_ID;
		
		private int _User_ID;
		
		private int _Role_ID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRole_IDChanging(int value);
    partial void OnUserRole_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    #endregion
		
		public User_Role()
		{
			this._User = default(EntityRef<User>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRole_ID
		{
			get
			{
				return this._UserRole_ID;
			}
			set
			{
				if ((this._UserRole_ID != value))
				{
					this.OnUserRole_IDChanging(value);
					this.SendPropertyChanging();
					this._UserRole_ID = value;
					this.SendPropertyChanged("UserRole_ID");
					this.OnUserRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int NOT NULL")]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Role", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_Role", ThisKey="Role_ID", OtherKey="Role_ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.User_Roles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.User_Roles.Add(this);
						this._Role_ID = value.Role_ID;
					}
					else
					{
						this._Role_ID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_ID;
		
		private string _Description;
		
		private EntitySet<User_Role> _User_Roles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._User_Roles = new EntitySet<User_Role>(new Action<User_Role>(this.attach_User_Roles), new Action<User_Role>(this.detach_User_Roles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User_Role", Storage="_User_Roles", ThisKey="Role_ID", OtherKey="Role_ID")]
		public EntitySet<User_Role> User_Roles
		{
			get
			{
				return this._User_Roles;
			}
			set
			{
				this._User_Roles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_User_Roles(User_Role entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Control_Types")]
	public partial class Form_Control_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Form_Control_Type_ID;
		
		private string _Description;
		
		private EntitySet<Form_Control> _Form_Controls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForm_Control_Type_IDChanging(int value);
    partial void OnForm_Control_Type_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Form_Control_Type()
		{
			this._Form_Controls = new EntitySet<Form_Control>(new Action<Form_Control>(this.attach_Form_Controls), new Action<Form_Control>(this.detach_Form_Controls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Control_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Form_Control_Type_ID
		{
			get
			{
				return this._Form_Control_Type_ID;
			}
			set
			{
				if ((this._Form_Control_Type_ID != value))
				{
					this.OnForm_Control_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Control_Type_ID = value;
					this.SendPropertyChanged("Form_Control_Type_ID");
					this.OnForm_Control_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Control_Type_Form_Control", Storage="_Form_Controls", ThisKey="Form_Control_Type_ID", OtherKey="Form_Control_Type_ID")]
		public EntitySet<Form_Control> Form_Controls
		{
			get
			{
				return this._Form_Controls;
			}
			set
			{
				this._Form_Controls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Control_Type = this;
		}
		
		private void detach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Control_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Operators")]
	public partial class Form_Operator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Form_Operator_ID;
		
		private string _Description;
		
		private EntitySet<Form_Control> _Form_Controls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForm_Operator_IDChanging(int value);
    partial void OnForm_Operator_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Form_Operator()
		{
			this._Form_Controls = new EntitySet<Form_Control>(new Action<Form_Control>(this.attach_Form_Controls), new Action<Form_Control>(this.detach_Form_Controls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Operator_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Form_Operator_ID
		{
			get
			{
				return this._Form_Operator_ID;
			}
			set
			{
				if ((this._Form_Operator_ID != value))
				{
					this.OnForm_Operator_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Operator_ID = value;
					this.SendPropertyChanged("Form_Operator_ID");
					this.OnForm_Operator_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Operator_Form_Control", Storage="_Form_Controls", ThisKey="Form_Operator_ID", OtherKey="Form_Operator_ID")]
		public EntitySet<Form_Control> Form_Controls
		{
			get
			{
				return this._Form_Controls;
			}
			set
			{
				this._Form_Controls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Operator = this;
		}
		
		private void detach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Operator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Controls")]
	public partial class Form_Control : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Form_Control_ID;
		
		private string _Field_Name;
		
		private string _Display_Name;
		
		private System.Nullable<int> _Location_X;
		
		private System.Nullable<int> _Location_Y;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _Font_Size;
		
		private System.Nullable<bool> _Focus;
		
		private System.Nullable<int> _Sort_Order;
		
		private System.Nullable<int> _Form_Control_Type_ID;
		
		private System.Nullable<int> _Form_Font_ID;
		
		private System.Nullable<int> _Form_Operator_ID;
		
		private System.Nullable<int> _Form_Control_Parent_ID;
		
		private EntitySet<Form_Control> _Form_Controls;
		
		private EntityRef<Form_Control_Type> _Form_Control_Type;
		
		private EntityRef<Form_Control> _Form_Control1;
		
		private EntityRef<Form_Operator> _Form_Operator;
		
		private EntityRef<Form_Font> _Form_Font;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForm_Control_IDChanging(int value);
    partial void OnForm_Control_IDChanged();
    partial void OnField_NameChanging(string value);
    partial void OnField_NameChanged();
    partial void OnDisplay_NameChanging(string value);
    partial void OnDisplay_NameChanged();
    partial void OnLocation_XChanging(System.Nullable<int> value);
    partial void OnLocation_XChanged();
    partial void OnLocation_YChanging(System.Nullable<int> value);
    partial void OnLocation_YChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFont_SizeChanging(System.Nullable<int> value);
    partial void OnFont_SizeChanged();
    partial void OnFocusChanging(System.Nullable<bool> value);
    partial void OnFocusChanged();
    partial void OnSort_OrderChanging(System.Nullable<int> value);
    partial void OnSort_OrderChanged();
    partial void OnForm_Control_Type_IDChanging(System.Nullable<int> value);
    partial void OnForm_Control_Type_IDChanged();
    partial void OnForm_Font_IDChanging(System.Nullable<int> value);
    partial void OnForm_Font_IDChanged();
    partial void OnForm_Operator_IDChanging(System.Nullable<int> value);
    partial void OnForm_Operator_IDChanged();
    partial void OnForm_Control_Parent_IDChanging(System.Nullable<int> value);
    partial void OnForm_Control_Parent_IDChanged();
    #endregion
		
		public Form_Control()
		{
			this._Form_Controls = new EntitySet<Form_Control>(new Action<Form_Control>(this.attach_Form_Controls), new Action<Form_Control>(this.detach_Form_Controls));
			this._Form_Control_Type = default(EntityRef<Form_Control_Type>);
			this._Form_Control1 = default(EntityRef<Form_Control>);
			this._Form_Operator = default(EntityRef<Form_Operator>);
			this._Form_Font = default(EntityRef<Form_Font>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Control_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Form_Control_ID
		{
			get
			{
				return this._Form_Control_ID;
			}
			set
			{
				if ((this._Form_Control_ID != value))
				{
					this.OnForm_Control_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Control_ID = value;
					this.SendPropertyChanged("Form_Control_ID");
					this.OnForm_Control_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_Name", DbType="NVarChar(255)")]
		public string Field_Name
		{
			get
			{
				return this._Field_Name;
			}
			set
			{
				if ((this._Field_Name != value))
				{
					this.OnField_NameChanging(value);
					this.SendPropertyChanging();
					this._Field_Name = value;
					this.SendPropertyChanged("Field_Name");
					this.OnField_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display_Name", DbType="NVarChar(255)")]
		public string Display_Name
		{
			get
			{
				return this._Display_Name;
			}
			set
			{
				if ((this._Display_Name != value))
				{
					this.OnDisplay_NameChanging(value);
					this.SendPropertyChanging();
					this._Display_Name = value;
					this.SendPropertyChanged("Display_Name");
					this.OnDisplay_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_X", DbType="Int")]
		public System.Nullable<int> Location_X
		{
			get
			{
				return this._Location_X;
			}
			set
			{
				if ((this._Location_X != value))
				{
					this.OnLocation_XChanging(value);
					this.SendPropertyChanging();
					this._Location_X = value;
					this.SendPropertyChanged("Location_X");
					this.OnLocation_XChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Y", DbType="Int")]
		public System.Nullable<int> Location_Y
		{
			get
			{
				return this._Location_Y;
			}
			set
			{
				if ((this._Location_Y != value))
				{
					this.OnLocation_YChanging(value);
					this.SendPropertyChanging();
					this._Location_Y = value;
					this.SendPropertyChanged("Location_Y");
					this.OnLocation_YChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Font_Size", DbType="Int")]
		public System.Nullable<int> Font_Size
		{
			get
			{
				return this._Font_Size;
			}
			set
			{
				if ((this._Font_Size != value))
				{
					this.OnFont_SizeChanging(value);
					this.SendPropertyChanging();
					this._Font_Size = value;
					this.SendPropertyChanged("Font_Size");
					this.OnFont_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Focus", DbType="Bit")]
		public System.Nullable<bool> Focus
		{
			get
			{
				return this._Focus;
			}
			set
			{
				if ((this._Focus != value))
				{
					this.OnFocusChanging(value);
					this.SendPropertyChanging();
					this._Focus = value;
					this.SendPropertyChanged("Focus");
					this.OnFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort_Order", DbType="Int")]
		public System.Nullable<int> Sort_Order
		{
			get
			{
				return this._Sort_Order;
			}
			set
			{
				if ((this._Sort_Order != value))
				{
					this.OnSort_OrderChanging(value);
					this.SendPropertyChanging();
					this._Sort_Order = value;
					this.SendPropertyChanged("Sort_Order");
					this.OnSort_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Control_Type_ID", DbType="Int")]
		public System.Nullable<int> Form_Control_Type_ID
		{
			get
			{
				return this._Form_Control_Type_ID;
			}
			set
			{
				if ((this._Form_Control_Type_ID != value))
				{
					if (this._Form_Control_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Control_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Control_Type_ID = value;
					this.SendPropertyChanged("Form_Control_Type_ID");
					this.OnForm_Control_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Font_ID", DbType="Int")]
		public System.Nullable<int> Form_Font_ID
		{
			get
			{
				return this._Form_Font_ID;
			}
			set
			{
				if ((this._Form_Font_ID != value))
				{
					if (this._Form_Font.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Font_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Font_ID = value;
					this.SendPropertyChanged("Form_Font_ID");
					this.OnForm_Font_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Operator_ID", DbType="Int")]
		public System.Nullable<int> Form_Operator_ID
		{
			get
			{
				return this._Form_Operator_ID;
			}
			set
			{
				if ((this._Form_Operator_ID != value))
				{
					if (this._Form_Operator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Operator_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Operator_ID = value;
					this.SendPropertyChanged("Form_Operator_ID");
					this.OnForm_Operator_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Control_Parent_ID", DbType="Int")]
		public System.Nullable<int> Form_Control_Parent_ID
		{
			get
			{
				return this._Form_Control_Parent_ID;
			}
			set
			{
				if ((this._Form_Control_Parent_ID != value))
				{
					if (this._Form_Control1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForm_Control_Parent_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Control_Parent_ID = value;
					this.SendPropertyChanged("Form_Control_Parent_ID");
					this.OnForm_Control_Parent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Control_Form_Control", Storage="_Form_Controls", ThisKey="Form_Control_ID", OtherKey="Form_Control_Parent_ID")]
		public EntitySet<Form_Control> Form_Controls
		{
			get
			{
				return this._Form_Controls;
			}
			set
			{
				this._Form_Controls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Control_Type_Form_Control", Storage="_Form_Control_Type", ThisKey="Form_Control_Type_ID", OtherKey="Form_Control_Type_ID", IsForeignKey=true)]
		public Form_Control_Type Form_Control_Type
		{
			get
			{
				return this._Form_Control_Type.Entity;
			}
			set
			{
				Form_Control_Type previousValue = this._Form_Control_Type.Entity;
				if (((previousValue != value) 
							|| (this._Form_Control_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Control_Type.Entity = null;
						previousValue.Form_Controls.Remove(this);
					}
					this._Form_Control_Type.Entity = value;
					if ((value != null))
					{
						value.Form_Controls.Add(this);
						this._Form_Control_Type_ID = value.Form_Control_Type_ID;
					}
					else
					{
						this._Form_Control_Type_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_Control_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Control_Form_Control", Storage="_Form_Control1", ThisKey="Form_Control_Parent_ID", OtherKey="Form_Control_ID", IsForeignKey=true)]
		public Form_Control Form_Control1
		{
			get
			{
				return this._Form_Control1.Entity;
			}
			set
			{
				Form_Control previousValue = this._Form_Control1.Entity;
				if (((previousValue != value) 
							|| (this._Form_Control1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Control1.Entity = null;
						previousValue.Form_Controls.Remove(this);
					}
					this._Form_Control1.Entity = value;
					if ((value != null))
					{
						value.Form_Controls.Add(this);
						this._Form_Control_Parent_ID = value.Form_Control_ID;
					}
					else
					{
						this._Form_Control_Parent_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_Control1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Operator_Form_Control", Storage="_Form_Operator", ThisKey="Form_Operator_ID", OtherKey="Form_Operator_ID", IsForeignKey=true)]
		public Form_Operator Form_Operator
		{
			get
			{
				return this._Form_Operator.Entity;
			}
			set
			{
				Form_Operator previousValue = this._Form_Operator.Entity;
				if (((previousValue != value) 
							|| (this._Form_Operator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Operator.Entity = null;
						previousValue.Form_Controls.Remove(this);
					}
					this._Form_Operator.Entity = value;
					if ((value != null))
					{
						value.Form_Controls.Add(this);
						this._Form_Operator_ID = value.Form_Operator_ID;
					}
					else
					{
						this._Form_Operator_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_Operator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Font_Form_Control", Storage="_Form_Font", ThisKey="Form_Font_ID", OtherKey="Form_Font_ID", IsForeignKey=true)]
		public Form_Font Form_Font
		{
			get
			{
				return this._Form_Font.Entity;
			}
			set
			{
				Form_Font previousValue = this._Form_Font.Entity;
				if (((previousValue != value) 
							|| (this._Form_Font.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Form_Font.Entity = null;
						previousValue.Form_Controls.Remove(this);
					}
					this._Form_Font.Entity = value;
					if ((value != null))
					{
						value.Form_Controls.Add(this);
						this._Form_Font_ID = value.Form_Font_ID;
					}
					else
					{
						this._Form_Font_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Form_Font");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Control1 = this;
		}
		
		private void detach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Control1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form_Fonts")]
	public partial class Form_Font : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Form_Font_ID;
		
		private string _Description;
		
		private EntitySet<Form_Control> _Form_Controls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForm_Font_IDChanging(int value);
    partial void OnForm_Font_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Form_Font()
		{
			this._Form_Controls = new EntitySet<Form_Control>(new Action<Form_Control>(this.attach_Form_Controls), new Action<Form_Control>(this.detach_Form_Controls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form_Font_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Form_Font_ID
		{
			get
			{
				return this._Form_Font_ID;
			}
			set
			{
				if ((this._Form_Font_ID != value))
				{
					this.OnForm_Font_IDChanging(value);
					this.SendPropertyChanging();
					this._Form_Font_ID = value;
					this.SendPropertyChanged("Form_Font_ID");
					this.OnForm_Font_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Form_Font_Form_Control", Storage="_Form_Controls", ThisKey="Form_Font_ID", OtherKey="Form_Font_ID")]
		public EntitySet<Form_Control> Form_Controls
		{
			get
			{
				return this._Form_Controls;
			}
			set
			{
				this._Form_Controls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Font = this;
		}
		
		private void detach_Form_Controls(Form_Control entity)
		{
			this.SendPropertyChanging();
			entity.Form_Font = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Error_Classifications")]
	public partial class Ticket_Error_Classification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Error_Classification_ID;
		
		private string _Description;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntitySet<Ticket_Error> _Ticket_Errors;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Error_Classification_IDChanging(int value);
    partial void OnTicket_Error_Classification_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Ticket_Error_Classification()
		{
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Ticket_Errors = new EntitySet<Ticket_Error>(new Action<Ticket_Error>(this.attach_Ticket_Errors), new Action<Ticket_Error>(this.detach_Ticket_Errors));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_Classification_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Error_Classification_ID
		{
			get
			{
				return this._Ticket_Error_Classification_ID;
			}
			set
			{
				if ((this._Ticket_Error_Classification_ID != value))
				{
					this.OnTicket_Error_Classification_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_Classification_ID = value;
					this.SendPropertyChanged("Ticket_Error_Classification_ID");
					this.OnTicket_Error_Classification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket_Log", Storage="_Ticket_Logs", ThisKey="Ticket_Error_Classification_ID", OtherKey="Ticket_Error_Classification_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket_Error", Storage="_Ticket_Errors", ThisKey="Ticket_Error_Classification_ID", OtherKey="Default_Ticket_Error_Classification_ID")]
		public EntitySet<Ticket_Error> Ticket_Errors
		{
			get
			{
				return this._Ticket_Errors;
			}
			set
			{
				this._Ticket_Errors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket", Storage="_Tickets", ThisKey="Ticket_Error_Classification_ID", OtherKey="Ticket_Error_Classification_ID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = null;
		}
		
		private void attach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = this;
		}
		
		private void detach_Ticket_Errors(Ticket_Error entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Error_Classification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phone_Numbers")]
	public partial class Phone_Number : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Phone_Number_ID;
		
		private string _Name;
		
		private int _User_ID;
		
		private string _Work_Phone;
		
		private string _Mobile_Phone;
		
		private string _Home_Phone;
		
		private string _Note;
		
		private string _Email;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhone_Number_IDChanging(int value);
    partial void OnPhone_Number_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnWork_PhoneChanging(string value);
    partial void OnWork_PhoneChanged();
    partial void OnMobile_PhoneChanging(string value);
    partial void OnMobile_PhoneChanged();
    partial void OnHome_PhoneChanging(string value);
    partial void OnHome_PhoneChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Phone_Number()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Phone_Number_ID
		{
			get
			{
				return this._Phone_Number_ID;
			}
			set
			{
				if ((this._Phone_Number_ID != value))
				{
					this.OnPhone_Number_IDChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number_ID = value;
					this.SendPropertyChanged("Phone_Number_ID");
					this.OnPhone_Number_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Work_Phone", DbType="NVarChar(50)")]
		public string Work_Phone
		{
			get
			{
				return this._Work_Phone;
			}
			set
			{
				if ((this._Work_Phone != value))
				{
					this.OnWork_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Work_Phone = value;
					this.SendPropertyChanged("Work_Phone");
					this.OnWork_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile_Phone", DbType="NVarChar(50)")]
		public string Mobile_Phone
		{
			get
			{
				return this._Mobile_Phone;
			}
			set
			{
				if ((this._Mobile_Phone != value))
				{
					this.OnMobile_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Mobile_Phone = value;
					this.SendPropertyChanged("Mobile_Phone");
					this.OnMobile_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home_Phone", DbType="NVarChar(50)")]
		public string Home_Phone
		{
			get
			{
				return this._Home_Phone;
			}
			set
			{
				if ((this._Home_Phone != value))
				{
					this.OnHome_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Home_Phone = value;
					this.SendPropertyChanged("Home_Phone");
					this.OnHome_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Phone_Number", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Phone_Numbers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Phone_Numbers.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accession_Log")]
	public partial class Accession_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Accession_Log_ID;
		
		private int _Acc_ID;
		
		private string _Accession_No;
		
		private int _Accession_Type_ID;
		
		private int _Accession_Field_ID;
		
		private int _Accession_Status_ID;
		
		private string _Details;
		
		private int _User_ID;
		
		private System.DateTime _Time_Stamp;
		
		private string _Report_Date;
		
		private System.Nullable<int> _Accession_Escalation_Reason_ID;
		
		private System.Nullable<int> _Acc_Order_ID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccession_Log_IDChanging(System.Guid value);
    partial void OnAccession_Log_IDChanged();
    partial void OnAcc_IDChanging(int value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnAccession_Type_IDChanging(int value);
    partial void OnAccession_Type_IDChanged();
    partial void OnAccession_Field_IDChanging(int value);
    partial void OnAccession_Field_IDChanged();
    partial void OnAccession_Status_IDChanging(int value);
    partial void OnAccession_Status_IDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnTime_StampChanging(System.DateTime value);
    partial void OnTime_StampChanged();
    partial void OnReport_DateChanging(string value);
    partial void OnReport_DateChanged();
    partial void OnAccession_Escalation_Reason_IDChanging(System.Nullable<int> value);
    partial void OnAccession_Escalation_Reason_IDChanged();
    partial void OnAcc_Order_IDChanging(System.Nullable<int> value);
    partial void OnAcc_Order_IDChanged();
    #endregion
		
		public Accession_Log()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Log_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Accession_Log_ID
		{
			get
			{
				return this._Accession_Log_ID;
			}
			set
			{
				if ((this._Accession_Log_ID != value))
				{
					this.OnAccession_Log_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Log_ID = value;
					this.SendPropertyChanged("Accession_Log_ID");
					this.OnAccession_Log_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int NOT NULL")]
		public int Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Type_ID", DbType="Int NOT NULL")]
		public int Accession_Type_ID
		{
			get
			{
				return this._Accession_Type_ID;
			}
			set
			{
				if ((this._Accession_Type_ID != value))
				{
					this.OnAccession_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Type_ID = value;
					this.SendPropertyChanged("Accession_Type_ID");
					this.OnAccession_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Field_ID", DbType="Int NOT NULL")]
		public int Accession_Field_ID
		{
			get
			{
				return this._Accession_Field_ID;
			}
			set
			{
				if ((this._Accession_Field_ID != value))
				{
					this.OnAccession_Field_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Field_ID = value;
					this.SendPropertyChanged("Accession_Field_ID");
					this.OnAccession_Field_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Status_ID", DbType="Int NOT NULL")]
		public int Accession_Status_ID
		{
			get
			{
				return this._Accession_Status_ID;
			}
			set
			{
				if ((this._Accession_Status_ID != value))
				{
					this.OnAccession_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Status_ID = value;
					this.SendPropertyChanged("Accession_Status_ID");
					this.OnAccession_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(500)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this.OnTime_StampChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp = value;
					this.SendPropertyChanged("Time_Stamp");
					this.OnTime_StampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Report_Date", AutoSync=AutoSync.Always, DbType="VarChar(30)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Report_Date
		{
			get
			{
				return this._Report_Date;
			}
			set
			{
				if ((this._Report_Date != value))
				{
					this.OnReport_DateChanging(value);
					this.SendPropertyChanging();
					this._Report_Date = value;
					this.SendPropertyChanged("Report_Date");
					this.OnReport_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_Escalation_Reason_ID", DbType="Int")]
		public System.Nullable<int> Accession_Escalation_Reason_ID
		{
			get
			{
				return this._Accession_Escalation_Reason_ID;
			}
			set
			{
				if ((this._Accession_Escalation_Reason_ID != value))
				{
					this.OnAccession_Escalation_Reason_IDChanging(value);
					this.SendPropertyChanging();
					this._Accession_Escalation_Reason_ID = value;
					this.SendPropertyChanged("Accession_Escalation_Reason_ID");
					this.OnAccession_Escalation_Reason_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_Order_ID", DbType="Int")]
		public System.Nullable<int> Acc_Order_ID
		{
			get
			{
				return this._Acc_Order_ID;
			}
			set
			{
				if ((this._Acc_Order_ID != value))
				{
					this.OnAcc_Order_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_Order_ID = value;
					this.SendPropertyChanged("Acc_Order_ID");
					this.OnAcc_Order_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Accession_Log", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Accession_Logs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Accession_Logs.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conferences")]
	public partial class Conference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Conference_ID;
		
		private string _Description;
		
		private int _User_ID;
		
		private bool _Active;
		
		private string _Folder;
		
		private EntitySet<Conference_Image> _Conference_Images;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConference_IDChanging(int value);
    partial void OnConference_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    #endregion
		
		public Conference()
		{
			this._Conference_Images = new EntitySet<Conference_Image>(new Action<Conference_Image>(this.attach_Conference_Images), new Action<Conference_Image>(this.detach_Conference_Images));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conference_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Conference_ID
		{
			get
			{
				return this._Conference_ID;
			}
			set
			{
				if ((this._Conference_ID != value))
				{
					this.OnConference_IDChanging(value);
					this.SendPropertyChanging();
					this._Conference_ID = value;
					this.SendPropertyChanged("Conference_ID");
					this.OnConference_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(500)")]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conference_Conference_Image", Storage="_Conference_Images", ThisKey="Conference_ID", OtherKey="Conference_ID")]
		public EntitySet<Conference_Image> Conference_Images
		{
			get
			{
				return this._Conference_Images;
			}
			set
			{
				this._Conference_Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Conference", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Conferences.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Conferences.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Conference_Images(Conference_Image entity)
		{
			this.SendPropertyChanging();
			entity.Conference = this;
		}
		
		private void detach_Conference_Images(Conference_Image entity)
		{
			this.SendPropertyChanging();
			entity.Conference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Divisions")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Division_ID;
		
		private string _Description;
		
		private System.Nullable<bool> _Lab_Use;
		
		private string _Direction;
		
		private System.Nullable<int> _Supervisor_ID;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Extension> _Extensions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDivision_IDChanging(int value);
    partial void OnDivision_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLab_UseChanging(System.Nullable<bool> value);
    partial void OnLab_UseChanged();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    partial void OnSupervisor_IDChanging(System.Nullable<int> value);
    partial void OnSupervisor_IDChanged();
    #endregion
		
		public Division()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Extensions = new EntitySet<Extension>(new Action<Extension>(this.attach_Extensions), new Action<Extension>(this.detach_Extensions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Division_ID
		{
			get
			{
				return this._Division_ID;
			}
			set
			{
				if ((this._Division_ID != value))
				{
					this.OnDivision_IDChanging(value);
					this.SendPropertyChanging();
					this._Division_ID = value;
					this.SendPropertyChanged("Division_ID");
					this.OnDivision_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lab_Use", DbType="Bit")]
		public System.Nullable<bool> Lab_Use
		{
			get
			{
				return this._Lab_Use;
			}
			set
			{
				if ((this._Lab_Use != value))
				{
					this.OnLab_UseChanging(value);
					this.SendPropertyChanging();
					this._Lab_Use = value;
					this.SendPropertyChanged("Lab_Use");
					this.OnLab_UseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(50)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supervisor_ID", DbType="Int")]
		public System.Nullable<int> Supervisor_ID
		{
			get
			{
				return this._Supervisor_ID;
			}
			set
			{
				if ((this._Supervisor_ID != value))
				{
					this.OnSupervisor_IDChanging(value);
					this.SendPropertyChanging();
					this._Supervisor_ID = value;
					this.SendPropertyChanged("Supervisor_ID");
					this.OnSupervisor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_User", Storage="_Users", ThisKey="Division_ID", OtherKey="Division_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Extension", Storage="_Extensions", ThisKey="Division_ID", OtherKey="Division_ID")]
		public EntitySet<Extension> Extensions
		{
			get
			{
				return this._Extensions;
			}
			set
			{
				this._Extensions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
		
		private void attach_Extensions(Extension entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Extensions(Extension entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conference_Images")]
	public partial class Conference_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Conference_Image_ID;
		
		private int _Conference_ID;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Title;
		
		private string _Description;
		
		private bool _Active;
		
		private System.Nullable<int> _Slide_ID;
		
		private string _Accession_No;
		
		private string _File_Name;
		
		private string _Full_Path;
		
		private int _Sort_Order;
		
		private EntityRef<Conference> _Conference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConference_Image_IDChanging(int value);
    partial void OnConference_Image_IDChanged();
    partial void OnConference_IDChanging(int value);
    partial void OnConference_IDChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSlide_IDChanging(System.Nullable<int> value);
    partial void OnSlide_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnFile_NameChanging(string value);
    partial void OnFile_NameChanged();
    partial void OnFull_PathChanging(string value);
    partial void OnFull_PathChanged();
    partial void OnSort_OrderChanging(int value);
    partial void OnSort_OrderChanged();
    #endregion
		
		public Conference_Image()
		{
			this._Conference = default(EntityRef<Conference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conference_Image_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Conference_Image_ID
		{
			get
			{
				return this._Conference_Image_ID;
			}
			set
			{
				if ((this._Conference_Image_ID != value))
				{
					this.OnConference_Image_IDChanging(value);
					this.SendPropertyChanging();
					this._Conference_Image_ID = value;
					this.SendPropertyChanged("Conference_Image_ID");
					this.OnConference_Image_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conference_ID", DbType="Int NOT NULL")]
		public int Conference_ID
		{
			get
			{
				return this._Conference_ID;
			}
			set
			{
				if ((this._Conference_ID != value))
				{
					if (this._Conference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConference_IDChanging(value);
					this.SendPropertyChanging();
					this._Conference_ID = value;
					this.SendPropertyChanged("Conference_ID");
					this.OnConference_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_ID", DbType="Int")]
		public System.Nullable<int> Slide_ID
		{
			get
			{
				return this._Slide_ID;
			}
			set
			{
				if ((this._Slide_ID != value))
				{
					this.OnSlide_IDChanging(value);
					this.SendPropertyChanging();
					this._Slide_ID = value;
					this.SendPropertyChanged("Slide_ID");
					this.OnSlide_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="NVarChar(500)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this.OnFile_NameChanging(value);
					this.SendPropertyChanging();
					this._File_Name = value;
					this.SendPropertyChanged("File_Name");
					this.OnFile_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Path", DbType="NVarChar(500)")]
		public string Full_Path
		{
			get
			{
				return this._Full_Path;
			}
			set
			{
				if ((this._Full_Path != value))
				{
					this.OnFull_PathChanging(value);
					this.SendPropertyChanging();
					this._Full_Path = value;
					this.SendPropertyChanged("Full_Path");
					this.OnFull_PathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort_Order", DbType="Int NOT NULL")]
		public int Sort_Order
		{
			get
			{
				return this._Sort_Order;
			}
			set
			{
				if ((this._Sort_Order != value))
				{
					this.OnSort_OrderChanging(value);
					this.SendPropertyChanging();
					this._Sort_Order = value;
					this.SendPropertyChanged("Sort_Order");
					this.OnSort_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conference_Conference_Image", Storage="_Conference", ThisKey="Conference_ID", OtherKey="Conference_ID", IsForeignKey=true)]
		public Conference Conference
		{
			get
			{
				return this._Conference.Entity;
			}
			set
			{
				Conference previousValue = this._Conference.Entity;
				if (((previousValue != value) 
							|| (this._Conference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conference.Entity = null;
						previousValue.Conference_Images.Remove(this);
					}
					this._Conference.Entity = value;
					if ((value != null))
					{
						value.Conference_Images.Add(this);
						this._Conference_ID = value.Conference_ID;
					}
					else
					{
						this._Conference_ID = default(int);
					}
					this.SendPropertyChanged("Conference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Error_Details")]
	public partial class Ticket_Error_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Error_ID;
		
		private int _Ticket_Detail_ID;
		
		private EntityRef<Ticket_Error> _Ticket_Error;
		
		private EntityRef<Ticket_Detail> _Ticket_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Error_IDChanging(int value);
    partial void OnTicket_Error_IDChanged();
    partial void OnTicket_Detail_IDChanging(int value);
    partial void OnTicket_Detail_IDChanged();
    #endregion
		
		public Ticket_Error_Detail()
		{
			this._Ticket_Error = default(EntityRef<Ticket_Error>);
			this._Ticket_Detail = default(EntityRef<Ticket_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ticket_Error_ID
		{
			get
			{
				return this._Ticket_Error_ID;
			}
			set
			{
				if ((this._Ticket_Error_ID != value))
				{
					if (this._Ticket_Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_ID = value;
					this.SendPropertyChanged("Ticket_Error_ID");
					this.OnTicket_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Detail_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ticket_Detail_ID
		{
			get
			{
				return this._Ticket_Detail_ID;
			}
			set
			{
				if ((this._Ticket_Detail_ID != value))
				{
					if (this._Ticket_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Detail_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Detail_ID = value;
					this.SendPropertyChanged("Ticket_Detail_ID");
					this.OnTicket_Detail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Ticket_Error_Detail", Storage="_Ticket_Error", ThisKey="Ticket_Error_ID", OtherKey="Ticket_Error_ID", IsForeignKey=true)]
		public Ticket_Error Ticket_Error
		{
			get
			{
				return this._Ticket_Error.Entity;
			}
			set
			{
				Ticket_Error previousValue = this._Ticket_Error.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error.Entity = null;
						previousValue.Ticket_Error_Details.Remove(this);
					}
					this._Ticket_Error.Entity = value;
					if ((value != null))
					{
						value.Ticket_Error_Details.Add(this);
						this._Ticket_Error_ID = value.Ticket_Error_ID;
					}
					else
					{
						this._Ticket_Error_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Detail_Ticket_Error_Detail", Storage="_Ticket_Detail", ThisKey="Ticket_Detail_ID", OtherKey="Ticket_Detail_ID", IsForeignKey=true)]
		public Ticket_Detail Ticket_Detail
		{
			get
			{
				return this._Ticket_Detail.Entity;
			}
			set
			{
				Ticket_Detail previousValue = this._Ticket_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Detail.Entity = null;
						previousValue.Ticket_Error_Details.Remove(this);
					}
					this._Ticket_Detail.Entity = value;
					if ((value != null))
					{
						value.Ticket_Error_Details.Add(this);
						this._Ticket_Detail_ID = value.Ticket_Detail_ID;
					}
					else
					{
						this._Ticket_Detail_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Details")]
	public partial class Ticket_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Detail_ID;
		
		private string _Description;
		
		private EntitySet<Ticket_Error_Detail> _Ticket_Error_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Detail_IDChanging(int value);
    partial void OnTicket_Detail_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Ticket_Detail()
		{
			this._Ticket_Error_Details = new EntitySet<Ticket_Error_Detail>(new Action<Ticket_Error_Detail>(this.attach_Ticket_Error_Details), new Action<Ticket_Error_Detail>(this.detach_Ticket_Error_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Detail_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Detail_ID
		{
			get
			{
				return this._Ticket_Detail_ID;
			}
			set
			{
				if ((this._Ticket_Detail_ID != value))
				{
					this.OnTicket_Detail_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Detail_ID = value;
					this.SendPropertyChanged("Ticket_Detail_ID");
					this.OnTicket_Detail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Detail_Ticket_Error_Detail", Storage="_Ticket_Error_Details", ThisKey="Ticket_Detail_ID", OtherKey="Ticket_Detail_ID")]
		public EntitySet<Ticket_Error_Detail> Ticket_Error_Details
		{
			get
			{
				return this._Ticket_Error_Details;
			}
			set
			{
				this._Ticket_Error_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Error_Details(Ticket_Error_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Detail = this;
		}
		
		private void detach_Ticket_Error_Details(Ticket_Error_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Status")]
	public partial class User_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Status_ID;
		
		private int _User_ID;
		
		private System.DateTime _Time_Stamp;
		
		private int _Idle_Time;
		
		private bool _Active;
		
		private string _IP_Address;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_Status_IDChanging(int value);
    partial void OnUser_Status_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnTime_StampChanging(System.DateTime value);
    partial void OnTime_StampChanged();
    partial void OnIdle_TimeChanging(int value);
    partial void OnIdle_TimeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnIP_AddressChanging(string value);
    partial void OnIP_AddressChanged();
    #endregion
		
		public User_Status()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Status_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Status_ID
		{
			get
			{
				return this._User_Status_ID;
			}
			set
			{
				if ((this._User_Status_ID != value))
				{
					this.OnUser_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._User_Status_ID = value;
					this.SendPropertyChanged("User_Status_ID");
					this.OnUser_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this.OnTime_StampChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp = value;
					this.SendPropertyChanged("Time_Stamp");
					this.OnTime_StampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idle_Time", DbType="Int NOT NULL")]
		public int Idle_Time
		{
			get
			{
				return this._Idle_Time;
			}
			set
			{
				if ((this._Idle_Time != value))
				{
					this.OnIdle_TimeChanging(value);
					this.SendPropertyChanging();
					this._Idle_Time = value;
					this.SendPropertyChanged("Idle_Time");
					this.OnIdle_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Address", DbType="NVarChar(50)")]
		public string IP_Address
		{
			get
			{
				return this._IP_Address;
			}
			set
			{
				if ((this._IP_Address != value))
				{
					this.OnIP_AddressChanging(value);
					this.SendPropertyChanging();
					this._IP_Address = value;
					this.SendPropertyChanged("IP_Address");
					this.OnIP_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Status", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Status.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Status.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Telepathology")]
	public partial class Telepathology : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Telepathology_ID;
		
		private int _Request_User_ID;
		
		private int _Attendee_User_ID;
		
		private System.DateTime _Time_Stamp;
		
		private string _Connection_String;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTelepathology_IDChanging(int value);
    partial void OnTelepathology_IDChanged();
    partial void OnRequest_User_IDChanging(int value);
    partial void OnRequest_User_IDChanged();
    partial void OnAttendee_User_IDChanging(int value);
    partial void OnAttendee_User_IDChanged();
    partial void OnTime_StampChanging(System.DateTime value);
    partial void OnTime_StampChanged();
    partial void OnConnection_StringChanging(string value);
    partial void OnConnection_StringChanged();
    #endregion
		
		public Telepathology()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telepathology_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Telepathology_ID
		{
			get
			{
				return this._Telepathology_ID;
			}
			set
			{
				if ((this._Telepathology_ID != value))
				{
					this.OnTelepathology_IDChanging(value);
					this.SendPropertyChanging();
					this._Telepathology_ID = value;
					this.SendPropertyChanged("Telepathology_ID");
					this.OnTelepathology_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request_User_ID", DbType="Int NOT NULL")]
		public int Request_User_ID
		{
			get
			{
				return this._Request_User_ID;
			}
			set
			{
				if ((this._Request_User_ID != value))
				{
					this.OnRequest_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Request_User_ID = value;
					this.SendPropertyChanged("Request_User_ID");
					this.OnRequest_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendee_User_ID", DbType="Int NOT NULL")]
		public int Attendee_User_ID
		{
			get
			{
				return this._Attendee_User_ID;
			}
			set
			{
				if ((this._Attendee_User_ID != value))
				{
					this.OnAttendee_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Attendee_User_ID = value;
					this.SendPropertyChanged("Attendee_User_ID");
					this.OnAttendee_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this.OnTime_StampChanging(value);
					this.SendPropertyChanging();
					this._Time_Stamp = value;
					this.SendPropertyChanged("Time_Stamp");
					this.OnTime_StampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection_String", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Connection_String
		{
			get
			{
				return this._Connection_String;
			}
			set
			{
				if ((this._Connection_String != value))
				{
					this.OnConnection_StringChanging(value);
					this.SendPropertyChanging();
					this._Connection_String = value;
					this.SendPropertyChanged("Connection_String");
					this.OnConnection_StringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Note_Topics")]
	public partial class Note_Topic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Note_Topic_ID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNote_Topic_IDChanging(int value);
    partial void OnNote_Topic_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Note_Topic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note_Topic_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Note_Topic_ID
		{
			get
			{
				return this._Note_Topic_ID;
			}
			set
			{
				if ((this._Note_Topic_ID != value))
				{
					this.OnNote_Topic_IDChanging(value);
					this.SendPropertyChanging();
					this._Note_Topic_ID = value;
					this.SendPropertyChanged("Note_Topic_ID");
					this.OnNote_Topic_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slide_Distribution_Manual_Scan")]
	public partial class Slide_Distribution_Manual_Scan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Slide_Scan_ID;
		
		private int _Slide_ID;
		
		private System.DateTime _Time_Scanned;
		
		private bool _Manual;
		
		private System.Nullable<int> _User_ID;
		
		private System.Nullable<int> _Machine_ID;
		
		private System.Nullable<bool> _DataMatrix;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlide_Scan_IDChanging(int value);
    partial void OnSlide_Scan_IDChanged();
    partial void OnSlide_IDChanging(int value);
    partial void OnSlide_IDChanged();
    partial void OnTime_ScannedChanging(System.DateTime value);
    partial void OnTime_ScannedChanged();
    partial void OnManualChanging(bool value);
    partial void OnManualChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    partial void OnMachine_IDChanging(System.Nullable<int> value);
    partial void OnMachine_IDChanged();
    partial void OnDataMatrixChanging(System.Nullable<bool> value);
    partial void OnDataMatrixChanged();
    #endregion
		
		public Slide_Distribution_Manual_Scan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_Scan_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Slide_Scan_ID
		{
			get
			{
				return this._Slide_Scan_ID;
			}
			set
			{
				if ((this._Slide_Scan_ID != value))
				{
					this.OnSlide_Scan_IDChanging(value);
					this.SendPropertyChanging();
					this._Slide_Scan_ID = value;
					this.SendPropertyChanged("Slide_Scan_ID");
					this.OnSlide_Scan_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_ID", DbType="Int NOT NULL")]
		public int Slide_ID
		{
			get
			{
				return this._Slide_ID;
			}
			set
			{
				if ((this._Slide_ID != value))
				{
					this.OnSlide_IDChanging(value);
					this.SendPropertyChanging();
					this._Slide_ID = value;
					this.SendPropertyChanged("Slide_ID");
					this.OnSlide_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Scanned", DbType="DateTime NOT NULL")]
		public System.DateTime Time_Scanned
		{
			get
			{
				return this._Time_Scanned;
			}
			set
			{
				if ((this._Time_Scanned != value))
				{
					this.OnTime_ScannedChanging(value);
					this.SendPropertyChanging();
					this._Time_Scanned = value;
					this.SendPropertyChanged("Time_Scanned");
					this.OnTime_ScannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manual", DbType="Bit NOT NULL")]
		public bool Manual
		{
			get
			{
				return this._Manual;
			}
			set
			{
				if ((this._Manual != value))
				{
					this.OnManualChanging(value);
					this.SendPropertyChanging();
					this._Manual = value;
					this.SendPropertyChanged("Manual");
					this.OnManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Machine_ID", DbType="Int")]
		public System.Nullable<int> Machine_ID
		{
			get
			{
				return this._Machine_ID;
			}
			set
			{
				if ((this._Machine_ID != value))
				{
					this.OnMachine_IDChanging(value);
					this.SendPropertyChanging();
					this._Machine_ID = value;
					this.SendPropertyChanged("Machine_ID");
					this.OnMachine_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataMatrix", DbType="Bit")]
		public System.Nullable<bool> DataMatrix
		{
			get
			{
				return this._DataMatrix;
			}
			set
			{
				if ((this._DataMatrix != value))
				{
					this.OnDataMatrixChanging(value);
					this.SendPropertyChanging();
					this._DataMatrix = value;
					this.SendPropertyChanged("DataMatrix");
					this.OnDataMatrixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Waypoints")]
	public partial class Item_Waypoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private int _Location_ID;
		
		private int _Waypoint_Order;
		
		private System.Guid _rowguid;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnLocation_IDChanging(int value);
    partial void OnLocation_IDChanged();
    partial void OnWaypoint_OrderChanging(int value);
    partial void OnWaypoint_OrderChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
		
		public Item_Waypoint()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocation_IDChanging(value);
					this.SendPropertyChanging();
					this._Location_ID = value;
					this.SendPropertyChanged("Location_ID");
					this.OnLocation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waypoint_Order", DbType="Int NOT NULL")]
		public int Waypoint_Order
		{
			get
			{
				return this._Waypoint_Order;
			}
			set
			{
				if ((this._Waypoint_Order != value))
				{
					this.OnWaypoint_OrderChanging(value);
					this.SendPropertyChanging();
					this._Waypoint_Order = value;
					this.SendPropertyChanged("Waypoint_Order");
					this.OnWaypoint_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Item_Waypoint", Storage="_Location", ThisKey="Location_ID", OtherKey="Location_ID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Item_Waypoints.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Item_Waypoints.Add(this);
						this._Location_ID = value.Location_ID;
					}
					else
					{
						this._Location_ID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organizations")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organization_ID;
		
		private int _Organization_Type_ID;
		
		private System.Nullable<int> _Courier_Location_ID;
		
		private System.Nullable<char> _Entity_Type;
		
		private System.Nullable<int> _Refmd_ID;
		
		private System.Nullable<int> _Group_ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Mail_Stop;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Fax_No;
		
		private string _Email;
		
		private System.Data.Linq.Binary _Active;
		
		private string _Street1;
		
		private string _Street2;
		
		private string _City;
		
		private string _State;
		
		private string _Postal_Code;
		
		private string _Country;
		
		private int _Rating_ID;
		
		private int _EMR_ID;
		
		private int _Primary_Change_Factor_ID;
		
		private int _Secondary_Change_Factor_ID;
		
		private int _Likelyhood_of_Sale_ID;
		
		private System.Nullable<int> _Current_Lab_Vendor_ID;
		
		private System.Nullable<int> _Current_Path_Vendor_ID;
		
		private System.Nullable<int> _Territory_ID;
		
		private System.Nullable<int> _Primary_Salesperson_ID;
		
		private System.Nullable<int> _Primary_Retention_ID;
		
		private System.Guid _rowguid;
		
		private System.Nullable<int> _Organization_Delivery_Method_ID;
		
		private System.Nullable<int> _Default_Rev_Center_ID;
		
		private string _Website;
		
		private string _Overview;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _Practice_Management_ID;
		
		private System.Nullable<int> _NumberOfProviders;
		
		private System.Nullable<int> _Organization_Specialty_ID;
		
		private string _Client_Overview;
		
		private System.Nullable<System.DateTime> _Featured;
		
		private string _Testimonial;
		
		private string _Default_Rev_Center;
		
		private System.Nullable<int> _Primary_Internal_ID;
		
		private System.Nullable<int> _Sales_Commission_Due_To;
		
		private System.Nullable<int> _Retention_Commission_Due_To;
		
		private string _Import_Flag;
		
		private System.Nullable<System.DateTime> _Last_Sales_Call;
		
		private System.Nullable<System.DateTime> _Last_Retention_Call;
		
		private EntitySet<Location> _Locations;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
		private EntityRef<User> _User4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnOrganization_Type_IDChanging(int value);
    partial void OnOrganization_Type_IDChanged();
    partial void OnCourier_Location_IDChanging(System.Nullable<int> value);
    partial void OnCourier_Location_IDChanged();
    partial void OnEntity_TypeChanging(System.Nullable<char> value);
    partial void OnEntity_TypeChanged();
    partial void OnRefmd_IDChanging(System.Nullable<int> value);
    partial void OnRefmd_IDChanged();
    partial void OnGroup_IDChanging(System.Nullable<int> value);
    partial void OnGroup_IDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMail_StopChanging(string value);
    partial void OnMail_StopChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnFax_NoChanging(string value);
    partial void OnFax_NoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(System.Data.Linq.Binary value);
    partial void OnActiveChanged();
    partial void OnStreet1Changing(string value);
    partial void OnStreet1Changed();
    partial void OnStreet2Changing(string value);
    partial void OnStreet2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnRating_IDChanging(int value);
    partial void OnRating_IDChanged();
    partial void OnEMR_IDChanging(int value);
    partial void OnEMR_IDChanged();
    partial void OnPrimary_Change_Factor_IDChanging(int value);
    partial void OnPrimary_Change_Factor_IDChanged();
    partial void OnSecondary_Change_Factor_IDChanging(int value);
    partial void OnSecondary_Change_Factor_IDChanged();
    partial void OnLikelyhood_of_Sale_IDChanging(int value);
    partial void OnLikelyhood_of_Sale_IDChanged();
    partial void OnCurrent_Lab_Vendor_IDChanging(System.Nullable<int> value);
    partial void OnCurrent_Lab_Vendor_IDChanged();
    partial void OnCurrent_Path_Vendor_IDChanging(System.Nullable<int> value);
    partial void OnCurrent_Path_Vendor_IDChanged();
    partial void OnTerritory_IDChanging(System.Nullable<int> value);
    partial void OnTerritory_IDChanged();
    partial void OnPrimary_Salesperson_IDChanging(System.Nullable<int> value);
    partial void OnPrimary_Salesperson_IDChanged();
    partial void OnPrimary_Retention_IDChanging(System.Nullable<int> value);
    partial void OnPrimary_Retention_IDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnOrganization_Delivery_Method_IDChanging(System.Nullable<int> value);
    partial void OnOrganization_Delivery_Method_IDChanged();
    partial void OnDefault_Rev_Center_IDChanging(System.Nullable<int> value);
    partial void OnDefault_Rev_Center_IDChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnOverviewChanging(string value);
    partial void OnOverviewChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnPractice_Management_IDChanging(System.Nullable<int> value);
    partial void OnPractice_Management_IDChanged();
    partial void OnNumberOfProvidersChanging(System.Nullable<int> value);
    partial void OnNumberOfProvidersChanged();
    partial void OnOrganization_Specialty_IDChanging(System.Nullable<int> value);
    partial void OnOrganization_Specialty_IDChanged();
    partial void OnClient_OverviewChanging(string value);
    partial void OnClient_OverviewChanged();
    partial void OnFeaturedChanging(System.Nullable<System.DateTime> value);
    partial void OnFeaturedChanged();
    partial void OnTestimonialChanging(string value);
    partial void OnTestimonialChanged();
    partial void OnDefault_Rev_CenterChanging(string value);
    partial void OnDefault_Rev_CenterChanged();
    partial void OnPrimary_Internal_IDChanging(System.Nullable<int> value);
    partial void OnPrimary_Internal_IDChanged();
    partial void OnSales_Commission_Due_ToChanging(System.Nullable<int> value);
    partial void OnSales_Commission_Due_ToChanged();
    partial void OnRetention_Commission_Due_ToChanging(System.Nullable<int> value);
    partial void OnRetention_Commission_Due_ToChanged();
    partial void OnImport_FlagChanging(string value);
    partial void OnImport_FlagChanged();
    partial void OnLast_Sales_CallChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_Sales_CallChanged();
    partial void OnLast_Retention_CallChanging(System.Nullable<System.DateTime> value);
    partial void OnLast_Retention_CallChanged();
    #endregion
		
		public Organization()
		{
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			this._User4 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Type_ID", DbType="Int NOT NULL")]
		public int Organization_Type_ID
		{
			get
			{
				return this._Organization_Type_ID;
			}
			set
			{
				if ((this._Organization_Type_ID != value))
				{
					this.OnOrganization_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_Type_ID = value;
					this.SendPropertyChanged("Organization_Type_ID");
					this.OnOrganization_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Courier_Location_ID", DbType="Int")]
		public System.Nullable<int> Courier_Location_ID
		{
			get
			{
				return this._Courier_Location_ID;
			}
			set
			{
				if ((this._Courier_Location_ID != value))
				{
					this.OnCourier_Location_IDChanging(value);
					this.SendPropertyChanging();
					this._Courier_Location_ID = value;
					this.SendPropertyChanged("Courier_Location_ID");
					this.OnCourier_Location_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Type", DbType="Char(1)")]
		public System.Nullable<char> Entity_Type
		{
			get
			{
				return this._Entity_Type;
			}
			set
			{
				if ((this._Entity_Type != value))
				{
					this.OnEntity_TypeChanging(value);
					this.SendPropertyChanging();
					this._Entity_Type = value;
					this.SendPropertyChanged("Entity_Type");
					this.OnEntity_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refmd_ID", DbType="Int")]
		public System.Nullable<int> Refmd_ID
		{
			get
			{
				return this._Refmd_ID;
			}
			set
			{
				if ((this._Refmd_ID != value))
				{
					this.OnRefmd_IDChanging(value);
					this.SendPropertyChanging();
					this._Refmd_ID = value;
					this.SendPropertyChanged("Refmd_ID");
					this.OnRefmd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int")]
		public System.Nullable<int> Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(15)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail_Stop", DbType="NVarChar(30)")]
		public string Mail_Stop
		{
			get
			{
				return this._Mail_Stop;
			}
			set
			{
				if ((this._Mail_Stop != value))
				{
					this.OnMail_StopChanging(value);
					this.SendPropertyChanging();
					this._Mail_Stop = value;
					this.SendPropertyChanged("Mail_Stop");
					this.OnMail_StopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(30)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(30)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax_No", DbType="NVarChar(30)")]
		public string Fax_No
		{
			get
			{
				return this._Fax_No;
			}
			set
			{
				if ((this._Fax_No != value))
				{
					this.OnFax_NoChanging(value);
					this.SendPropertyChanging();
					this._Fax_No = value;
					this.SendPropertyChanged("Fax_No");
					this.OnFax_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Binary(1)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street1", DbType="NVarChar(50)")]
		public string Street1
		{
			get
			{
				return this._Street1;
			}
			set
			{
				if ((this._Street1 != value))
				{
					this.OnStreet1Changing(value);
					this.SendPropertyChanging();
					this._Street1 = value;
					this.SendPropertyChanged("Street1");
					this.OnStreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street2", DbType="NVarChar(50)")]
		public string Street2
		{
			get
			{
				return this._Street2;
			}
			set
			{
				if ((this._Street2 != value))
				{
					this.OnStreet2Changing(value);
					this.SendPropertyChanging();
					this._Street2 = value;
					this.SendPropertyChanged("Street2");
					this.OnStreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(20)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(20)")]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating_ID", DbType="Int NOT NULL")]
		public int Rating_ID
		{
			get
			{
				return this._Rating_ID;
			}
			set
			{
				if ((this._Rating_ID != value))
				{
					this.OnRating_IDChanging(value);
					this.SendPropertyChanging();
					this._Rating_ID = value;
					this.SendPropertyChanged("Rating_ID");
					this.OnRating_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMR_ID", DbType="Int NOT NULL")]
		public int EMR_ID
		{
			get
			{
				return this._EMR_ID;
			}
			set
			{
				if ((this._EMR_ID != value))
				{
					this.OnEMR_IDChanging(value);
					this.SendPropertyChanging();
					this._EMR_ID = value;
					this.SendPropertyChanged("EMR_ID");
					this.OnEMR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primary_Change_Factor_ID", DbType="Int NOT NULL")]
		public int Primary_Change_Factor_ID
		{
			get
			{
				return this._Primary_Change_Factor_ID;
			}
			set
			{
				if ((this._Primary_Change_Factor_ID != value))
				{
					this.OnPrimary_Change_Factor_IDChanging(value);
					this.SendPropertyChanging();
					this._Primary_Change_Factor_ID = value;
					this.SendPropertyChanged("Primary_Change_Factor_ID");
					this.OnPrimary_Change_Factor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Secondary_Change_Factor_ID", DbType="Int NOT NULL")]
		public int Secondary_Change_Factor_ID
		{
			get
			{
				return this._Secondary_Change_Factor_ID;
			}
			set
			{
				if ((this._Secondary_Change_Factor_ID != value))
				{
					this.OnSecondary_Change_Factor_IDChanging(value);
					this.SendPropertyChanging();
					this._Secondary_Change_Factor_ID = value;
					this.SendPropertyChanged("Secondary_Change_Factor_ID");
					this.OnSecondary_Change_Factor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Likelyhood_of_Sale_ID", DbType="Int NOT NULL")]
		public int Likelyhood_of_Sale_ID
		{
			get
			{
				return this._Likelyhood_of_Sale_ID;
			}
			set
			{
				if ((this._Likelyhood_of_Sale_ID != value))
				{
					this.OnLikelyhood_of_Sale_IDChanging(value);
					this.SendPropertyChanging();
					this._Likelyhood_of_Sale_ID = value;
					this.SendPropertyChanged("Likelyhood_of_Sale_ID");
					this.OnLikelyhood_of_Sale_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Lab_Vendor_ID", DbType="Int")]
		public System.Nullable<int> Current_Lab_Vendor_ID
		{
			get
			{
				return this._Current_Lab_Vendor_ID;
			}
			set
			{
				if ((this._Current_Lab_Vendor_ID != value))
				{
					this.OnCurrent_Lab_Vendor_IDChanging(value);
					this.SendPropertyChanging();
					this._Current_Lab_Vendor_ID = value;
					this.SendPropertyChanged("Current_Lab_Vendor_ID");
					this.OnCurrent_Lab_Vendor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Path_Vendor_ID", DbType="Int")]
		public System.Nullable<int> Current_Path_Vendor_ID
		{
			get
			{
				return this._Current_Path_Vendor_ID;
			}
			set
			{
				if ((this._Current_Path_Vendor_ID != value))
				{
					this.OnCurrent_Path_Vendor_IDChanging(value);
					this.SendPropertyChanging();
					this._Current_Path_Vendor_ID = value;
					this.SendPropertyChanged("Current_Path_Vendor_ID");
					this.OnCurrent_Path_Vendor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Territory_ID", DbType="Int")]
		public System.Nullable<int> Territory_ID
		{
			get
			{
				return this._Territory_ID;
			}
			set
			{
				if ((this._Territory_ID != value))
				{
					this.OnTerritory_IDChanging(value);
					this.SendPropertyChanging();
					this._Territory_ID = value;
					this.SendPropertyChanged("Territory_ID");
					this.OnTerritory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primary_Salesperson_ID", DbType="Int")]
		public System.Nullable<int> Primary_Salesperson_ID
		{
			get
			{
				return this._Primary_Salesperson_ID;
			}
			set
			{
				if ((this._Primary_Salesperson_ID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimary_Salesperson_IDChanging(value);
					this.SendPropertyChanging();
					this._Primary_Salesperson_ID = value;
					this.SendPropertyChanged("Primary_Salesperson_ID");
					this.OnPrimary_Salesperson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primary_Retention_ID", DbType="Int")]
		public System.Nullable<int> Primary_Retention_ID
		{
			get
			{
				return this._Primary_Retention_ID;
			}
			set
			{
				if ((this._Primary_Retention_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimary_Retention_IDChanging(value);
					this.SendPropertyChanging();
					this._Primary_Retention_ID = value;
					this.SendPropertyChanged("Primary_Retention_ID");
					this.OnPrimary_Retention_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Delivery_Method_ID", DbType="Int")]
		public System.Nullable<int> Organization_Delivery_Method_ID
		{
			get
			{
				return this._Organization_Delivery_Method_ID;
			}
			set
			{
				if ((this._Organization_Delivery_Method_ID != value))
				{
					this.OnOrganization_Delivery_Method_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_Delivery_Method_ID = value;
					this.SendPropertyChanged("Organization_Delivery_Method_ID");
					this.OnOrganization_Delivery_Method_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Rev_Center_ID", DbType="Int")]
		public System.Nullable<int> Default_Rev_Center_ID
		{
			get
			{
				return this._Default_Rev_Center_ID;
			}
			set
			{
				if ((this._Default_Rev_Center_ID != value))
				{
					this.OnDefault_Rev_Center_IDChanging(value);
					this.SendPropertyChanging();
					this._Default_Rev_Center_ID = value;
					this.SendPropertyChanged("Default_Rev_Center_ID");
					this.OnDefault_Rev_Center_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="NVarChar(255)")]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this.OnOverviewChanging(value);
					this.SendPropertyChanging();
					this._Overview = value;
					this.SendPropertyChanged("Overview");
					this.OnOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Management_ID", DbType="Int")]
		public System.Nullable<int> Practice_Management_ID
		{
			get
			{
				return this._Practice_Management_ID;
			}
			set
			{
				if ((this._Practice_Management_ID != value))
				{
					this.OnPractice_Management_IDChanging(value);
					this.SendPropertyChanging();
					this._Practice_Management_ID = value;
					this.SendPropertyChanged("Practice_Management_ID");
					this.OnPractice_Management_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfProviders", DbType="Int")]
		public System.Nullable<int> NumberOfProviders
		{
			get
			{
				return this._NumberOfProviders;
			}
			set
			{
				if ((this._NumberOfProviders != value))
				{
					this.OnNumberOfProvidersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfProviders = value;
					this.SendPropertyChanged("NumberOfProviders");
					this.OnNumberOfProvidersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Specialty_ID", DbType="Int")]
		public System.Nullable<int> Organization_Specialty_ID
		{
			get
			{
				return this._Organization_Specialty_ID;
			}
			set
			{
				if ((this._Organization_Specialty_ID != value))
				{
					this.OnOrganization_Specialty_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_Specialty_ID = value;
					this.SendPropertyChanged("Organization_Specialty_ID");
					this.OnOrganization_Specialty_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_Overview", DbType="NVarChar(3000)")]
		public string Client_Overview
		{
			get
			{
				return this._Client_Overview;
			}
			set
			{
				if ((this._Client_Overview != value))
				{
					this.OnClient_OverviewChanging(value);
					this.SendPropertyChanging();
					this._Client_Overview = value;
					this.SendPropertyChanged("Client_Overview");
					this.OnClient_OverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="DateTime")]
		public System.Nullable<System.DateTime> Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this.OnFeaturedChanging(value);
					this.SendPropertyChanging();
					this._Featured = value;
					this.SendPropertyChanged("Featured");
					this.OnFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Testimonial", DbType="NVarChar(MAX)")]
		public string Testimonial
		{
			get
			{
				return this._Testimonial;
			}
			set
			{
				if ((this._Testimonial != value))
				{
					this.OnTestimonialChanging(value);
					this.SendPropertyChanging();
					this._Testimonial = value;
					this.SendPropertyChanged("Testimonial");
					this.OnTestimonialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Default_Rev_Center", DbType="NVarChar(50)")]
		public string Default_Rev_Center
		{
			get
			{
				return this._Default_Rev_Center;
			}
			set
			{
				if ((this._Default_Rev_Center != value))
				{
					this.OnDefault_Rev_CenterChanging(value);
					this.SendPropertyChanging();
					this._Default_Rev_Center = value;
					this.SendPropertyChanged("Default_Rev_Center");
					this.OnDefault_Rev_CenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primary_Internal_ID", DbType="Int")]
		public System.Nullable<int> Primary_Internal_ID
		{
			get
			{
				return this._Primary_Internal_ID;
			}
			set
			{
				if ((this._Primary_Internal_ID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimary_Internal_IDChanging(value);
					this.SendPropertyChanging();
					this._Primary_Internal_ID = value;
					this.SendPropertyChanged("Primary_Internal_ID");
					this.OnPrimary_Internal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sales_Commission_Due_To", DbType="Int")]
		public System.Nullable<int> Sales_Commission_Due_To
		{
			get
			{
				return this._Sales_Commission_Due_To;
			}
			set
			{
				if ((this._Sales_Commission_Due_To != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSales_Commission_Due_ToChanging(value);
					this.SendPropertyChanging();
					this._Sales_Commission_Due_To = value;
					this.SendPropertyChanged("Sales_Commission_Due_To");
					this.OnSales_Commission_Due_ToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Retention_Commission_Due_To", DbType="Int")]
		public System.Nullable<int> Retention_Commission_Due_To
		{
			get
			{
				return this._Retention_Commission_Due_To;
			}
			set
			{
				if ((this._Retention_Commission_Due_To != value))
				{
					if (this._User4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRetention_Commission_Due_ToChanging(value);
					this.SendPropertyChanging();
					this._Retention_Commission_Due_To = value;
					this.SendPropertyChanged("Retention_Commission_Due_To");
					this.OnRetention_Commission_Due_ToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import_Flag", DbType="NVarChar(50)")]
		public string Import_Flag
		{
			get
			{
				return this._Import_Flag;
			}
			set
			{
				if ((this._Import_Flag != value))
				{
					this.OnImport_FlagChanging(value);
					this.SendPropertyChanging();
					this._Import_Flag = value;
					this.SendPropertyChanged("Import_Flag");
					this.OnImport_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Sales_Call", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Sales_Call
		{
			get
			{
				return this._Last_Sales_Call;
			}
			set
			{
				if ((this._Last_Sales_Call != value))
				{
					this.OnLast_Sales_CallChanging(value);
					this.SendPropertyChanging();
					this._Last_Sales_Call = value;
					this.SendPropertyChanged("Last_Sales_Call");
					this.OnLast_Sales_CallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Retention_Call", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last_Retention_Call
		{
			get
			{
				return this._Last_Retention_Call;
			}
			set
			{
				if ((this._Last_Retention_Call != value))
				{
					this.OnLast_Retention_CallChanging(value);
					this.SendPropertyChanging();
					this._Last_Retention_Call = value;
					this.SendPropertyChanged("Last_Retention_Call");
					this.OnLast_Retention_CallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Location", Storage="_Locations", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<Location> Locations
		{
			get
			{
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization", Storage="_User", ThisKey="Primary_Retention_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._Primary_Retention_ID = value.User_ID;
					}
					else
					{
						this._Primary_Retention_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization1", Storage="_User1", ThisKey="Primary_Salesperson_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Organizations1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Organizations1.Add(this);
						this._Primary_Salesperson_ID = value.User_ID;
					}
					else
					{
						this._Primary_Salesperson_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization2", Storage="_User2", ThisKey="Primary_Internal_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.Organizations2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.Organizations2.Add(this);
						this._Primary_Internal_ID = value.User_ID;
					}
					else
					{
						this._Primary_Internal_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization3", Storage="_User3", ThisKey="Sales_Commission_Due_To", OtherKey="User_ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.Organizations3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.Organizations3.Add(this);
						this._Sales_Commission_Due_To = value.User_ID;
					}
					else
					{
						this._Sales_Commission_Due_To = default(Nullable<int>);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Organization4", Storage="_User4", ThisKey="Retention_Commission_Due_To", OtherKey="User_ID", IsForeignKey=true)]
		public User User4
		{
			get
			{
				return this._User4.Entity;
			}
			set
			{
				User previousValue = this._User4.Entity;
				if (((previousValue != value) 
							|| (this._User4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User4.Entity = null;
						previousValue.Organizations4.Remove(this);
					}
					this._User4.Entity = value;
					if ((value != null))
					{
						value.Organizations4.Add(this);
						this._Retention_Commission_Due_To = value.User_ID;
					}
					else
					{
						this._Retention_Commission_Due_To = default(Nullable<int>);
					}
					this.SendPropertyChanged("User4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Detail_Log")]
	public partial class Ticket_Detail_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_ID;
		
		private int _Ticket_Detail_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_IDChanging(int value);
    partial void OnTicket_IDChanged();
    partial void OnTicket_Detail_IDChanging(int value);
    partial void OnTicket_Detail_IDChanged();
    #endregion
		
		public Ticket_Detail_Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ticket_ID
		{
			get
			{
				return this._Ticket_ID;
			}
			set
			{
				if ((this._Ticket_ID != value))
				{
					this.OnTicket_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_ID = value;
					this.SendPropertyChanged("Ticket_ID");
					this.OnTicket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Detail_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ticket_Detail_ID
		{
			get
			{
				return this._Ticket_Detail_ID;
			}
			set
			{
				if ((this._Ticket_Detail_ID != value))
				{
					this.OnTicket_Detail_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Detail_ID = value;
					this.SendPropertyChanged("Ticket_Detail_ID");
					this.OnTicket_Detail_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tickets")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_ID;
		
		private int _Ticket_Stage_ID;
		
		private int _Ticket_Error_ID;
		
		private int _Ticket_Source_ID;
		
		private int _Ticket_Error_Classification_ID;
		
		private int _Ticket_Status_ID;
		
		private string _Title;
		
		private string _Ticket_Details;
		
		private string _Resolution_Details;
		
		private System.Nullable<int> _Assigned__To_ID;
		
		private System.Nullable<int> _Responsible_ID;
		
		private System.DateTime _Date_Created;
		
		private int _Created_By_ID;
		
		private int _Modified_By_ID;
		
		private System.DateTime _Date_Modified;
		
		private System.Nullable<int> _Item_ID;
		
		private string _Item_Name;
		
		private System.Nullable<int> _Acc_ID;
		
		private string _Accession_No;
		
		private System.Data.Linq.Binary _QIR_Document;
		
		private System.Nullable<int> _Lab_Issue_Error_ID;
		
		private bool _Urgent;
		
		private EntitySet<Ticket_Log> _Ticket_Logs;
		
		private EntityRef<Ticket> _Ticket2;
		
		private EntityRef<Ticket_Error_Classification> _Ticket_Error_Classification;
		
		private EntityRef<Ticket_Source> _Ticket_Source;
		
		private EntityRef<Ticket_Stage> _Ticket_Stage;
		
		private EntityRef<Ticket_Statuse> _Ticket_Statuse;
		
		private EntityRef<Ticket> _Ticket1;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<User> _User2;
		
		private EntityRef<User> _User3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_IDChanging(int value);
    partial void OnTicket_IDChanged();
    partial void OnTicket_Stage_IDChanging(int value);
    partial void OnTicket_Stage_IDChanged();
    partial void OnTicket_Error_IDChanging(int value);
    partial void OnTicket_Error_IDChanged();
    partial void OnTicket_Source_IDChanging(int value);
    partial void OnTicket_Source_IDChanged();
    partial void OnTicket_Error_Classification_IDChanging(int value);
    partial void OnTicket_Error_Classification_IDChanged();
    partial void OnTicket_Status_IDChanging(int value);
    partial void OnTicket_Status_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTicket_DetailsChanging(string value);
    partial void OnTicket_DetailsChanged();
    partial void OnResolution_DetailsChanging(string value);
    partial void OnResolution_DetailsChanged();
    partial void OnAssigned__To_IDChanging(System.Nullable<int> value);
    partial void OnAssigned__To_IDChanged();
    partial void OnResponsible_IDChanging(System.Nullable<int> value);
    partial void OnResponsible_IDChanged();
    partial void OnDate_CreatedChanging(System.DateTime value);
    partial void OnDate_CreatedChanged();
    partial void OnCreated_By_IDChanging(int value);
    partial void OnCreated_By_IDChanged();
    partial void OnModified_By_IDChanging(int value);
    partial void OnModified_By_IDChanged();
    partial void OnDate_ModifiedChanging(System.DateTime value);
    partial void OnDate_ModifiedChanged();
    partial void OnItem_IDChanging(System.Nullable<int> value);
    partial void OnItem_IDChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnAcc_IDChanging(System.Nullable<int> value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnQIR_DocumentChanging(System.Data.Linq.Binary value);
    partial void OnQIR_DocumentChanged();
    partial void OnLab_Issue_Error_IDChanging(System.Nullable<int> value);
    partial void OnLab_Issue_Error_IDChanged();
    partial void OnUrgentChanging(bool value);
    partial void OnUrgentChanged();
    #endregion
		
		public Ticket()
		{
			this._Ticket_Logs = new EntitySet<Ticket_Log>(new Action<Ticket_Log>(this.attach_Ticket_Logs), new Action<Ticket_Log>(this.detach_Ticket_Logs));
			this._Ticket2 = default(EntityRef<Ticket>);
			this._Ticket_Error_Classification = default(EntityRef<Ticket_Error_Classification>);
			this._Ticket_Source = default(EntityRef<Ticket_Source>);
			this._Ticket_Stage = default(EntityRef<Ticket_Stage>);
			this._Ticket_Statuse = default(EntityRef<Ticket_Statuse>);
			this._Ticket1 = default(EntityRef<Ticket>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._User2 = default(EntityRef<User>);
			this._User3 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_ID
		{
			get
			{
				return this._Ticket_ID;
			}
			set
			{
				if ((this._Ticket_ID != value))
				{
					if (this._Ticket1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_ID = value;
					this.SendPropertyChanged("Ticket_ID");
					this.OnTicket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Stage_ID", DbType="Int NOT NULL")]
		public int Ticket_Stage_ID
		{
			get
			{
				return this._Ticket_Stage_ID;
			}
			set
			{
				if ((this._Ticket_Stage_ID != value))
				{
					if (this._Ticket_Stage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Stage_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Stage_ID = value;
					this.SendPropertyChanged("Ticket_Stage_ID");
					this.OnTicket_Stage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_ID", DbType="Int NOT NULL")]
		public int Ticket_Error_ID
		{
			get
			{
				return this._Ticket_Error_ID;
			}
			set
			{
				if ((this._Ticket_Error_ID != value))
				{
					this.OnTicket_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_ID = value;
					this.SendPropertyChanged("Ticket_Error_ID");
					this.OnTicket_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Source_ID", DbType="Int NOT NULL")]
		public int Ticket_Source_ID
		{
			get
			{
				return this._Ticket_Source_ID;
			}
			set
			{
				if ((this._Ticket_Source_ID != value))
				{
					if (this._Ticket_Source.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Source_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Source_ID = value;
					this.SendPropertyChanged("Ticket_Source_ID");
					this.OnTicket_Source_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Error_Classification_ID", DbType="Int NOT NULL")]
		public int Ticket_Error_Classification_ID
		{
			get
			{
				return this._Ticket_Error_Classification_ID;
			}
			set
			{
				if ((this._Ticket_Error_Classification_ID != value))
				{
					if (this._Ticket_Error_Classification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Error_Classification_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Error_Classification_ID = value;
					this.SendPropertyChanged("Ticket_Error_Classification_ID");
					this.OnTicket_Error_Classification_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Status_ID", DbType="Int NOT NULL")]
		public int Ticket_Status_ID
		{
			get
			{
				return this._Ticket_Status_ID;
			}
			set
			{
				if ((this._Ticket_Status_ID != value))
				{
					if (this._Ticket_Statuse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Status_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Status_ID = value;
					this.SendPropertyChanged("Ticket_Status_ID");
					this.OnTicket_Status_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Details", DbType="NVarChar(2500) NOT NULL", CanBeNull=false)]
		public string Ticket_Details
		{
			get
			{
				return this._Ticket_Details;
			}
			set
			{
				if ((this._Ticket_Details != value))
				{
					this.OnTicket_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Details = value;
					this.SendPropertyChanged("Ticket_Details");
					this.OnTicket_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution_Details", DbType="NVarChar(500)")]
		public string Resolution_Details
		{
			get
			{
				return this._Resolution_Details;
			}
			set
			{
				if ((this._Resolution_Details != value))
				{
					this.OnResolution_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Resolution_Details = value;
					this.SendPropertyChanged("Resolution_Details");
					this.OnResolution_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Assigned _To_ID]", Storage="_Assigned__To_ID", DbType="Int")]
		public System.Nullable<int> Assigned__To_ID
		{
			get
			{
				return this._Assigned__To_ID;
			}
			set
			{
				if ((this._Assigned__To_ID != value))
				{
					this.OnAssigned__To_IDChanging(value);
					this.SendPropertyChanging();
					this._Assigned__To_ID = value;
					this.SendPropertyChanged("Assigned__To_ID");
					this.OnAssigned__To_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible_ID", DbType="Int")]
		public System.Nullable<int> Responsible_ID
		{
			get
			{
				return this._Responsible_ID;
			}
			set
			{
				if ((this._Responsible_ID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsible_IDChanging(value);
					this.SendPropertyChanging();
					this._Responsible_ID = value;
					this.SendPropertyChanged("Responsible_ID");
					this.OnResponsible_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this.OnDate_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Date_Created = value;
					this.SendPropertyChanged("Date_Created");
					this.OnDate_CreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By_ID", DbType="Int NOT NULL")]
		public int Created_By_ID
		{
			get
			{
				return this._Created_By_ID;
			}
			set
			{
				if ((this._Created_By_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreated_By_IDChanging(value);
					this.SendPropertyChanging();
					this._Created_By_ID = value;
					this.SendPropertyChanged("Created_By_ID");
					this.OnCreated_By_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By_ID", DbType="Int NOT NULL")]
		public int Modified_By_ID
		{
			get
			{
				return this._Modified_By_ID;
			}
			set
			{
				if ((this._Modified_By_ID != value))
				{
					if (this._User3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModified_By_IDChanging(value);
					this.SendPropertyChanging();
					this._Modified_By_ID = value;
					this.SendPropertyChanged("Modified_By_ID");
					this.OnModified_By_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Modified", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Modified
		{
			get
			{
				return this._Date_Modified;
			}
			set
			{
				if ((this._Date_Modified != value))
				{
					this.OnDate_ModifiedChanging(value);
					this.SendPropertyChanging();
					this._Date_Modified = value;
					this.SendPropertyChanged("Date_Modified");
					this.OnDate_ModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int")]
		public System.Nullable<int> Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(255)")]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int")]
		public System.Nullable<int> Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(255)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QIR_Document", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary QIR_Document
		{
			get
			{
				return this._QIR_Document;
			}
			set
			{
				if ((this._QIR_Document != value))
				{
					this.OnQIR_DocumentChanging(value);
					this.SendPropertyChanging();
					this._QIR_Document = value;
					this.SendPropertyChanged("QIR_Document");
					this.OnQIR_DocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lab_Issue_Error_ID", DbType="Int")]
		public System.Nullable<int> Lab_Issue_Error_ID
		{
			get
			{
				return this._Lab_Issue_Error_ID;
			}
			set
			{
				if ((this._Lab_Issue_Error_ID != value))
				{
					this.OnLab_Issue_Error_IDChanging(value);
					this.SendPropertyChanging();
					this._Lab_Issue_Error_ID = value;
					this.SendPropertyChanged("Lab_Issue_Error_ID");
					this.OnLab_Issue_Error_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urgent", DbType="Bit NOT NULL")]
		public bool Urgent
		{
			get
			{
				return this._Urgent;
			}
			set
			{
				if ((this._Urgent != value))
				{
					this.OnUrgentChanging(value);
					this.SendPropertyChanging();
					this._Urgent = value;
					this.SendPropertyChanged("Urgent");
					this.OnUrgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket_Log", Storage="_Ticket_Logs", ThisKey="Ticket_ID", OtherKey="Ticket_ID")]
		public EntitySet<Ticket_Log> Ticket_Logs
		{
			get
			{
				return this._Ticket_Logs;
			}
			set
			{
				this._Ticket_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket", Storage="_Ticket2", ThisKey="Ticket_ID", OtherKey="Ticket_ID", IsUnique=true, IsForeignKey=false)]
		public Ticket Ticket2
		{
			get
			{
				return this._Ticket2.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket2.Entity;
				if (((previousValue != value) 
							|| (this._Ticket2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket2.Entity = null;
						previousValue.Ticket1 = null;
					}
					this._Ticket2.Entity = value;
					if ((value != null))
					{
						value.Ticket1 = this;
					}
					this.SendPropertyChanged("Ticket2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Error_Classification_Ticket", Storage="_Ticket_Error_Classification", ThisKey="Ticket_Error_Classification_ID", OtherKey="Ticket_Error_Classification_ID", IsForeignKey=true)]
		public Ticket_Error_Classification Ticket_Error_Classification
		{
			get
			{
				return this._Ticket_Error_Classification.Entity;
			}
			set
			{
				Ticket_Error_Classification previousValue = this._Ticket_Error_Classification.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Error_Classification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Error_Classification.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Error_Classification.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._Ticket_Error_Classification_ID = value.Ticket_Error_Classification_ID;
					}
					else
					{
						this._Ticket_Error_Classification_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Error_Classification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Source_Ticket", Storage="_Ticket_Source", ThisKey="Ticket_Source_ID", OtherKey="Ticket_Source_ID", IsForeignKey=true)]
		public Ticket_Source Ticket_Source
		{
			get
			{
				return this._Ticket_Source.Entity;
			}
			set
			{
				Ticket_Source previousValue = this._Ticket_Source.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Source.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Source.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Source.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._Ticket_Source_ID = value.Ticket_Source_ID;
					}
					else
					{
						this._Ticket_Source_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Source");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Stage_Ticket", Storage="_Ticket_Stage", ThisKey="Ticket_Stage_ID", OtherKey="Ticket_Stage_ID", IsForeignKey=true)]
		public Ticket_Stage Ticket_Stage
		{
			get
			{
				return this._Ticket_Stage.Entity;
			}
			set
			{
				Ticket_Stage previousValue = this._Ticket_Stage.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Stage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Stage.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Stage.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._Ticket_Stage_ID = value.Ticket_Stage_ID;
					}
					else
					{
						this._Ticket_Stage_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Stage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Statuse_Ticket", Storage="_Ticket_Statuse", ThisKey="Ticket_Status_ID", OtherKey="Ticket_Status_ID", IsForeignKey=true)]
		public Ticket_Statuse Ticket_Statuse
		{
			get
			{
				return this._Ticket_Statuse.Entity;
			}
			set
			{
				Ticket_Statuse previousValue = this._Ticket_Statuse.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Statuse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Statuse.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Statuse.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._Ticket_Status_ID = value.Ticket_Status_ID;
					}
					else
					{
						this._Ticket_Status_ID = default(int);
					}
					this.SendPropertyChanged("Ticket_Statuse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket", Storage="_Ticket1", ThisKey="Ticket_ID", OtherKey="Ticket_ID", IsForeignKey=true)]
		public Ticket Ticket1
		{
			get
			{
				return this._Ticket1.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket1.Entity = null;
						previousValue.Ticket2 = null;
					}
					this._Ticket1.Entity = value;
					if ((value != null))
					{
						value.Ticket2 = this;
						this._Ticket_ID = value.Ticket_ID;
					}
					else
					{
						this._Ticket_ID = default(int);
					}
					this.SendPropertyChanged("Ticket1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_User", ThisKey="Created_By_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._Created_By_ID = value.User_ID;
					}
					else
					{
						this._Created_By_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket1", Storage="_User1", ThisKey="Responsible_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Tickets1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Tickets1.Add(this);
						this._Responsible_ID = value.User_ID;
					}
					else
					{
						this._Responsible_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket2", Storage="_User2", ThisKey="Assigned__To_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.Tickets2.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.Tickets2.Add(this);
						this._Assigned__To_ID = value.User_ID;
					}
					else
					{
						this._Assigned__To_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket3", Storage="_User3", ThisKey="Modified_By_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User3
		{
			get
			{
				return this._User3.Entity;
			}
			set
			{
				User previousValue = this._User3.Entity;
				if (((previousValue != value) 
							|| (this._User3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User3.Entity = null;
						previousValue.Tickets3.Remove(this);
					}
					this._User3.Entity = value;
					if ((value != null))
					{
						value.Tickets3.Add(this);
						this._Modified_By_ID = value.User_ID;
					}
					else
					{
						this._Modified_By_ID = default(int);
					}
					this.SendPropertyChanged("User3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_Ticket_Logs(Ticket_Log entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temp_Slides")]
	public partial class Temp_Slide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Slide_ID;
		
		private int _Acc_ID;
		
		private string _Accession_No;
		
		private string _Slide_Number;
		
		private string _Procedure_Name;
		
		private string _Specimen_Name;
		
		private string _Case_Final;
		
		private System.Nullable<int> _Item_ID;
		
		private System.Nullable<System.DateTime> _time_stamp;
		
		private System.Nullable<int> _Assigned_To_ID;
		
		private System.Nullable<int> _Ordered_By_ID;
		
		private string _Order_Instructions;
		
		private string _Status_Final;
		
		private System.Nullable<char> _Priority;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlide_IDChanging(int value);
    partial void OnSlide_IDChanged();
    partial void OnAcc_IDChanging(int value);
    partial void OnAcc_IDChanged();
    partial void OnAccession_NoChanging(string value);
    partial void OnAccession_NoChanged();
    partial void OnSlide_NumberChanging(string value);
    partial void OnSlide_NumberChanged();
    partial void OnProcedure_NameChanging(string value);
    partial void OnProcedure_NameChanged();
    partial void OnSpecimen_NameChanging(string value);
    partial void OnSpecimen_NameChanged();
    partial void OnCase_FinalChanging(string value);
    partial void OnCase_FinalChanged();
    partial void OnItem_IDChanging(System.Nullable<int> value);
    partial void OnItem_IDChanged();
    partial void Ontime_stampChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_stampChanged();
    partial void OnAssigned_To_IDChanging(System.Nullable<int> value);
    partial void OnAssigned_To_IDChanged();
    partial void OnOrdered_By_IDChanging(System.Nullable<int> value);
    partial void OnOrdered_By_IDChanged();
    partial void OnOrder_InstructionsChanging(string value);
    partial void OnOrder_InstructionsChanged();
    partial void OnStatus_FinalChanging(string value);
    partial void OnStatus_FinalChanged();
    partial void OnPriorityChanging(System.Nullable<char> value);
    partial void OnPriorityChanged();
    #endregion
		
		public Temp_Slide()
		{
			this._Item = default(EntityRef<Item>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Slide_ID
		{
			get
			{
				return this._Slide_ID;
			}
			set
			{
				if ((this._Slide_ID != value))
				{
					this.OnSlide_IDChanging(value);
					this.SendPropertyChanging();
					this._Slide_ID = value;
					this.SendPropertyChanged("Slide_ID");
					this.OnSlide_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acc_ID", DbType="Int NOT NULL")]
		public int Acc_ID
		{
			get
			{
				return this._Acc_ID;
			}
			set
			{
				if ((this._Acc_ID != value))
				{
					this.OnAcc_IDChanging(value);
					this.SendPropertyChanging();
					this._Acc_ID = value;
					this.SendPropertyChanged("Acc_ID");
					this.OnAcc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this.OnAccession_NoChanging(value);
					this.SendPropertyChanging();
					this._Accession_No = value;
					this.SendPropertyChanged("Accession_No");
					this.OnAccession_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_Number", DbType="NVarChar(10)")]
		public string Slide_Number
		{
			get
			{
				return this._Slide_Number;
			}
			set
			{
				if ((this._Slide_Number != value))
				{
					this.OnSlide_NumberChanging(value);
					this.SendPropertyChanging();
					this._Slide_Number = value;
					this.SendPropertyChanged("Slide_Number");
					this.OnSlide_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procedure_Name", DbType="NVarChar(300)")]
		public string Procedure_Name
		{
			get
			{
				return this._Procedure_Name;
			}
			set
			{
				if ((this._Procedure_Name != value))
				{
					this.OnProcedure_NameChanging(value);
					this.SendPropertyChanging();
					this._Procedure_Name = value;
					this.SendPropertyChanged("Procedure_Name");
					this.OnProcedure_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen_Name", DbType="NVarChar(300)")]
		public string Specimen_Name
		{
			get
			{
				return this._Specimen_Name;
			}
			set
			{
				if ((this._Specimen_Name != value))
				{
					this.OnSpecimen_NameChanging(value);
					this.SendPropertyChanging();
					this._Specimen_Name = value;
					this.SendPropertyChanged("Specimen_Name");
					this.OnSpecimen_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Case_Final", DbType="NVarChar(5)")]
		public string Case_Final
		{
			get
			{
				return this._Case_Final;
			}
			set
			{
				if ((this._Case_Final != value))
				{
					this.OnCase_FinalChanging(value);
					this.SendPropertyChanging();
					this._Case_Final = value;
					this.SendPropertyChanged("Case_Final");
					this.OnCase_FinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int")]
		public System.Nullable<int> Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_stamp
		{
			get
			{
				return this._time_stamp;
			}
			set
			{
				if ((this._time_stamp != value))
				{
					this.Ontime_stampChanging(value);
					this.SendPropertyChanging();
					this._time_stamp = value;
					this.SendPropertyChanged("time_stamp");
					this.Ontime_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned_To_ID", DbType="Int")]
		public System.Nullable<int> Assigned_To_ID
		{
			get
			{
				return this._Assigned_To_ID;
			}
			set
			{
				if ((this._Assigned_To_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssigned_To_IDChanging(value);
					this.SendPropertyChanging();
					this._Assigned_To_ID = value;
					this.SendPropertyChanged("Assigned_To_ID");
					this.OnAssigned_To_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordered_By_ID", DbType="Int")]
		public System.Nullable<int> Ordered_By_ID
		{
			get
			{
				return this._Ordered_By_ID;
			}
			set
			{
				if ((this._Ordered_By_ID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdered_By_IDChanging(value);
					this.SendPropertyChanging();
					this._Ordered_By_ID = value;
					this.SendPropertyChanged("Ordered_By_ID");
					this.OnOrdered_By_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Instructions", DbType="NVarChar(255)")]
		public string Order_Instructions
		{
			get
			{
				return this._Order_Instructions;
			}
			set
			{
				if ((this._Order_Instructions != value))
				{
					this.OnOrder_InstructionsChanging(value);
					this.SendPropertyChanging();
					this._Order_Instructions = value;
					this.SendPropertyChanged("Order_Instructions");
					this.OnOrder_InstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Final", DbType="NVarChar(5)")]
		public string Status_Final
		{
			get
			{
				return this._Status_Final;
			}
			set
			{
				if ((this._Status_Final != value))
				{
					this.OnStatus_FinalChanging(value);
					this.SendPropertyChanging();
					this._Status_Final = value;
					this.SendPropertyChanged("Status_Final");
					this.OnStatus_FinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Char(1)")]
		public System.Nullable<char> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Temp_Slide", Storage="_Item", ThisKey="Item_ID", OtherKey="Item_ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Temp_Slides.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Temp_Slides.Add(this);
						this._Item_ID = value.Item_ID;
					}
					else
					{
						this._Item_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Temp_Slide", Storage="_User", ThisKey="Assigned_To_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Temp_Slides.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Temp_Slides.Add(this);
						this._Assigned_To_ID = value.User_ID;
					}
					else
					{
						this._Assigned_To_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Temp_Slide1", Storage="_User1", ThisKey="Ordered_By_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Temp_Slides1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Temp_Slides1.Add(this);
						this._Ordered_By_ID = value.User_ID;
					}
					else
					{
						this._Ordered_By_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Print_Template_Variables")]
	public partial class Print_Template_Variable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Print_Template_Variable_ID;
		
		private int _Print_Template_ID;
		
		private string _Name;
		
		private string _Alt_Name;
		
		private int _Length;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrint_Template_Variable_IDChanging(int value);
    partial void OnPrint_Template_Variable_IDChanged();
    partial void OnPrint_Template_IDChanging(int value);
    partial void OnPrint_Template_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAlt_NameChanging(string value);
    partial void OnAlt_NameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    #endregion
		
		public Print_Template_Variable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Print_Template_Variable_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Print_Template_Variable_ID
		{
			get
			{
				return this._Print_Template_Variable_ID;
			}
			set
			{
				if ((this._Print_Template_Variable_ID != value))
				{
					this.OnPrint_Template_Variable_IDChanging(value);
					this.SendPropertyChanging();
					this._Print_Template_Variable_ID = value;
					this.SendPropertyChanged("Print_Template_Variable_ID");
					this.OnPrint_Template_Variable_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Print_Template_ID", DbType="Int NOT NULL")]
		public int Print_Template_ID
		{
			get
			{
				return this._Print_Template_ID;
			}
			set
			{
				if ((this._Print_Template_ID != value))
				{
					this.OnPrint_Template_IDChanging(value);
					this.SendPropertyChanging();
					this._Print_Template_ID = value;
					this.SendPropertyChanged("Print_Template_ID");
					this.OnPrint_Template_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alt_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Alt_Name
		{
			get
			{
				return this._Alt_Name;
			}
			set
			{
				if ((this._Alt_Name != value))
				{
					this.OnAlt_NameChanging(value);
					this.SendPropertyChanging();
					this._Alt_Name = value;
					this.SendPropertyChanged("Alt_Name");
					this.OnAlt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Print_Templates")]
	public partial class Print_Template : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Print_Template_ID;
		
		private string _Description;
		
		private string _UNC;
		
		private string _Parameter;
		
		private string _Job_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrint_Template_IDChanging(int value);
    partial void OnPrint_Template_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUNCChanging(string value);
    partial void OnUNCChanged();
    partial void OnParameterChanging(string value);
    partial void OnParameterChanged();
    partial void OnJob_PathChanging(string value);
    partial void OnJob_PathChanged();
    #endregion
		
		public Print_Template()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Print_Template_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Print_Template_ID
		{
			get
			{
				return this._Print_Template_ID;
			}
			set
			{
				if ((this._Print_Template_ID != value))
				{
					this.OnPrint_Template_IDChanging(value);
					this.SendPropertyChanging();
					this._Print_Template_ID = value;
					this.SendPropertyChanged("Print_Template_ID");
					this.OnPrint_Template_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UNC
		{
			get
			{
				return this._UNC;
			}
			set
			{
				if ((this._UNC != value))
				{
					this.OnUNCChanging(value);
					this.SendPropertyChanging();
					this._UNC = value;
					this.SendPropertyChanged("UNC");
					this.OnUNCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="NVarChar(50)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_Path", DbType="NVarChar(100)")]
		public string Job_Path
		{
			get
			{
				return this._Job_Path;
			}
			set
			{
				if ((this._Job_Path != value))
				{
					this.OnJob_PathChanging(value);
					this.SendPropertyChanging();
					this._Job_Path = value;
					this.SendPropertyChanged("Job_Path");
					this.OnJob_PathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Group_Users")]
	public partial class Ticket_Group_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Group_User_ID;
		
		private System.Nullable<int> _Ticket_Group_ID;
		
		private System.Nullable<int> _User_ID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Ticket_Group> _Ticket_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Group_User_IDChanging(int value);
    partial void OnTicket_Group_User_IDChanged();
    partial void OnTicket_Group_IDChanging(System.Nullable<int> value);
    partial void OnTicket_Group_IDChanged();
    partial void OnUser_IDChanging(System.Nullable<int> value);
    partial void OnUser_IDChanged();
    #endregion
		
		public Ticket_Group_User()
		{
			this._User = default(EntityRef<User>);
			this._Ticket_Group = default(EntityRef<Ticket_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Group_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Group_User_ID
		{
			get
			{
				return this._Ticket_Group_User_ID;
			}
			set
			{
				if ((this._Ticket_Group_User_ID != value))
				{
					this.OnTicket_Group_User_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Group_User_ID = value;
					this.SendPropertyChanged("Ticket_Group_User_ID");
					this.OnTicket_Group_User_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Group_ID", DbType="Int")]
		public System.Nullable<int> Ticket_Group_ID
		{
			get
			{
				return this._Ticket_Group_ID;
			}
			set
			{
				if ((this._Ticket_Group_ID != value))
				{
					if (this._Ticket_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicket_Group_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Group_ID = value;
					this.SendPropertyChanged("Ticket_Group_ID");
					this.OnTicket_Group_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int")]
		public System.Nullable<int> User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket_Group_User", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Ticket_Group_Users.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Ticket_Group_Users.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Group_Ticket_Group_User", Storage="_Ticket_Group", ThisKey="Ticket_Group_ID", OtherKey="Ticket_Group_ID", IsForeignKey=true)]
		public Ticket_Group Ticket_Group
		{
			get
			{
				return this._Ticket_Group.Entity;
			}
			set
			{
				Ticket_Group previousValue = this._Ticket_Group.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Group.Entity = null;
						previousValue.Ticket_Group_Users.Remove(this);
					}
					this._Ticket_Group.Entity = value;
					if ((value != null))
					{
						value.Ticket_Group_Users.Add(this);
						this._Ticket_Group_ID = value.Ticket_Group_ID;
					}
					else
					{
						this._Ticket_Group_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ticket_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Groups")]
	public partial class Ticket_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_Group_ID;
		
		private string _Description;
		
		private EntitySet<Ticket_Group_User> _Ticket_Group_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_Group_IDChanging(int value);
    partial void OnTicket_Group_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Ticket_Group()
		{
			this._Ticket_Group_Users = new EntitySet<Ticket_Group_User>(new Action<Ticket_Group_User>(this.attach_Ticket_Group_Users), new Action<Ticket_Group_User>(this.detach_Ticket_Group_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_Group_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_Group_ID
		{
			get
			{
				return this._Ticket_Group_ID;
			}
			set
			{
				if ((this._Ticket_Group_ID != value))
				{
					this.OnTicket_Group_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_Group_ID = value;
					this.SendPropertyChanged("Ticket_Group_ID");
					this.OnTicket_Group_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Group_Ticket_Group_User", Storage="_Ticket_Group_Users", ThisKey="Ticket_Group_ID", OtherKey="Ticket_Group_ID")]
		public EntitySet<Ticket_Group_User> Ticket_Group_Users
		{
			get
			{
				return this._Ticket_Group_Users;
			}
			set
			{
				this._Ticket_Group_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Group_Users(Ticket_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Group = this;
		}
		
		private void detach_Ticket_Group_Users(Ticket_Group_User entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Group = null;
		}
	}
	
	public partial class SP_Get_Slide_Counts_In_TrayResult
	{
		
		private string _accession_no;
		
		private System.Nullable<int> _slides_on_tray;
		
		private System.Nullable<int> _slides_in_case;
		
		public SP_Get_Slide_Counts_In_TrayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accession_no", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string accession_no
		{
			get
			{
				return this._accession_no;
			}
			set
			{
				if ((this._accession_no != value))
				{
					this._accession_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slides_on_tray", DbType="Int")]
		public System.Nullable<int> slides_on_tray
		{
			get
			{
				return this._slides_on_tray;
			}
			set
			{
				if ((this._slides_on_tray != value))
				{
					this._slides_on_tray = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slides_in_case", DbType="Int")]
		public System.Nullable<int> slides_in_case
		{
			get
			{
				return this._slides_in_case;
			}
			set
			{
				if ((this._slides_in_case != value))
				{
					this._slides_in_case = value;
				}
			}
		}
	}
	
	public partial class SP_Insert_Activity_LogResult
	{
		
		private System.Nullable<int> _Column1;
		
		public SP_Insert_Activity_LogResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class SP_Get_Pathologist_Location_From_Calix_TodayResult
	{
		
		private int _Location_ID;
		
		private string _Day;
		
		private System.Nullable<int> _Slide_Location_ID;
		
		private int _Bench_Day_ID;
		
		private System.Nullable<int> _Bench_Location_ID;
		
		private string _Location;
		
		private int _Percent_Available;
		
		private string _Destination;
		
		private System.Nullable<int> _Destination_ID;
		
		private string _Path_Name;
		
		public SP_Get_Pathologist_Location_From_Calix_TodayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					this._Location_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this._Day = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_Location_ID", DbType="Int")]
		public System.Nullable<int> Slide_Location_ID
		{
			get
			{
				return this._Slide_Location_ID;
			}
			set
			{
				if ((this._Slide_Location_ID != value))
				{
					this._Slide_Location_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bench_Day_ID", DbType="Int NOT NULL")]
		public int Bench_Day_ID
		{
			get
			{
				return this._Bench_Day_ID;
			}
			set
			{
				if ((this._Bench_Day_ID != value))
				{
					this._Bench_Day_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bench_Location_ID", DbType="Int")]
		public System.Nullable<int> Bench_Location_ID
		{
			get
			{
				return this._Bench_Location_ID;
			}
			set
			{
				if ((this._Bench_Location_ID != value))
				{
					this._Bench_Location_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent_Available", DbType="Int NOT NULL")]
		public int Percent_Available
		{
			get
			{
				return this._Percent_Available;
			}
			set
			{
				if ((this._Percent_Available != value))
				{
					this._Percent_Available = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(500)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination_ID", DbType="Int")]
		public System.Nullable<int> Destination_ID
		{
			get
			{
				return this._Destination_ID;
			}
			set
			{
				if ((this._Destination_ID != value))
				{
					this._Destination_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path_Name", DbType="NVarChar(201)")]
		public string Path_Name
		{
			get
			{
				return this._Path_Name;
			}
			set
			{
				if ((this._Path_Name != value))
				{
					this._Path_Name = value;
				}
			}
		}
	}
	
	public partial class SP_Get_Shipments_Assigned_To_IDResult
	{
		
		private int _Item_ID;
		
		private int _Item_Group_ID;
		
		private int _User_ID;
		
		private int _Location_ID;
		
		private string _Manifest;
		
		private System.DateTime _Time;
		
		private string _Destination;
		
		private string _Created_By;
		
		public SP_Get_Shipments_Assigned_To_IDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Group_ID", DbType="Int NOT NULL")]
		public int Item_Group_ID
		{
			get
			{
				return this._Item_Group_ID;
			}
			set
			{
				if ((this._Item_Group_ID != value))
				{
					this._Item_Group_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_ID", DbType="Int NOT NULL")]
		public int Location_ID
		{
			get
			{
				return this._Location_ID;
			}
			set
			{
				if ((this._Location_ID != value))
				{
					this._Location_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manifest", DbType="VarChar(32)")]
		public string Manifest
		{
			get
			{
				return this._Manifest;
			}
			set
			{
				if ((this._Manifest != value))
				{
					this._Manifest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(500)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="NVarChar(201)")]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this._Created_By = value;
				}
			}
		}
	}
	
	public partial class SP_Crystal_Manifest_Part3Result
	{
		
		private string _Item_ID;
		
		private string _Source;
		
		private string _Destination;
		
		private string _abbreviation;
		
		private string _Created_By;
		
		private string _Assigned_To;
		
		private System.DateTime _Created_On;
		
		private int _SrcLocation_ID;
		
		private int _DestLocation_ID;
		
		private string _iCount;
		
		private string _BC;
		
		private string _Status;
		
		public SP_Crystal_Manifest_Part3Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="NVarChar(255)")]
		public string Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="NVarChar(75)")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this._Destination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbreviation", DbType="NVarChar(10)")]
		public string abbreviation
		{
			get
			{
				return this._abbreviation;
			}
			set
			{
				if ((this._abbreviation != value))
				{
					this._abbreviation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Created By]", Storage="_Created_By", DbType="NVarChar(201)")]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this._Created_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Assigned To]", Storage="_Assigned_To", DbType="NVarChar(201) NOT NULL", CanBeNull=false)]
		public string Assigned_To
		{
			get
			{
				return this._Assigned_To;
			}
			set
			{
				if ((this._Assigned_To != value))
				{
					this._Assigned_To = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Created On]", Storage="_Created_On", DbType="DateTime NOT NULL")]
		public System.DateTime Created_On
		{
			get
			{
				return this._Created_On;
			}
			set
			{
				if ((this._Created_On != value))
				{
					this._Created_On = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SrcLocation_ID", DbType="Int NOT NULL")]
		public int SrcLocation_ID
		{
			get
			{
				return this._SrcLocation_ID;
			}
			set
			{
				if ((this._SrcLocation_ID != value))
				{
					this._SrcLocation_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestLocation_ID", DbType="Int NOT NULL")]
		public int DestLocation_ID
		{
			get
			{
				return this._DestLocation_ID;
			}
			set
			{
				if ((this._DestLocation_ID != value))
				{
					this._DestLocation_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iCount", DbType="NVarChar(3)")]
		public string iCount
		{
			get
			{
				return this._iCount;
			}
			set
			{
				if ((this._iCount != value))
				{
					this._iCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BC", DbType="NVarChar(255)")]
		public string BC
		{
			get
			{
				return this._BC;
			}
			set
			{
				if ((this._BC != value))
				{
					this._BC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class SP_Get_STS_Activity_LogResult
	{
		
		private string _Item;
		
		private string _Path;
		
		private string _Dest;
		
		private string _Delete;
		
		private int _Item_ID;
		
		private System.DateTime _Date_Created;
		
		public SP_Get_STS_Activity_LogResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(32)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(3)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dest", DbType="NVarChar(10)")]
		public string Dest
		{
			get
			{
				return this._Dest;
			}
			set
			{
				if ((this._Dest != value))
				{
					this._Dest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delete]", Storage="_Delete", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Delete
		{
			get
			{
				return this._Delete;
			}
			set
			{
				if ((this._Delete != value))
				{
					this._Delete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this._Item_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this._Date_Created = value;
				}
			}
		}
	}
	
	public partial class SP_Get_Pathologist_DeliveriesResult
	{
		
		private string _Accession_No;
		
		private string _Slide_Number;
		
		private string _Procedure_Name;
		
		private System.Nullable<System.DateTime> _time_stamp;
		
		private System.Nullable<char> _status_final;
		
		private string _Status;
		
		private string _Location;
		
		public SP_Get_Pathologist_DeliveriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this._Accession_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide_Number", DbType="NVarChar(10)")]
		public string Slide_Number
		{
			get
			{
				return this._Slide_Number;
			}
			set
			{
				if ((this._Slide_Number != value))
				{
					this._Slide_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procedure_Name", DbType="NVarChar(300)")]
		public string Procedure_Name
		{
			get
			{
				return this._Procedure_Name;
			}
			set
			{
				if ((this._Procedure_Name != value))
				{
					this._Procedure_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_stamp
		{
			get
			{
				return this._time_stamp;
			}
			set
			{
				if ((this._time_stamp != value))
				{
					this._time_stamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_final", DbType="Char(1)")]
		public System.Nullable<char> status_final
		{
			get
			{
				return this._status_final;
			}
			set
			{
				if ((this._status_final != value))
				{
					this._status_final = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
	}
	
	public partial class SP_PP_Get_Order_historyResult
	{
		
		private string _Accession_No;
		
		private string _Slide;
		
		private string _Status;
		
		private string _Modified;
		
		private string _Time_Stamp;
		
		public SP_PP_Get_Order_historyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Accession No]", Storage="_Accession_No", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this._Accession_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="NVarChar(255)")]
		public string Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this._Slide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="NVarChar(201)")]
		public string Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="VarChar(30)")]
		public string Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this._Time_Stamp = value;
				}
			}
		}
	}
	
	public partial class SP_PP_Get_Order_history_AccessionNoResult
	{
		
		private string _Accession_No;
		
		private string _Slide;
		
		private string _Status;
		
		private string _Modified;
		
		private string _Time_Stamp;
		
		private string _Worklist;
		
		public SP_PP_Get_Order_history_AccessionNoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Accession No]", Storage="_Accession_No", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this._Accession_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="NVarChar(255)")]
		public string Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this._Slide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="NVarChar(201)")]
		public string Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this._Modified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Stamp", DbType="VarChar(30)")]
		public string Time_Stamp
		{
			get
			{
				return this._Time_Stamp;
			}
			set
			{
				if ((this._Time_Stamp != value))
				{
					this._Time_Stamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worklist", DbType="NVarChar(500)")]
		public string Worklist
		{
			get
			{
				return this._Worklist;
			}
			set
			{
				if ((this._Worklist != value))
				{
					this._Worklist = value;
				}
			}
		}
	}
	
	public partial class SP_Get_Conference_ImagesResult
	{
		
		private int _Conference_Image_ID;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Description;
		
		private bool _Active;
		
		private string _Accession_No;
		
		private string _File_Name;
		
		private string _Full_Path;
		
		private string _Slide;
		
		private int _Sort_Order;
		
		public SP_Get_Conference_ImagesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conference_Image_ID", DbType="Int NOT NULL")]
		public int Conference_Image_ID
		{
			get
			{
				return this._Conference_Image_ID;
			}
			set
			{
				if ((this._Conference_Image_ID != value))
				{
					this._Conference_Image_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accession_No", DbType="NVarChar(50)")]
		public string Accession_No
		{
			get
			{
				return this._Accession_No;
			}
			set
			{
				if ((this._Accession_No != value))
				{
					this._Accession_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_File_Name", DbType="NVarChar(500)")]
		public string File_Name
		{
			get
			{
				return this._File_Name;
			}
			set
			{
				if ((this._File_Name != value))
				{
					this._File_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Path", DbType="NVarChar(500)")]
		public string Full_Path
		{
			get
			{
				return this._Full_Path;
			}
			set
			{
				if ((this._Full_Path != value))
				{
					this._Full_Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slide", DbType="NVarChar(255)")]
		public string Slide
		{
			get
			{
				return this._Slide;
			}
			set
			{
				if ((this._Slide != value))
				{
					this._Slide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort_Order", DbType="Int NOT NULL")]
		public int Sort_Order
		{
			get
			{
				return this._Sort_Order;
			}
			set
			{
				if ((this._Sort_Order != value))
				{
					this._Sort_Order = value;
				}
			}
		}
	}
	
	public partial class SP_Get_User_StatusResult
	{
		
		private int _User_ID;
		
		private string _ip_address;
		
		private string _Extension;
		
		private string _Name;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _ts;
		
		public SP_Get_User_StatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip_address", DbType="NVarChar(50)")]
		public string ip_address
		{
			get
			{
				return this._ip_address;
			}
			set
			{
				if ((this._ip_address != value))
				{
					this._ip_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(4)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(201)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ts", DbType="DateTime")]
		public System.Nullable<System.DateTime> ts
		{
			get
			{
				return this._ts;
			}
			set
			{
				if ((this._ts != value))
				{
					this._ts = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
